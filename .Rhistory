sampleUnit = NA,
size1mm = frank_past_size,
size1mm_rand = round(frank_past_size_unif, 1),
habitat = NA,
tideHTm = NA,
lat = NA,
long = NA,
Shaw_hab = NA,
notes = "day-month is unknown",
notes2 = ""
)
head(frank_present)
frank_present <- data.frame(
study = "Galloway",
studySub = NA,
species = "Chlorostoma.funebralis",
sp = "CHFU",
site = "SouthCove",
era = "present",
date = frank$Date,
nest1 = frank$`Transect#`,
nest2 = frank$`Sample#`,
nest3 = NA,
nest3note = NA,
sampleUnit = frank$SampleID,
size1mm = round(frank$Width.mm, 1),
size1mm_rand = round(frank$Width.mm, 1),
habitat = NA,
tideHTm = frank$Elevation.above.MLLW,
lat = frank$lat,
long = frank$long,
Shaw_hab = NA,
notes = "",
notes2 = ""
)
head(frank_present)
unique(frank_present$date)
# Get past sizes
frank_past_bins <- c(3.5, 10.5, 17.5, 24.5, 31.5)
frank_past_n <- c(33, 20, 431, 446, 1)
frank_past_size <- repeat_sizes(size_bin_vector = frank_past_bins,
count_vector = frank_past_n)
frank_past_size_norm <- get_random_sizes(size_bin_vector = frank_past_bins,
count_vector = frank_past_n, size_interval = 3.5,
distribution = "normal")
frank_past_size_unif <- get_random_sizes(size_bin_vector = frank_past_bins,
count_vector = frank_past_n, size_interval = 3.5,
distribution = "uniform")
hist(frank_past_size, breaks = 5)
hist(frank_past_size_norm, breaks = 5)
par(mfrow = c(1,2))
hist(frank_past_size_norm, breaks = 25)
hist(frank_past_size_unif, breaks = 25)
# Use uniformly distributed sizes
frank_past <- data.frame(
study = "Galloway",
studySub = NA,
species = "Chlorostoma.funebralis",
sp = "CHFU",
site = "SouthCove",
era = "past",
date = "5/1/1968",
nest1 = NA,
nest2 = NA,
nest3 = NA,
nest3note = NA,
sampleUnit = NA,
size1mm = frank_past_size,
size1mm_rand = round(frank_past_size_unif, 1),
habitat = NA,
tideHTm = NA,
lat = NA,
long = NA,
Shaw_hab = NA,
notes = "day-month is unknown",
notes2 = ""
)
frank2 <- rbind(frank_present, frank_past)
frank2 %>% count(era)
with(frank2, plot(size1mm, size1mm_norm))
with(frank2, plot(size1mm, size1mm_rand))
master <- rbind(ackerman2, frank2)
names(master)
library(dplyr)
library(tidyr)
library(readr)
library(lubridate)
# Get tidal correction
source("R/buttonPositions.R")
rm(list=ls(all=TRUE))
library(dplyr)
library(tidyr)
library(readr)
library(lubridate)
# Get tidal correction
source("R/buttonPositions.R")
# load data - repeated size bins
source("R/choose_size_data.R")
summary(dat)
unique(dat$date)
summary(mod1) # all three species included
summary(mod3) # excluding littorina
dat <- dat %>%
mutate(tideHTm_orig = tideHTm/3.28084,
tideHTm = tideHTm_orig * coef(mod1)[2] + coef(mod1)[1])
# Function to load cleaned data
source("R/choose_size_data.R")
rm(list=ls(all=TRUE))
library(dplyr)
library(lubridate)
# Functions to convert histogram data to vector of raw sizes
source("R/convert_histo_to_raw.R")
# load modern data, along with historic data for Lottia (Hexter)
mod <- read.csv("./data/SBSmaster_150717.csv", na.strings = c("NA"))
mod %>% distinct(era, year, date)
# Historic data for Lottia are already presented as individual values to the nearest 0.1 mm
mod %>% filter(sp == "LODI" & era == "past")
# Separate Lottia data and change year
hexPast <- mod %>% filter(era == "past") %>%
mutate(date = "7/1/1950") %>%
mutate(date = mdy(date),
year = lubridate::year(date))
hexPast %>% distinct(era, year, date)
mod <- mod %>%
filter(era == "present") %>%
mutate(date = mdy(date),
year = lubridate::year(date))
mod %>% distinct(era, year, date)
# load historic data
childs <- read.csv("./data/childs_raw.csv", na.strings = c("NA", ""))
wara <- read.csv("./data/wara_raw.csv", na.strings = c("NA", ""))
# need to expand these size-frequency tables
childs
wara # only resampled area B and area D
##### CHILDS #####
# Childs - Littorina keenae
childsA <- get_random_sizes(size_bin_vector = childs$length_mm, count_vector = childs$count_A,
size_interval = 1, distribution = "uniform")
childsB <- get_random_sizes(size_bin_vector = childs$length_mm, count_vector = childs$count_B,
size_interval = 1, distribution = "uniform")
childsC <- get_random_sizes(size_bin_vector = childs$length_mm, count_vector = childs$count_C,
size_interval = 1, distribution = "uniform")
childsD <- get_random_sizes(size_bin_vector = childs$length_mm, count_vector = childs$count_D,
size_interval = 1, distribution = "uniform")
mod %>% filter(sp == "LIKE") %>% glimpse()
childsPast <- data.frame(row = "",
species = "Littorina.keenae",
sp = "LIKE",
site = "HighRock",
era = "past",
date = "1947-06-14",
nest1 = c(rep("zoneA", length(childsA)),
rep("zoneB", length(childsB)),
rep("zoneC", length(childsC)),
rep("zoneD", length(childsD))),
nest2 = "area1",
nest3 = NA,
nest3note = NA,
sampleUnit = "",
size1mm = round(c(childsA, childsB, childsC, childsD), 1),
habitat = "bare rock",
tideHTm = "",
lat = "36.62183N",
long = "121.90516W",
Shaw_hab = NA,
notes = "",
notes2 = ""
)
childsPast <- childsPast %>% mutate(year = lubridate::year(date))
min(childsPast$size1mm)
# For comparison
childsA <- repeat_sizes(size_bin_vector = childs$length_mm, count_vector = childs$count_A)
childsB <- repeat_sizes(size_bin_vector = childs$length_mm, count_vector = childs$count_B)
childsC <- repeat_sizes(size_bin_vector = childs$length_mm, count_vector = childs$count_C)
childsD <- repeat_sizes(size_bin_vector = childs$length_mm, count_vector = childs$count_D)
childs_past_repeat <- c(childsA, childsB, childsC, childsD)
plot(density(childs_past_repeat), main = "")
lines(density(childsPast$size1mm), col = "red")
### Wara - Chlorostoma funebralis
waraB <- get_random_sizes(size_bin_vector = wara$length_mm, count_vector = wara$count_B,
size_interval = 2, distribution = "uniform")
waraD <- get_random_sizes(size_bin_vector = wara$length_mm, count_vector = wara$count_D,
size_interval = 2, distribution = "uniform")
mod %>% filter(sp == "CHFU") %>% glimpse()
waraPast <- data.frame(row = "",
species = "Chlorostoma.funebralis",
sp = "CHFU",
site = c(rep("Wara.B", length(waraB)),
rep("Wara.D", length(waraD))),
era = "past",
date = "1963-06-01",
nest1 = NA,
nest2 = NA,
nest3 = NA,
nest3note = NA,
sampleUnit = NA,
size1mm = round(c(waraB, waraD), 1),
habitat = NA,
tideHTm = NA,
lat = NA,
long = NA,
Shaw_hab = NA,
notes = "",
notes2 = ""
)
waraPast <- waraPast %>% mutate(year = lubridate::year(date))
min(waraPast$size1mm)
plot(density(waraPast$size1mm))
# For comparison
waraB <- repeat_sizes(size_bin_vector = wara$length_mm, count_vector = wara$count_B)
waraD <- repeat_sizes(size_bin_vector = wara$length_mm, count_vector = wara$count_D)
wara_past_repeat <- c(waraB, waraD)
plot(density(wara_past_repeat), main = "")
lines(density(waraPast$size1mm), col = "red")
#################################################
# Combine all three
sbsMaster <- rbind(mod, childsPast, waraPast, hexPast)
unique(sbsMaster$date)
glimpse(sbsMaster)
summary(sbsMaster)
sbsMaster$row <- seq(1:length(sbsMaster$sp))
# Subset the three species with historical size-frequency distributions
sbsMaster2 <- filter(sbsMaster, sp == "LIKE" |
sp == "CHFU" |
sp == "LODI")
sbsMaster2 <- droplevels(sbsMaster2)
summary(sbsMaster2)
# remove CHFU that were hermit crabs or brunnei
unique(sbsMaster2$notes)
with(sbsMaster2, table(notes))
sbsMaster3 <- sbsMaster2 %>% filter(notes != "hermit crab" &
notes != "brunnei"&
notes != "(hc)" &
notes != "2 snails - calliostoma and brunnei")
sbsMaster3 <- droplevels(sbsMaster3)
unique(sbsMaster3$notes)
with(sbsMaster3, table(notes))
write.csv(sbsMaster3, './output/sbsMaster_unif.csv')
################################################################################
##' @title Function to choose which size data to use
##'
##' @author Robin Elahi
##' @contact elahi.robin@gmail.com
##' @contributor
##'
##' @date 2017-10-24
##'
##' @log Add a log here
################################################################################
choose_size_data <- function(method = 'repeated'){
# Get tidal correction
source("R/buttonPositions.R")
library(dplyr)
library(tidyr)
library(readr)
library(lubridate)
# load data - repeated size bins
if(method == "repeated"){
dat <- read.csv("./output/sbsMaster.csv", na.strings = "NA",
stringsAsFactors = FALSE) %>%
select(-c(X, row))
}
# load data - normally approximated sizes
if(method == "normal"){
dat <- read.csv("./output/sbsMaster_norm.csv", na.strings = "NA",
stringsAsFactors = FALSE) %>%
select(-c(X, row))
}
# load data - uniformly approximated sizes
if(method == "uniform"){
dat <- read.csv("./output/sbsMaster_unif.csv", na.strings = "NA",
stringsAsFactors = FALSE) %>%
select(-c(X, row))
}
# change ft to meters
# dat$tideHTm <- dat$tideHTm/3.28084
# apply tidal correction, using mod1 (all three species included)
dat <- dat %>%
mutate(tideHTm_orig = tideHTm/3.28084,
tideHTm = tideHTm_orig * coef(mod1)[2] + coef(mod1)[1])
# create numeric lat-long columns
dat$lat2 <- as.numeric(substr(dat$lat, 1, 8))
dat$long2 <- as.numeric(paste("-", substr(dat$long, 1, 9), sep = ""))
dat$LL <- with(dat, paste(lat2, long2, sep = ","))
# Create new column called 'sampleArea' based on
# the areas that were resampled in modern surveys
dat$sampleArea <- as.factor(ifelse(dat$sp == "CHFU",
paste(dat$site),
paste(dat$site, dat$nest1, sep = "_")))
# Define sampling units (Lottia is exception here)
dat2 <- dat %>%
mutate(sampleUnit = ifelse(era == "present" & sp == "LODI",
paste(site, nest1, nest2, sep = "_"), sampleUnit))
# Get mean tidal heights for sample areas
tidalHTdf <- dat2 %>% filter(!is.na(tideHTm)) %>%
group_by(sampleArea) %>%
summarise(sample_area_tidal_ht = mean(tideHTm),
sample_area_tidal_ht_orig = mean(tideHTm_orig))
# Join sample area tidal heights
dat2 <- tidalHTdf %>% select(sampleArea, sample_area_tidal_ht) %>%
inner_join(dat2, ., by = "sampleArea")
# Get proportion of max size
dat2 <- dat2 %>% group_by(species) %>%
mutate(size_prop = size1mm/max(size1mm, na.rm = TRUE)) %>%
ungroup()
# Simplify dataframe
dat2 <- dat2 %>%
select(-c(lat, long)) %>%
rename(lat = lat2, long = long2)
if(method == "repeated"){
dat2 <- dat2 %>% mutate(year = lubridate::year(dmy(date)))
}
return(dat2)
}
# load data - approximated sizes
dat <- choose_size_data(method = "uniform")
names(dat)
library(dplyr)
library(readr)
rm(list=ls(all=TRUE))
# Functions to convert histogram data to vector of raw sizes
source("R/convert_histo_to_raw.R")
##### Load HayfordKing data #####
ackerman <- read_csv("sbs_meta/scraped/HayfordKing_2017/biogeo_size_change - size_raw_HHWK.csv")
ackerman
names(ackerman)
ackerman <- ackerman %>% mutate(Shaw_hab = NA, notes = "", notes2 = "")
# Get random sizes from binned data
ack_past <- ackerman %>%
filter(era == "past")
ack_past_histo <- ack_past %>% count(size1mm)
# Normally distributed sizes
ack_past_size_norm <- get_random_sizes(size_bin_vector = ack_past_histo$size1mm,
count_vector = ack_past_histo$n, size_interval = 1,
distribution = "normal")
# Uniformally distributed sizes
ack_past_size_unif <- get_random_sizes(size_bin_vector = ack_past_histo$size1mm,
count_vector = ack_past_histo$n, size_interval = 1,
distribution = "uniform")
plot(ack_past$size1mm, ack_past_size_norm)
plot(ack_past$size1mm, ack_past_size_unif)
hist(ack_past_size_norm, breaks = 30)
hist(ack_past_size_unif, breaks = 30)
names(ack_past)
# Use uniformly distributed sizes
ack_past$size1mm_rand <- ack_past_size_unif
ack_pres <- ackerman %>% filter(era == "present") %>%
mutate(size1mm_rand = size1mm)
ackerman2 <- rbind(ack_pres, ack_past)
##### Load Galloway data #####
frank <- read_csv("sbs_meta/scraped/Galloway_2017/SouthCove_Tegula-Size-Counts_Spring2017_AG-Shared_2017-10-13_size.csv") # snail size
frank_counts <- read_csv("sbs_meta/scraped/Galloway_2017/SouthCove_Tegula-Size-Counts_Spring2017_AG-Shared_2017-10-13_counts.csv")
frank <- frank_counts %>%
select(SampleID, Density.m2, Elevation.above.MLLW) %>%
left_join(frank, ., by = "SampleID")
summary(frank)
frank_transects <- frank %>% distinct(`Transect#`) %>%
mutate(lat = c("43.301949N", "43.302368N", "43.302711N", "43.303055N"),
long = c("124.39942W", "124.399239W", "124.399057W", "124.398942W"))
frank <- left_join(frank, frank_transects, by = "Transect#")
frank_present <- data.frame(
study = "Galloway",
studySub = NA,
species = "Chlorostoma.funebralis",
sp = "CHFU",
site = "SouthCove",
era = "present",
date = frank$Date,
nest1 = frank$`Transect#`,
nest2 = frank$`Sample#`,
nest3 = NA,
nest3note = NA,
sampleUnit = frank$SampleID,
size1mm = round(frank$Width.mm, 1),
size1mm_rand = round(frank$Width.mm, 1),
habitat = NA,
tideHTm = frank$Elevation.above.MLLW,
lat = frank$lat,
long = frank$long,
Shaw_hab = NA,
notes = "",
notes2 = ""
)
head(frank_present)
unique(frank_present$date)
# Get past sizes
frank_past_bins <- c(3.5, 10.5, 17.5, 24.5, 31.5)
frank_past_n <- c(33, 20, 431, 446, 1)
frank_past_size <- repeat_sizes(size_bin_vector = frank_past_bins,
count_vector = frank_past_n)
frank_past_size_norm <- get_random_sizes(size_bin_vector = frank_past_bins,
count_vector = frank_past_n, size_interval = 3.5,
distribution = "normal")
frank_past_size_unif <- get_random_sizes(size_bin_vector = frank_past_bins,
count_vector = frank_past_n, size_interval = 3.5,
distribution = "uniform")
hist(frank_past_size, breaks = 5)
hist(frank_past_size_norm, breaks = 5)
par(mfrow = c(1,2))
hist(frank_past_size_norm, breaks = 25)
hist(frank_past_size_unif, breaks = 25)
# Use uniformly distributed sizes
frank_past <- data.frame(
study = "Galloway",
studySub = NA,
species = "Chlorostoma.funebralis",
sp = "CHFU",
site = "SouthCove",
era = "past",
date = "5/1/1968",
nest1 = NA,
nest2 = NA,
nest3 = NA,
nest3note = NA,
sampleUnit = NA,
size1mm = frank_past_size,
size1mm_rand = round(frank_past_size_unif, 1),
habitat = NA,
tideHTm = NA,
lat = NA,
long = NA,
Shaw_hab = NA,
notes = "day-month is unknown",
notes2 = ""
)
frank2 <- rbind(frank_present, frank_past)
frank2 %>% count(era)
with(frank2, plot(size1mm, size1mm_rand))
master <- rbind(ackerman2, frank2)
names(master)
# Function to load cleaned data
source("R/choose_size_data.R")
# load data - approximated sizes
dat <- choose_size_data(method = "uniform")
names(dat)
names(master)
unique(master$date)
dat2 <- dat %>%
select(-c(habitat, tideHTm_orig, sample_area_tidal_ht, size_prop, LL, Shaw_hab)) %>%
mutate(study = "Elahi2015",
studySub = NA)
names(dat2)
master <- master %>%
mutate(year = lubridate::year(mdy(date)),
sampleArea = NA) %>%
select(-c(habitat, Shaw_hab))
names(master)
master2 <- rbind(master, dat2)
names(dat2)
names(master)
dim(dat2)
dim(dat2); dim(master)
# load data - approximated sizes
dat <- choose_size_data(method = "uniform")
names(dat)
names(master)
unique(master$date)
dat2 <- dat %>%
select(-c(habitat, tideHTm_orig, sample_area_tidal_ht, size_prop, LL, Shaw_hab)) %>%
mutate(study = "Elahi2015",
studySub = NA,
size1mm_rand = size1mm)
names(dat2)
master <- master %>%
mutate(year = lubridate::year(mdy(date)),
sampleArea = NA) %>%
select(-c(habitat, Shaw_hab))
names(master)
dim(dat2); dim(master)
master2 <- rbind(master, dat2)
master2 %>%
ggplot(aes(era, size1mm_norm)) +
geom_violin() +
facet_wrap(~ species + study)
master2 %>%
ggplot(aes(era, size1mm_rand)) +
geom_violin() +
facet_wrap(~ species + study)
master2 %>%
ggplot(aes(size1mm_rand, fill = era)) +
geom_density() +
facet_wrap(~ species + study)
master2 %>%
ggplot(aes(size1mm_rand, fill = era)) +
geom_density(alpha = 0.5) +
facet_wrap(~ species + study)
master2 %>%
ggplot(aes(size1mm_rand, fill = era)) +
geom_density(alpha = 0.5) +
facet_wrap(~ study + species)
master2 %>%
ggplot(aes(size1mm_rand, fill = era)) +
geom_density(alpha = 0.5) +
facet_wrap(~ study + species, scales = "free_y")
master2 %>%
ggplot(aes(size1mm_rand, fill = era)) +
geom_density(alpha = 0.5) +
facet_wrap(~ study + species, scales = "free_y") +
xlab("Size (mm)") +
ylab("Probability density")
ggsave("meta_figs/meta_density_era.pdf", height = 7, width = 7)
ggsave("sbs_meta/meta_figs/meta_density_era.pdf", height = 7, width = 7)
master2 %>%
ggplot(aes(size1mm_rand, fill = era)) +
geom_density(alpha = 0.5) +
facet_wrap(~ study + species, scales = "free_y") +
xlab("Size (mm)") +
ylab("Probability density") +
theme(legend.position = "top")
ggsave("sbs_meta/meta_figs/meta_density_era.pdf", height = 7, width = 7)
ggsave("sbs_meta/meta_figs/meta_density_era.pdf", height = 5, width = 7)
head(master)
