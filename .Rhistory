df_size_threshold
df3 %>%
ggplot(aes(size1mm_rand, fill = era)) +
geom_rect(data = subset(df3, museum == "museum"), fill = "gray90",
xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0.3) +
geom_vline(data = df_size_threshold, aes(xintercept = size_threshold)) +
geom_histogram(alpha = 0.75, center = 0,  bins = 25,
aes(y = ..density..),
color = 'black', size = 0.2,
position = "identity") +
facet_wrap(fig_legend ~ species, ncol = 3, scales = "free",
labeller = label_wrap_gen(multi_line = FALSE)) +
xlab("Size (mm)") +
ylab("Probability density") +
theme(legend.justification  = c(0.5, 0),
legend.position = c(0.5, 0),
legend.title = element_blank(),
strip.text = element_text(size = 8)) +
scale_fill_viridis_d()
df3 %>%
ggplot(aes(size1mm_rand, fill = era)) +
geom_rect(data = subset(df3, museum == "museum"), fill = "gray90",
xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0.3) +
geom_histogram(alpha = 0.75, center = 0,  bins = 25,
aes(y = ..density..),
color = 'black', size = 0.2,
position = "identity") +
geom_vline(data = df_size_threshold, aes(xintercept = size_threshold)) +
facet_wrap(fig_legend ~ species, ncol = 3, scales = "free",
labeller = label_wrap_gen(multi_line = FALSE)) +
xlab("Size (mm)") +
ylab("Probability density") +
theme(legend.justification  = c(0.5, 0),
legend.position = c(0.5, 0),
legend.title = element_blank(),
strip.text = element_text(size = 8)) +
scale_fill_viridis_d()
ggsave("sbs_meta/meta_figs/meta_hist_era.pdf", height = 7, width = 5)
library(dplyr)
library(readr)
source("R/choose_size_threshold.R")
## Field surveys
hay_king <- read_csv("sbs_meta/scraped/HayfordKing_2017/Hayford-King_raw.csv")
hay_elahi <- read_csv("sbs_meta/scraped/HayfordElahi_2018/Hayford-Elahi_raw.csv")
# Select one year for Hayford-Elahi past
hay_elahi %>% count(era, year)
hay_elahi <- hay_elahi %>% filter(year == 1969 | year == 2018)
gall_frank <- read_csv("sbs_meta/scraped/Galloway_2017/Galloway-Frank_raw.csv")
## Museum collections
sag <- read_csv("sbs_meta/scraped/Sagarin_2010/Sagarin_raw.csv")
wilson <- read_csv("sbs_meta/scraped/Wilson-Brodie_2017/Wilson-Brodie_raw.csv")
fisher <- read_csv("sbs_meta/scraped/Fisher2009_raw/Fisher_raw.csv")
roy <- read_csv("sbs_meta/scraped/Roy2003_raw/Roy_raw.csv")
roy %>% count(species, era)
roy <- roy %>% filter(!is.na(era))
## Compile
museum_dat <- rbind(sag, wilson, fisher, roy) %>% mutate(museum = "museum")
field_dat <- rbind(hay_king, hay_elahi, gall_frank) %>% mutate(museum = "field")
master <- rbind(museum_dat, field_dat) %>%
mutate(lat = as.numeric(lat))
master %>% count(study, era)
str(master)
##### Elahi 2015 data #####
# Function to load cleaned data
source("R/choose_size_data.R")
# load data - approximated sizes
dat <- choose_size_data(method = "uniform")
dat <- dat %>%
mutate(species = gsub(x = species, pattern = "\\.", replacement = " ")) %>%
mutate(species = ifelse(species == "Chlorostoma funebralis", "Tegula funebralis", species))
unique(dat$species)
dat2 <- dat %>%
select(-c(habitat, tideHTm_orig, sample_area_tidal_ht,
size_prop, LL, Shaw_hab)) %>%
mutate(study = "Elahi2015",
studySub = NA,
size1mm_rand = size1mm,
museum = "field")
unique(dat2$lat)
master2 <- master %>%
mutate(year = lubridate::year(mdy(date)),
sampleArea = NA) %>%
select(-c(X1, habitat, Shaw_hab))
df <- rbind(master2, dat2)
## Get latitude of study x species, create labels for plotting
df_plot <- df %>%
group_by(study, species) %>%
summarise(lat_study_sp = round(mean(lat, na.rm = TRUE), 2)) %>%
ungroup() %>%
arrange(desc(lat_study_sp)) %>%
mutate(fig_legend = letters[seq(1:13)])
## Combine with df
df <- df %>% left_join(., df_plot, by = c("study", "species"))
df
df %>% group_by(study, species) %>%
filter(!is.na(size1mm)) %>%
summarise(max(size1mm),
min(size1mm))
df %>% distinct(study, species, size_threshold)
library(dplyr)
library(readr)
source("R/choose_size_threshold.R")
## Field surveys
hay_king <- read_csv("sbs_meta/scraped/HayfordKing_2017/Hayford-King_raw.csv")
hay_elahi <- read_csv("sbs_meta/scraped/HayfordElahi_2018/Hayford-Elahi_raw.csv")
# Select one year for Hayford-Elahi past
hay_elahi %>% count(era, year)
hay_elahi <- hay_elahi %>% filter(year == 1969 | year == 2018)
gall_frank <- read_csv("sbs_meta/scraped/Galloway_2017/Galloway-Frank_raw.csv")
## Museum collections
sag <- read_csv("sbs_meta/scraped/Sagarin_2010/Sagarin_raw.csv")
wilson <- read_csv("sbs_meta/scraped/Wilson-Brodie_2017/Wilson-Brodie_raw.csv")
fisher <- read_csv("sbs_meta/scraped/Fisher2009_raw/Fisher_raw.csv")
roy <- read_csv("sbs_meta/scraped/Roy2003_raw/Roy_raw.csv")
roy %>% count(species, era)
roy <- roy %>% filter(!is.na(era))
## Compile
museum_dat <- rbind(sag, wilson, fisher, roy) %>% mutate(museum = "museum")
field_dat <- rbind(hay_king, hay_elahi, gall_frank) %>% mutate(museum = "field")
master <- rbind(museum_dat, field_dat) %>%
mutate(lat = as.numeric(lat))
master %>% count(study, era)
str(master)
# Function to load cleaned data
source("R/choose_size_data.R")
# load data - approximated sizes
dat <- choose_size_data(method = "uniform")
dat <- dat %>%
mutate(species = gsub(x = species, pattern = "\\.", replacement = " ")) %>%
mutate(species = ifelse(species == "Chlorostoma funebralis", "Tegula funebralis", species))
unique(dat$species)
dat2 <- dat %>%
select(-c(habitat, tideHTm_orig, sample_area_tidal_ht,
size_prop, LL, Shaw_hab)) %>%
mutate(study = "Elahi2015",
studySub = NA,
size1mm_rand = size1mm,
museum = "field")
unique(dat2$lat)
master2 <- master %>%
mutate(year = lubridate::year(mdy(date)),
sampleArea = NA) %>%
select(-c(X1, habitat, Shaw_hab))
df <- rbind(master2, dat2)
names(df)
## Get latitude of study x species, create labels for plotting
df_plot <- df %>%
group_by(study, species) %>%
summarise(lat_study_sp = round(mean(lat, na.rm = TRUE), 2)) %>%
ungroup() %>%
arrange(desc(lat_study_sp)) %>%
mutate(fig_legend = letters[seq(1:13)])
## Combine with df
df <- df %>% left_join(., df_plot, by = c("study", "species"))
df
df %>% group_by(study, species) %>%
filter(!is.na(size1mm)) %>%
summarise(max(size1mm),
min(size1mm))
df %>% distinct(study, species, size_threshold)
choose_size_threshold_general
df1 <- df %>%
group_by(study, species) %>%
#do(choose_size_threshold_max(.), filter_data = FALSE) %>%
do(choose_size_threshold_general(., era = "combined", my_quantile = 0.5, filter_data = FALSE)) %>%
ungroup() %>%
filter(study != "Roy" & study != "Wilson-Brodie")
df1 %>% distinct(study, species, size_threshold)
df2 <- df %>%
group_by(study, species) %>%
mutate(size_threshold = min(size1mm, na.rm = TRUE)) %>%
ungroup() %>%
filter(study == "Roy" | study == "Wilson-Brodie") %>%
mutate(size_threshold = ifelse(study == "Roy", size_threshold, 30))
df2 %>% distinct(study, species, size_threshold)
## Rejoin data
df3 <- rbind(df1, df2)
df3 %>% distinct(study, species, size_threshold)
dfsub <- df3 %>% filter(size1mm >= size_threshold)
dfsub %>% group_by(study, species) %>%
summarise(max(size1mm),
min(size1mm))
df_size_threshold <- df3 %>% distinct(study, species, fig_legend, size_threshold)
df_size_threshold
df3 %>%
ggplot(aes(size1mm_rand, fill = era)) +
geom_rect(data = subset(df3, museum == "museum"), fill = "gray90",
xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0.3) +
geom_histogram(alpha = 0.75, center = 0,  bins = 25,
aes(y = ..density..),
color = 'black', size = 0.2,
position = "identity") +
geom_vline(data = df_size_threshold, aes(xintercept = size_threshold)) +
facet_wrap(fig_legend ~ species, ncol = 3, scales = "free",
labeller = label_wrap_gen(multi_line = FALSE)) +
xlab("Size (mm)") +
ylab("Probability density") +
theme(legend.justification  = c(0.5, 0),
legend.position = c(0.5, 0),
legend.title = element_blank(),
strip.text = element_text(size = 8)) +
scale_fill_viridis_d()
ggsave("sbs_meta/meta_figs/meta_hist_era.pdf", height = 7, width = 5)
theme_set(theme_bw(base_size = 10) +
theme(panel.grid = element_blank(),
strip.background = element_blank()))
library(viridis)
##### HISTO PLOTS #####
df3 %>%
ggplot(aes(size1mm_rand, fill = era)) +
geom_rect(data = subset(df3, museum == "museum"), fill = "gray90",
xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0.3) +
geom_histogram(alpha = 0.75, center = 0,  bins = 25,
aes(y = ..density..),
color = 'black', size = 0.2,
position = "identity") +
geom_vline(data = df_size_threshold, aes(xintercept = size_threshold)) +
facet_wrap(fig_legend ~ species, ncol = 3, scales = "free",
labeller = label_wrap_gen(multi_line = FALSE)) +
xlab("Size (mm)") +
ylab("Probability density") +
theme(legend.justification  = c(0.5, 0),
legend.position = c(0.5, 0),
legend.title = element_blank(),
strip.text = element_text(size = 8)) +
scale_fill_viridis_d()
ggsave("sbs_meta/meta_figs/meta_hist_era.pdf", height = 7, width = 5)
stat_dat <- df
stat_dat <- stat_dat %>%
filter(!is.na(size1mm)) %>%
mutate(size_log = log(size1mm),
species2 = paste(species, fig_legend, sep = "_"))
## Let intercepts vary by species nested within study
fit1 <- lme(size_log ~ era * museum,
random = ~ 1 | species / study,
data = stat_dat)
## Let intercepts vary by species
fit2 <- lme(size_log ~ era * museum,
random = ~ 1 | species2,
data = stat_dat)
## Let intercepts vary by species, and slopes vary by era
fit3 <- lme(size_log ~ era * museum,
random = ~ era | species2,
data = stat_dat)
AIC(fit1, fit2, fit3)
my_fit <- fit1
my_fit <- fit2
my_fit <- fit3
summary(my_fit)
plot(my_fit, resid(., type = "p") ~ fitted(.), abline = 0)
plot(my_fit, species2 ~ resid(.), abline = 0)
plot(my_fit, species2 ~ resid(.) | era, abline = 0)
plot(my_fit, species2 ~ resid(.) | museum, abline = 0)
plot(my_fit, size_log ~ fitted(.), abline = c(0, 1))
plot(my_fit, size_log ~ fitted(.) | species2, abline = c(0, 1))
plot(my_fit, size_log ~ fitted(.) | era, abline = c(0, 1))
plot(my_fit, size_log ~ fitted(.) | museum, abline = c(0, 1))
##### PLOT GLMM EFFECTS #####
summary(my_fit)
## All data
effects_table_df <- summary(my_fit)$tTable %>% tbl_df() %>% mutate(dataset = "All data")
## Data subset (1/2 max)
effects_table_dfsub <- summary(my_fit)$tTable %>% tbl_df() %>% mutate(dataset = "Subset of data")
effects_table <- rbind(effects_table_df, effects_table_dfsub)
n_df <- length(df$study)
n_dfsub <- length(dfsub$study)
## Prepare table
effects_table <- effects_table %>%
mutate(upper = Value + Std.Error * 2,
lower = Value - Std.Error * 2,
Parameter = rep(rownames(summary(fit1)$tTable), 2),
Param = rep(c("Intercept", "Era (present)", "Museum", "Era x Museum"), 2),
n = ifelse(dataset == "All data", n_df, n_dfsub)) %>%
mutate(Param = factor(Param, levels = rev(c("Intercept", "Era (present)", "Museum", "Era x Museum"))))
## Plot
my_dodge <- -0.5
theme_set(theme_bw(base_size = 14) +
theme(panel.grid.major.y = element_blank(),
panel.grid.major.x = element_line(size = 0.25),
panel.grid.minor = element_blank(),
strip.background = element_blank()))
source("sbs_meta/01_assemble_raw_data.R")
library(nlme)
library(broom)
library(viridis)
###### ALL DATA #####
stat_dat <- df
stat_dat <- dfsub
stat_dat <- stat_dat %>%
filter(!is.na(size1mm)) %>%
mutate(size_log = log(size1mm),
species2 = paste(species, fig_legend, sep = "_"))
## Let intercepts vary by species nested within study
fit1 <- lme(size_log ~ era * museum,
random = ~ 1 | species / study,
data = stat_dat)
## Let intercepts vary by species
fit2 <- lme(size_log ~ era * museum,
random = ~ 1 | species2,
data = stat_dat)
## Let intercepts vary by species, and slopes vary by era
fit3 <- lme(size_log ~ era * museum,
random = ~ era | species2,
data = stat_dat)
AIC(fit1, fit2, fit3)
my_fit <- fit1
my_fit <- fit2
my_fit <- fit3
summary(my_fit)
plot(my_fit, resid(., type = "p") ~ fitted(.), abline = 0)
plot(my_fit, species2 ~ resid(.), abline = 0)
plot(my_fit, species2 ~ resid(.) | era, abline = 0)
plot(my_fit, species2 ~ resid(.) | museum, abline = 0)
plot(my_fit, size_log ~ fitted(.), abline = c(0, 1))
plot(my_fit, size_log ~ fitted(.) | species2, abline = c(0, 1))
plot(my_fit, size_log ~ fitted(.) | era, abline = c(0, 1))
plot(my_fit, size_log ~ fitted(.) | museum, abline = c(0, 1))
##### PLOT GLMM EFFECTS #####
summary(my_fit)
## All data
effects_table_df <- summary(my_fit)$tTable %>% tbl_df() %>% mutate(dataset = "All data")
## Data subset (1/2 max)
effects_table_dfsub <- summary(my_fit)$tTable %>% tbl_df() %>% mutate(dataset = "Subset of data")
effects_table <- rbind(effects_table_df, effects_table_dfsub)
n_df <- length(df$study)
n_dfsub <- length(dfsub$study)
## Prepare table
effects_table <- effects_table %>%
mutate(upper = Value + Std.Error * 2,
lower = Value - Std.Error * 2,
Parameter = rep(rownames(summary(fit1)$tTable), 2),
Param = rep(c("Intercept", "Era (present)", "Museum", "Era x Museum"), 2),
n = ifelse(dataset == "All data", n_df, n_dfsub)) %>%
mutate(Param = factor(Param, levels = rev(c("Intercept", "Era (present)", "Museum", "Era x Museum"))))
## Plot
my_dodge <- -0.5
theme_set(theme_bw(base_size = 14) +
theme(panel.grid.major.y = element_blank(),
panel.grid.major.x = element_line(size = 0.25),
panel.grid.minor = element_blank(),
strip.background = element_blank()))
p1 <- effects_table %>%
filter(Param != "Intercept") %>%
ggplot(aes(Param, Value, fill = dataset)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2,
position = position_dodge(width = my_dodge)) +
geom_point(aes(size = n), position = position_dodge(width = my_dodge), pch = 21) +
coord_flip() +
labs(x = "", y = "Model coefficient") +
scale_fill_viridis_d(begin = 0.25, end = 0.75) +
theme(legend.title = element_blank(),
legend.position = c(0.95, 0.99),
legend.justification = c(0.95, 0.99)) +
scale_size_continuous(range = c(2,4), guide = FALSE) +
guides(fill = guide_legend(override.aes = list(size = c(4, 2)))) +
scale_y_continuous(breaks = seq(-0.25, 1.00, 0.25))
p1
stat_dat <- df
stat_dat <- stat_dat %>%
filter(!is.na(size1mm)) %>%
mutate(size_log = log(size1mm),
species2 = paste(species, fig_legend, sep = "_"))
## Let intercepts vary by species nested within study
fit1 <- lme(size_log ~ era * museum,
random = ~ 1 | species / study,
data = stat_dat)
## Let intercepts vary by species
fit2 <- lme(size_log ~ era * museum,
random = ~ 1 | species2,
data = stat_dat)
## Let intercepts vary by species, and slopes vary by era
fit3 <- lme(size_log ~ era * museum,
random = ~ era | species2,
data = stat_dat)
AIC(fit1, fit2, fit3)
my_fit <- fit1
my_fit <- fit2
my_fit <- fit3
summary(my_fit)
plot(my_fit, resid(., type = "p") ~ fitted(.), abline = 0)
plot(my_fit, species2 ~ resid(.), abline = 0)
plot(my_fit, species2 ~ resid(.) | era, abline = 0)
plot(my_fit, species2 ~ resid(.) | museum, abline = 0)
plot(my_fit, size_log ~ fitted(.), abline = c(0, 1))
plot(my_fit, size_log ~ fitted(.) | species2, abline = c(0, 1))
plot(my_fit, size_log ~ fitted(.) | era, abline = c(0, 1))
plot(my_fit, size_log ~ fitted(.) | museum, abline = c(0, 1))
##### PLOT GLMM EFFECTS #####
summary(my_fit)
## All data
effects_table_df <- summary(my_fit)$tTable %>% tbl_df() %>% mutate(dataset = "All data")
effects_table <- rbind(effects_table_df, effects_table_dfsub)
n_df <- length(df$study)
n_dfsub <- length(dfsub$study)
## Prepare table
effects_table <- effects_table %>%
mutate(upper = Value + Std.Error * 2,
lower = Value - Std.Error * 2,
Parameter = rep(rownames(summary(fit1)$tTable), 2),
Param = rep(c("Intercept", "Era (present)", "Museum", "Era x Museum"), 2),
n = ifelse(dataset == "All data", n_df, n_dfsub)) %>%
mutate(Param = factor(Param, levels = rev(c("Intercept", "Era (present)", "Museum", "Era x Museum"))))
## Plot
my_dodge <- -0.5
theme_set(theme_bw(base_size = 14) +
theme(panel.grid.major.y = element_blank(),
panel.grid.major.x = element_line(size = 0.25),
panel.grid.minor = element_blank(),
strip.background = element_blank()))
p1 <- effects_table %>%
filter(Param != "Intercept") %>%
ggplot(aes(Param, Value, fill = dataset)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2,
position = position_dodge(width = my_dodge)) +
geom_point(aes(size = n), position = position_dodge(width = my_dodge), pch = 21) +
coord_flip() +
labs(x = "", y = "Model coefficient") +
scale_fill_viridis_d(begin = 0.25, end = 0.75) +
theme(legend.title = element_blank(),
legend.position = c(0.95, 0.99),
legend.justification = c(0.95, 0.99)) +
scale_size_continuous(range = c(2,4), guide = FALSE) +
guides(fill = guide_legend(override.aes = list(size = c(4, 2)))) +
scale_y_continuous(breaks = seq(-0.25, 1.00, 0.25))
p1
ggsave("sbs_meta/meta_figs/meta_lme_coefs.pdf", height = 3.5, width = 5)
df_size_threshold
df3 %>%
ggplot(aes(size1mm_rand, fill = era)) +
geom_rect(data = subset(df3, museum == "museum"), fill = "gray90",
xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0.3) +
geom_histogram(alpha = 0.75, center = 0,  bins = 25,
aes(y = ..density..),
color = 'black', size = 0.2,
position = "identity") +
geom_vline(data = df_size_threshold, aes(xintercept = size_threshold), linetype = "dashed") +
facet_wrap(fig_legend ~ species, ncol = 3, scales = "free",
labeller = label_wrap_gen(multi_line = FALSE)) +
xlab("Size (mm)") +
ylab("Probability density") +
theme(legend.justification  = c(0.5, 0),
legend.position = c(0.5, 0),
legend.title = element_blank(),
strip.text = element_text(size = 8)) +
scale_fill_viridis_d()
ggsave("sbs_meta/meta_figs/meta_hist_era.pdf", height = 7, width = 5)
theme_set(theme_bw(base_size = 10) +
theme(panel.grid = element_blank(),
strip.background = element_blank()))
library(viridis)
##### HISTO PLOTS #####
df3 %>%
ggplot(aes(size1mm_rand, fill = era)) +
geom_rect(data = subset(df3, museum == "museum"), fill = "gray90",
xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0.3) +
geom_histogram(alpha = 0.75, center = 0,  bins = 25,
aes(y = ..density..),
color = 'black', size = 0.2,
position = "identity") +
geom_vline(data = df_size_threshold, aes(xintercept = size_threshold), linetype = "dashed") +
facet_wrap(fig_legend ~ species, ncol = 3, scales = "free",
labeller = label_wrap_gen(multi_line = FALSE)) +
xlab("Size (mm)") +
ylab("Probability density") +
theme(legend.justification  = c(0.5, 0),
legend.position = c(0.5, 0),
legend.title = element_blank(),
strip.text = element_text(size = 8)) +
scale_fill_viridis_d()
ggsave("sbs_meta/meta_figs/meta_hist_era.pdf", height = 7, width = 5)
#################################################
# Author: Robin Elahi
# Date: 180929
# Analysis of historical and modern gastropod body sizes
# Plot gastropod size-freq distributions
#################################################
source("sbs_meta/01_assemble_raw_data.R")
theme_set(theme_bw(base_size = 10) +
theme(panel.grid = element_blank(),
strip.background = element_blank()))
library(viridis)
##### HISTO PLOTS #####
df3 %>%
ggplot(aes(size1mm_rand, fill = era)) +
geom_rect(data = subset(df3, museum == "museum"), fill = "gray90",
xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0.3) +
geom_histogram(alpha = 0.75, center = 0,  bins = 25,
aes(y = ..density..),
color = 'black', size = 0.2,
position = "identity") +
geom_vline(data = df_size_threshold, aes(xintercept = size_threshold), linetype = "solid") +
facet_wrap(fig_legend ~ species, ncol = 3, scales = "free",
labeller = label_wrap_gen(multi_line = FALSE)) +
xlab("Size (mm)") +
ylab("Probability density") +
theme(legend.justification  = c(0.5, 0),
legend.position = c(0.5, 0),
legend.title = element_blank(),
strip.text = element_text(size = 8)) +
scale_fill_viridis_d()
ggsave("sbs_meta/meta_figs/meta_hist_era.pdf", height = 7, width = 5)
df_size_threshold
effects_table
