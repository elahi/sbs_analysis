fileNames2
i = 1
fileNames2
path_to_files <- "./data/climate_monterey/hms_west_beach/"
path_to_files <- "./data/climate_monterey/hms_west_beach/"
fileNames <- dir(path = path_to_files, recursive = TRUE, pattern = ".txt")
fileNames
p_files <- grep("p", fileNames)
fileNames[p_files]
fileNames %in% fileNames[p_files]
fileNames2 <- fileNames[!fileNames %in% fileNames[p_files]]
i = 1
path_to_files
fileNames[i]
fls <- fileNames[!fileNames %in% fileNames[p_files]]
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
file.i
raw_monthly_data <- file.i
process_hms_weather <- function(raw_monthly_data) {
# Get relevant columns and rename them
rmd2 <- raw_monthly_data %>% select(year:wd, LiCor, `Air C`) %>%
rename(wind_speed = ws, wind_dir = wd,
licor = LiCor, tempC = `Air C`)
# If licor values are < 0, change to NA
rmd3 <- rmd2 %>%
mutate(licor = ifelse(licor < 0, NA, licor))
return(rmd3)
}
process_hms_weather(file.i)
head(file.i)
View(raw_monthly_data)
names(file.i)
i = 10
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
names(file.i)
i = 2
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
names(file.i)
i = 3
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
names(file.i)
i = 8
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
names(file.i)
i = 9
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
names(file.i)
paste(path_to_files, fls[i], sep = "")
i = 1
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
names(file.i)
i = 1
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
ile.i %>% select(year:wd, LiCor, `Air C`)
file.i %>% select(year:wd, LiCor, `Air C`)
head(file.i)
t(file.i)
head(t(file.i))
duplicated(names(file.i))
dup_columns <- duplicated(names(file.i))
dup_columns
orig_columns <- names(file.i)
dup_columns <- duplicated(names(file.i))
orig_columns
dup_columns
duplicated.columns <- duplicated(t(file.i))
file2.i <- file.i[, !duplicated.columns]
orig_columns
dup_columns
new_columns <- orig_columns[!orig_columns %in% dup_columns]
new_columns
new_columns <- orig_columns[!dup_columns]
new_columns
file2.i <- file.i[, orig_columns[!dup_columns]]
orig_columns <- names(file.i)
dup_columns <- duplicated(names(file.i))
dup_columns
orig_columns
dup_columns == TRUE
TRUE %in% dup_columns
new_columns <- orig_columns[!dup_columns]
orig_columns[!dup_columns]
file.iNEW <- file.i[, orig_columns[!dup_columns]]
check_for_column_duplicates <- function(file.i){
orig_columns <- names(file.i)
dup_columns <- duplicated(names(file.i))
if (TRUE %in% dup_columns == TRUE){
file.i <- file.i[, orig_columns[!dup_columns]]
return(file.i)
}
if (TRUE %in% dup_columns == FALSE){
return(file.i)
}
}
check_for_column_duplicates(file.i)
check_for_column_duplicates(file.i) %>% names()
remove_column_duplicates <- function(file.i){
orig_columns <- names(file.i)
dup_columns <- duplicated(names(file.i))
if (TRUE %in% dup_columns == TRUE){
file.i <- file.i[, orig_columns[!dup_columns]]
return(file.i)
}
if (TRUE %in% dup_columns == FALSE){
return(file.i)
}
}
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
file.iNEW <- remove_column_duplicates(file.i)
rmd2 <- file.iNEW %>% select(year:wd, LiCor, `Air C`) %>%
rename(wind_speed = ws, wind_dir = wd,
licor = LiCor, tempC = `Air C`)
rmd3 <- rmd2 %>%
mutate(licor = ifelse(licor < 0, NA, licor))
fls
fls_df <- data.frame(fls)
fls_df
names(file.i)
testF <- function(fls_df){
fls.i <- as.numeric(fls_df$fls)
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
fileNew <- process_hms_weather(file.i)
return(fileNew)
}
crap <- fls_df %>% group_by(fls) %>%
do(testF(.)) %>% ungroup()
crap <- fls_df %>% slice(1:2) %>% group_by(fls) %>%
do(testF(.)) %>% ungroup()
fls_df <- data.frame(fls)
fls.i <- as.numeric(fls_df$fls)
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
fileNew <- process_hms_weather(file.i)
testF <- function(fls_df){
fls.i <- as.character(fls_df$fls)
file.i <- read_csv(file = paste(path_to_files, fls.i, sep = ""))
fileNew <- process_hms_weather(file.i)
return(fileNew)
}
crap <- fls_df %>% slice(1:2) %>% group_by(fls) %>%
do(testF(.)) %>% ungroup()
remove_column_duplicates <- function(file.i){
orig_columns <- names(file.i)
dup_columns <- duplicated(names(file.i))
if (TRUE %in% dup_columns == TRUE){
file.i <- file.i[, orig_columns[!dup_columns]]
return(file.i)
}
if (TRUE %in% dup_columns == FALSE){
return(file.i)
}
}
i = 1
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
names(file.i)
orig_columns <- names(file.i)
dup_columns <- duplicated(names(file.i))
TRUE %in% dup_columns
file.i <- file.i[, orig_columns[!dup_columns]]
file.i
file.iNEW <- remove_column_duplicates(file.i)
rmd2 <- file.iNEW %>% select(year:wd, LiCor, `Air C`) %>%
rename(wind_speed = ws, wind_dir = wd,
licor = LiCor, tempC = `Air C`)
# If licor values are < 0, change to NA
rmd3 <- rmd2 %>%
mutate(licor = ifelse(licor < 0, NA, licor))
process_hms_weather <- function(file.i) {
# Check for duplicates and remove the second set if relevant
file.iNEW <- remove_column_duplicates(file.i)
# Get desired columns and rename them
rmd2 <- file.iNEW %>% select(year:wd, LiCor, `Air C`) %>%
rename(wind_speed = ws, wind_dir = wd,
licor = LiCor, tempC = `Air C`)
# If licor values are < 0, change to NA
rmd3 <- rmd2 %>%
mutate(licor = ifelse(licor < 0, NA, licor))
return(rmd3)
}
i = 1
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
process_hms_weather(file.i)
fls
fileNew <- process_hms_weather(file.i)
i = 1
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
head(file.i)
hms_weather_compiled <- process_hms_weather(file.i)
hms_weather_compiled
for (i in 2:length(fls)) {
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
fileNew <- process_hms_weather(file.i)
hms_weather_compiled <- rbind(hms_weather_compiled, fileNew)
}
path_to_files <- "./data/climate_monterey/hms_west_beach/"
fileNames <- dir(path = path_to_files, recursive = TRUE, pattern = ".txt")
fileNames
# Remove fileNames that have a p
# p means partial - so months with a p are not complete, therefore, I should not use them when aggregating to month or above
p_files <- grep("p", fileNames)
fileNames[p_files]
fileNames %in% fileNames[p_files]
fls <- fileNames[!fileNames %in% fileNames[p_files]]
##### COMBINE FILES #####
i = 1
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
names(file.i)
remove_column_duplicates <- function(file.i){
orig_columns <- names(file.i)
dup_columns <- duplicated(names(file.i))
if (TRUE %in% dup_columns == TRUE){
file.i <- file.i[, orig_columns[!dup_columns]]
return(file.i)
}
if (TRUE %in% dup_columns == FALSE){
return(file.i)
}
}
process_hms_weather <- function(file.i) {
# Check for duplicates and remove the second set if relevant
file.iNEW <- remove_column_duplicates(file.i)
# Get desired columns and rename them
rmd2 <- file.iNEW %>% select(year:wd, LiCor, `Air C`) %>%
rename(wind_speed = ws, wind_dir = wd,
licor = LiCor, tempC = `Air C`)
# If licor values are < 0, change to NA
rmd3 <- rmd2 %>%
mutate(licor = ifelse(licor < 0, NA, licor))
return(rmd3)
}
i = 1
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
hms_weather_compiled <- process_hms_weather(file.i)
for (i in 2:length(fls)) {
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
fileNew <- process_hms_weather(file.i)
hms_weather_compiled <- rbind(hms_weather_compiled, fileNew)
}
View(hms_weather_compiled)
175248/4500
fls
path_to_files <- "./data/climate_monterey/hms_west_beach/"
fileNames <- dir(path = path_to_files, recursive = TRUE, pattern = ".txt")
fileNames
# Remove fileNames that have a p
# p means partial - so months with a p are not complete, therefore, I should not use them when aggregating to month or above
p_files <- grep("p", fileNames)
fileNames[p_files]
fileNames %in% fileNames[p_files]
fls <- fileNames[!fileNames %in% fileNames[p_files]]
##### COMBINE FILES #####
i = 1
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
names(file.i)
remove_column_duplicates <- function(file.i){
orig_columns <- names(file.i)
dup_columns <- duplicated(names(file.i))
if (TRUE %in% dup_columns == TRUE){
file.i <- file.i[, orig_columns[!dup_columns]]
return(file.i)
}
if (TRUE %in% dup_columns == FALSE){
return(file.i)
}
}
process_hms_weather <- function(file.i) {
# Check for duplicates and remove the second set if relevant
file.iNEW <- remove_column_duplicates(file.i)
# rename first three columns
names(file.iNEW)[1:3] <- c("year", "dayofyear", "hourmin")
# Get desired columns and rename them
rmd2 <- file.iNEW %>% select(year:wd, LiCor, `Air C`) %>%
rename(wind_speed = ws, wind_dir = wd,
licor = LiCor, tempC = `Air C`)
# If licor values are < 0, change to NA
rmd3 <- rmd2 %>%
mutate(licor = ifelse(licor < 0, NA, licor))
return(rmd3)
}
i = 1
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
hms_weather_compiled <- process_hms_weather(file.i)
for (i in 2:length(fls)) {
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
fileNew <- process_hms_weather(file.i)
hms_weather_compiled <- rbind(hms_weather_compiled, fileNew)
}
path_to_files <- "./data/climate_monterey/hms_west_beach/"
fileNames <- dir(path = path_to_files, recursive = TRUE, pattern = ".txt")
fileNames
# Remove fileNames that have a p
# p means partial - so months with a p are not complete, therefore, I should not use them when aggregating to month or above
p_files <- grep("p", fileNames)
fileNames[p_files]
fileNames %in% fileNames[p_files]
fls <- fileNames[!fileNames %in% fileNames[p_files]]
##### COMBINE FILES #####
i = 1
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
names(file.i)
remove_column_duplicates <- function(file.i){
orig_columns <- names(file.i)
dup_columns <- duplicated(names(file.i))
if (TRUE %in% dup_columns == TRUE){
file.i <- file.i[, orig_columns[!dup_columns]]
return(file.i)
}
if (TRUE %in% dup_columns == FALSE){
return(file.i)
}
}
process_hms_weather <- function(file.i) {
# Check for duplicates and remove the second set if relevant
file.iNEW <- remove_column_duplicates(file.i)
# rename first three columns
names(file.iNEW)[1:3] <- c("year", "dayofyear", "hourmin")
# Get desired columns and rename them
rmd2 <- file.iNEW %>% select(year:wd, LiCor, `Air C`) %>%
rename(wind_speed = ws, wind_dir = wd,
licor = LiCor, tempC = `Air C`)
# If licor values are < 0, change to NA
rmd3 <- rmd2 %>%
mutate(licor = ifelse(licor < 0, NA, licor))
return(rmd3)
}
i = 1
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
hms_weather_compiled <- process_hms_weather(file.i)
for (i in 2:length(fls)) {
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
fileNew <- process_hms_weather(file.i)
hms_weather_compiled <- rbind(hms_weather_compiled, fileNew)
}
range(hms_weather_compiled$year)
tail(hms_weather_compiled)
head(hms_weather_compiled)
fileName <- fls[i]
fileName
i = 1
fileName <- fls[i]
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
hms_weather_compiled <- process_hms_weather(file.i)
hms_weather_compiled$fileName <- fileName
for (i in 2:length(fls)) {
fileName <- fls[i]
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
fileNew <- process_hms_weather(file.i)
hms_weather_compiled$fileName <- fileName
hms_weather_compiled <- rbind(hms_weather_compiled, fileNew)
}
hms_weather_compiled
for (i in 2:length(fls)) {
fileName <- fls[i]
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
fileNew <- process_hms_weather(file.i)
fileNew$fileName <- fileName
hms_weather_compiled <- rbind(hms_weather_compiled, fileNew)
}
unique(hms_weather_compiled$fileName)
completedFiles <- unique(hms_weather_compiled$fileName)
fls
path_to_files <- "./data/climate_monterey/hms_west_beach/"
fileNames <- dir(path = path_to_files, recursive = TRUE, pattern = ".txt")
fileNames
p_files <- grep("p", fileNames)
fileNames[p_files]
fileNames %in% fileNames[p_files]
fls <- fileNames[!fileNames %in% fileNames[p_files]]
##### COMBINE FILES #####
i = 1
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
names(file.i)
remove_column_duplicates <- function(file.i){
orig_columns <- names(file.i)
dup_columns <- duplicated(names(file.i))
if (TRUE %in% dup_columns == TRUE){
file.i <- file.i[, orig_columns[!dup_columns]]
return(file.i)
}
if (TRUE %in% dup_columns == FALSE){
return(file.i)
}
}
process_hms_weather <- function(file.i) {
# Check for duplicates and remove the second set if relevant
file.iNEW <- remove_column_duplicates(file.i)
# rename first three columns
names(file.iNEW)[1:3] <- c("year", "dayofyear", "hourmin")
# Get desired columns and rename them
rmd2 <- file.iNEW %>% select(year:wd, LiCor, `Air C`) %>%
rename(wind_speed = ws, wind_dir = wd,
licor = LiCor, tempC = `Air C`)
# If licor values are < 0, change to NA
rmd3 <- rmd2 %>%
mutate(licor = ifelse(licor < 0, NA, licor))
return(rmd3)
}
i = 1
fileName <- fls[i]
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
hms_weather_compiled <- process_hms_weather(file.i)
hms_weather_compiled$fileName <- fileName
for (i in 2:length(fls)) {
fileName <- fls[i]
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
fileNew <- process_hms_weather(file.i)
fileNew$fileName <- fileName
hms_weather_compiled <- rbind(hms_weather_compiled, fileNew)
}
completedFiles <- unique(hms_weather_compiled$fileName)
completedFiles <- unique(hms_weather_compiled$fileName)
completedFiles
!fls %in% completedFiles
i = 112
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
i = 111
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
i = 110
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
names(file.i)
i = 112
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
file.i <- read.csv(file = paste(path_to_files, fls[i], sep = ""))
i = 113
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
names(file.i)
i = 112
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
names(file.i)
fls[11]
fls[112]
##### LIST OF FILE NAMES #####
# Need a list of file names for west beach
path_to_files <- "./data/climate_monterey/hms_west_beach/"
fileNames <- dir(path = path_to_files, recursive = TRUE, pattern = ".txt")
fileNames
# Remove fileNames that have a p
# p means partial - so months with a p are not complete, therefore, I should not use them when aggregating to month or above
p_files <- grep("p", fileNames)
fileNames[p_files]
fileNames %in% fileNames[p_files]
fls <- fileNames[!fileNames %in% fileNames[p_files]]
##### COMBINE FILES #####
i = 1
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
names(file.i)
remove_column_duplicates <- function(file.i){
orig_columns <- names(file.i)
dup_columns <- duplicated(names(file.i))
if (TRUE %in% dup_columns == TRUE){
file.i <- file.i[, orig_columns[!dup_columns]]
return(file.i)
}
if (TRUE %in% dup_columns == FALSE){
return(file.i)
}
}
process_hms_weather <- function(file.i) {
# Check for duplicates and remove the second set if relevant
file.iNEW <- remove_column_duplicates(file.i)
# rename first three columns
names(file.iNEW)[1:3] <- c("year", "dayofyear", "hourmin")
# Get desired columns and rename them
rmd2 <- file.iNEW %>% select(year:wd, LiCor, `Air C`) %>%
rename(wind_speed = ws, wind_dir = wd,
licor = LiCor, tempC = `Air C`)
# If licor values are < 0, change to NA
rmd3 <- rmd2 %>%
mutate(licor = ifelse(licor < 0, NA, licor))
return(rmd3)
}
i = 1
fileName <- fls[i]
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
hms_weather_compiled <- process_hms_weather(file.i)
hms_weather_compiled$fileName <- fileName
for (i in 2:length(fls)) {
fileName <- fls[i]
file.i <- read_csv(file = paste(path_to_files, fls[i], sep = ""))
fileNew <- process_hms_weather(file.i)
fileNew$fileName <- fileName
hms_weather_compiled <- rbind(hms_weather_compiled, fileNew)
}
completedFiles <- unique(hms_weather_compiled$fileName)
!fls %in% completedFiles
range(hms_weather_compiled$year)
tail(hms_weather_compiled)
head(hms_weather_compiled)
range(hms_weather_compiled$year)
hms_weather_compiled %>% filter(year < 2002)
hms_weather_compiled %>% filter(year > 2016)
hwc <- hms_weather_compiled %>% filter(year <= 2016 & year >= 2002)
glimpse(hms_weather_compiled)
hms_weather_compiled %>% filter(year < 2002)
hwc <- hms_weather_compiled %>% filter(year < 2016.1 & year > 2001.9)
hms_weather_compiled
View(hms_weather_compiled)
hwc <- hms_weather_compiled %>% filter(year < 2016.1 & year > 2001.9)
hwcL <- hwc %>% gather(key = climate_var, value = value, wind_speed:tempC) %>%
mutate(dateR = as.POSIXct(strptime(paste(year, dayofyear, sep = " "), "%Y %j")))
hwcL
hwc_daily <- hwcL %>% filter(!is.na(value)) %>%
group_by(climate_var, year, dayofyear, dateR) %>%
summarise(maximum = max(value),
median = median(value),
minimum = min(value)) %>%
ungroup()
hwc_daily
hwc_daily %>%
ggplot(aes(dateR, median)) +
geom_line() +
facet_wrap(~ climate_var, scales = "free")
