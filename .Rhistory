lim_annual <- lim_dailyL %>% group_by(id, metric, year) %>%
summarise(annual_mean = mean(tempC)) %>%
ungroup()
lim_annual %>%
ggplot(aes(year, annual_mean, color = metric)) +
facet_wrap(~ id, ncol = 5) +
geom_point() + geom_smooth(method = "lm")
positionDF <- read_csv("output/positionDF.csv")
positionDF
positionDF <- read.csv("output/positionDF.csv")
positionDF
positionDF <- read_csv("output/positionDF.csv")[-1]
positionDF
positionDF <- read_csv("output/positionDF.csv")[-1] %>%
select(position, sp, nest1:lat)
positionDF
glimpse(limpet)
lim_annual
positionDF <- read_csv("output/positionDF_edit.csv")[-1]
positionDF
positionDF <- read_csv("output/positionDF_edit.csv")[-1] %>%
select(position, sp, nest1:lat, run_id)
positionDF
positionDF <- read_csv("output/positionDF_edit.csv")[-1] %>%
select(position, sp, nest1:tidalHT, aspect, slope_normal, lon, lat, run_id)
positionDF
positionDF <- read_csv("output/positionDF_edit.csv")[-1] %>%
select(position, sp, nest1:tidalHT, aspect, slope_normal, lon, lat, run_id) %>%
rename(azimuth = aspect, aspect = slope_normal)
positionDF
lim_dailyL
lim_daily_means <- pdL %>%
group_by(id, metric) %>%
summarise(mean = mean(tempC),
sd = sd(tempC),
n = n(),
se = sd/sqrt(n),
CI = qt(0.975, df = n - 1) * se) %>%
ungroup()
# Get means of daily mean, max and min
lim_daily_means <- lim_dailyL %>%
group_by(id, metric) %>%
summarise(mean = mean(tempC),
sd = sd(tempC),
n = n(),
se = sd/sqrt(n),
CI = qt(0.975, df = n - 1) * se) %>%
ungroup()
lim_daily_means
positionDF
lim_daily_means2 <- inner_join(lim_daily_means, positionDF, by = "rund_id")
# Load the file that I sent to Luke for the hindcasts
positionDF <- read_csv("output/positionDF_edit.csv")[-1] %>%
select(position, sp, nest1:tidalHT, aspect, slope_normal, lon, lat, run_id) %>%
rename(azimuth = aspect, aspect = slope_normal)
positionDF
# Get limpet temperature data
limpet <- read_csv("../bigFiles/Limpet_temp_estimates.csv")
glimpse(limpet)
# Get dates, months, years
limpet2 <- limpet %>%
mutate(dateR = as.Date(TimePST),
month = month(TimePST),
year = year(TimePST))
glimpse(limpet2)
# Convert to long format
limpetL <- limpet2 %>% gather(key = "run_id", value = "tempC", Run118:Run135)
head(limpetL)
##### SUMMARISE DAILY #####
lim_dailyL <- limpetL %>% group_by(run_id, dateR, month, year) %>%
summarise(maximum = max(tempC),
median = median(tempC),
minimum = min(tempC)) %>%
ungroup() %>%
gather(., key = "metric", value = "tempC", maximum:minimum)
lim_dailyL
lim_daily_means <- lim_dailyL %>%
group_by(run_id, metric) %>%
summarise(mean = mean(tempC),
sd = sd(tempC),
n = n(),
se = sd/sqrt(n),
CI = qt(0.975, df = n - 1) * se) %>%
ungroup()
lim_daily_means2 <- inner_join(lim_daily_means, positionDF, by = "rund_id")
lim_dailyL
lim_daily_means
lim_daily_means2 <- inner_join(lim_daily_means, positionDF, by = "run_id")
lim_daily_means2 <- inner_join(lim_daily_means, positionDF, by = "run_id")
lim_daily_means2
lim_daily_means2 %>%
ggplot(aes(tidalHT, mean, color = metric)) +
geom_point()
lim_daily_means2 %>%
ggplot(aes(tidalHT, mean, color = metric)) +
geom_point() +
facet_wrap(~ sp)
lim_dailyL <- limpetL %>% group_by(run_id, dateR, month, year) %>%
summarise(maximum = max(tempC),
median = median(tempC),
minimum = min(tempC),
mean = mean(tempC),
sd = sd(tempC),
cv = sd/mean) %>%
ungroup()
lim_daily <- lim_dailyL
write.csv(lim_daily, "output/limpet_daily_temps.csv")
lim_daily
lim_daily <- read_csv("output/limpet_daily_temps.csv")
lim_daily
lim_daily <- read_csv("output/limpet_daily_temps.csv")[-1]
lim_daily
lim_dailyL
lim_dailyL <- lim_daily %>%
gather(., key = "metric", value = "tempC", maximum:cv)
lim_dailyL
lim_daily_summary <- lim_dailyL %>%
group_by(run_id, metric) %>%
summarise(mean = mean(tempC),
sd = sd(tempC),
n = n(),
se = sd/sqrt(n),
CI = qt(0.975, df = n - 1) * se,
max = max(tempC)) %>%
ungroup()
lds2 <- inner_join(lim_daily_summary, positionDF, by = "run_id")
lds2 %>%
ggplot(aes(tidalHT, mean, color = metric)) +
geom_point() +
facet_wrap(~ sp)
lim_dailyL <- lim_daily %>%
gather(., key = "metric", value = "tempC", maximum:minimum)
lim_dailyL
# Get daily summary stats
lim_daily_summary <- lim_dailyL %>%
group_by(run_id, metric) %>%
summarise(mean = mean(tempC),
sd = sd(tempC),
n = n(),
se = sd/sqrt(n),
CI = qt(0.975, df = n - 1) * se,
max = max(tempC)) %>%
ungroup()
# Join with position data
lds2 <- inner_join(lim_daily_summary, positionDF, by = "run_id")
lds2 %>%
ggplot(aes(tidalHT, mean, color = metric)) +
geom_point() +
facet_wrap(~ sp)
lim_daily
lim_dailyL
lim_dailyL
lim_daily
lim_daily
lim_daily
lim_dailyL <- lim_daily %>%
gather(., key = "metric", value = "tempC", maximum:minimum)
lim_dailyL
lim_daily
lim_dailyL <- lim_daily %>%
gather(., key = "metric", value = "tempC", maximum:minimum)
lim_dailyL
lim_dailyL <- lim_daily %>% select(-c(mean:cv)) %>%
gather(., key = "metric", value = "tempC", maximum:minimum)
lim_dailyL
lim_daily_summary <- lim_dailyL %>%
group_by(run_id, metric) %>%
summarise(mean = mean(tempC),
sd = sd(tempC),
n = n(),
se = sd/sqrt(n),
CI = qt(0.975, df = n - 1) * se,
max = max(tempC)) %>%
ungroup()
lim_daily_summary
lim_daily_summary
unique(lim_daily_summary$metric)
lds2 <- inner_join(lim_daily_summary, positionDF, by = "run_id")
lds2
unique(lds2$metric)
source("03_identify_size_cutoff.R")
head(dat4)
spCodes <- dat4 %>% select(species, sp) %>% distinct()
spCodes <- dat4 %>% select(species, sp) %>% distinct()
spCodes
level(spCodes$species)
levels(spCodes$species)
lds3 <- inner_join(lds2, spCodes, by = "sp")
lds3
lds3 %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.6, size = 2) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
labs(x = "Tidal height (m)", y = "Mean temperature (C)") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank())
lds3 %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.6, size = 2) +
geom_errorbar(aes(ymax = mean + sd,
ymin = mean - sd), width = 0.2, alpha = 0.6) +
labs(x = "Tidal height (m)", y = "Mean temperature (C)") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank())
lds3 %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.6, size = 2) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
labs(x = "Tidal height (m)", y = "Mean temperature (C)") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank())
lds3
lds3 %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.6, size = 2) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
labs(x = "Tidal height (m)", y = "Mean temperature (C)") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank()) +
geom_point(aes(tidalHT, max, color = NULL), alpha = 0.6, size = 2)
lds3 %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.6, size = 2) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
labs(x = "Tidal height (m)", y = "Mean temperature (C)") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank()) +
geom_point(data = subset(metric == "maximum"),
aes(tidalHT, max, color = NULL), alpha = 0.6, size = 2)
lds3 %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.6, size = 2) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
labs(x = "Tidal height (m)", y = "Mean temperature (C)") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank()) +
geom_point(data = subset(lds3, metric == "maximum"),
aes(tidalHT, max, color = NULL), alpha = 0.6, size = 2)
lim_dailyL
unique(lim_dailyL$metric)
lim_monthly <- lim_dailyL %>% group_by(run_id, metric, month, year) %>%
summarise(monthly_mean = mean(tempC)) %>%
ungroup() %>%
mutate(dateR = as.Date(paste(year, month, "15", sep = "-")))
lim_monthly
lim_monthly
lim_annual <- lim_monthly %>% group_by(run_id, metric, year) %>%
summarise(maximum = max(monthly_mean),
median = median(monthly_mean),
minimum = min(monthly_mean)) %>%
ungroup()
lim_annual
lim_monthly
lim_dailyL
lim_daily
lim_annual
lim_annual
lim_annual %>% filter(metric == "maximum") %>%
select(run_id:year, maximum)
lim_annual %>% filter(metric == "maximum") %>%
select(run_id, year, maximum)
la_max <- lim_annual %>% filter(metric == "maximum") %>%
select(run_id, year, maximum)
lim_annual
la_med <- lim_annual %>% filter(metric == "median") %>%
select(run_id, year, median)
la_med
la_min <- lim_annual %>% filter(metric == "minimum") %>%
select(run_id, year, minimum)
la_max
la_summary <- inner_join(la_max, la_med, by = c("run_id", "year")) %>%
inner_join(., la_min, by = c("run_id", "year"))
la_summary
la_summL <- gather(la_summary, key = "metric", value = "tempC", maximum:minimum)
la_summL %>%
ggplot(aes(year, tempC, color = metric)) +
facet_wrap(~ run_id, ncol = 5) +
geom_point() + geom_smooth(method = "lm")
lim_dailyL
la_summL <- gather(la_summary, key = "metric", value = "tempC", maximum:minimum) %>%
inner_join(., spCodes, by = "run_id")
spCodes
la_summL <- gather(la_summary, key = "metric", value = "tempC", maximum:minimum)
la_summL2 <- la_summL %>%
inner_join(., positionDF, by = "run_id")
la_summL2
la_summL2 <- la_summL %>%
inner_join(., positionDF, by = "run_id") %>%
inner_join(., spCodes, by = "sp")
la_summL2 %>%
ggplot(aes(year, tempC, color = metric)) +
facet_wrap(~ position, ncol = 5) +
geom_point(alpha = 0.6) + geom_smooth(method = "lm")
la_summL2
la_summL2
annual_summary <- la_summL2 %>%
group_by(position, tidalHT, azimuth, aspect, species, metric) %>%
summarise(mean = mean(tempC),
sd = sd(tempC),
n = n(),
se = sd/sqrt(n),
CI = qt(0.975, df = n - 1) * se) %>%
ungroup()
annual_summary
annual_summary %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.6, size = 2) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
labs(x = "Tidal height (m)", y = "Mean temperature (C)") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank())
lds3 %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.6, size = 2) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
labs(x = "Tidal height (m)", y = "Mean temperature (C)") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank()) +
geom_point(data = subset(lds3, metric == "maximum"),
aes(tidalHT, max, color = NULL), alpha = 0.6, size = 2)
annual_summary %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.6, size = 2) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
labs(x = "Tidal height (m)", y = "Mean temperature (C)") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank())
la_summL2 %>%
ggplot(aes(year, tempC, color = metric)) +
facet_wrap(~ position, ncol = 5) +
geom_point(alpha = 0.6) + geom_smooth(method = "lm")
lim_monthly
lim_daily
lds2
la_summL2 %>%
ggplot(aes(year, tempC, color = metric)) +
facet_wrap(~ species, ncol = 5) +
geom_point(alpha = 0.6) + geom_smooth(method = "lm")
la_summL2 %>%
ggplot(aes(year, tempC, color = metric)) +
facet_wrap(~ species, ncol = 5) +
geom_point(alpha = 0.6) + geom_smooth(method = "lm") +
ylab(expression(paste("Sea surface temperature (", degree, "C)"))) +
xlab("Year") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank())
la_summL2 %>%
ggplot(aes(year, tempC, color = metric)) +
facet_wrap(~ species, ncol = 5) +
geom_point(alpha = 0.6) + geom_smooth(method = "lm") +
ylab(expression(paste("Predicted limpet temperature (", degree, "C)"))) +
xlab("Year") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank())
annual_summary %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.6, size = 2) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
labs(x = "Tidal height (m)", y = "Mean temperature (C)") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank())
annual_summary %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.6, size = 2) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
labs(x = "Tidal height (m)", y = "Predicted body temperature (C)") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank())
annual_summary %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.6, size = 2) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
ylab(expression(paste("Predicted body temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank())
ggsave("figs/elahi_predicted_temp_tidal.png", height = 3.5, width = 7)
library(dplyr)
library(tidyr)
library(readr)
library(lubridate)
# load modern data
dat <- read.csv("./output/sbsMaster.csv", na.strings = "NA",
stringsAsFactors = FALSE) %>%
select(-c(X, row))
##### PREPARE DATA #####
# change ft to meters
dat$tideHTm <- dat$tideHTm/3.28084
# create numeric lat-long columns
dat$lat2 <- as.numeric(substr(dat$lat, 1, 8))
dat$long2 <- as.numeric(paste("-", substr(dat$long, 1, 9), sep = ""))
dat$LL <- with(dat, paste(lat2, long2, sep = ","))
##### DEFINE SAMPLING AREAS #####
### Need to define 'sampling areas' for each species,
### that were sampled in historic and modern studies
# Littorina keenae = nest1 (zoneA, zoneB, zoneC, zoneD)
dat %>% filter(sp == "LIKE") %>% distinct(nest1)
# Lottia digitalis = site (areaA, areaB, areaC) and nest1 (zone1, zone2, zone3)
dat %>% filter(sp == "LODI") %>% distinct(site, nest1)
# Chlorostoma funebralis = site (Wara.B, Wara.D)
dat %>% filter(sp == "CHFU") %>% distinct(site)
# Create new column called 'sampleArea' based on
# the areas that were resampled in modern surveys
unique(dat$site)
unique(dat$nest1)
dat$sampleArea <- as.factor(ifelse(dat$sp == "CHFU",
paste(dat$site),
paste(dat$site, dat$nest1, sep = "_")))
##### DEFINE SAMPLING UNITS FOR EACH SPECIES #####
# Littorina keenae = nest1 + nest2 = sampleUnit
dat %>% filter(sp == "LIKE") %>% group_by(sampleUnit) %>% tally()
# Chlorostoma funebralis = nest1 + nest2 = sampleUnit
dat %>% filter(sp == "CHFU") %>% group_by(sampleUnit) %>% tally()
dat %>% filter(sp == "CHFU") %>% distinct(site, nest1, nest2) %>% select(nest1:long) %>%
head()
# Lottia digitalis = site + nest1 + nest2 (quadrats within tidal heights)
dat %>% filter(sp == "LODI") %>% group_by(sampleUnit) %>% tally()
dat %>% filter(sp == "LODI") %>% group_by(site, nest1, nest2) %>% tally()
# Fix Lottia in present data
dat2 <- dat %>%
mutate(sampleUnit = ifelse(era == "present" & sp == "LODI",
paste(site, nest1, nest2, sep = "_"), sampleUnit))
unique(dat2$sampleUnit)
##### SUMMARISE TIDAL HEIGHT FOR EACH SAMPLE AREA #####
tidalHTdf <- dat2 %>% filter(!is.na(tideHTm)) %>%
group_by(sampleArea) %>%
summarise(sample_area_tidal_ht = mean(tideHTm))
tidalHTdf
tidalHTdf
?grep
gsub(tidalHTdf$sampleArea, "High")
gsub("High", tidalHTdf$sampleArea)
gsub("High", x = tidalHTdf$sampleArea)
grep("High", x = tidalHTdf$sampleArea)
high_rows <- grep("High", x = tidalHTdf$sampleArea)
high_df <- tidalHTdf[, high_rows]
high_df
high_df <- tidalHTdf[, high_rows[1]:high_rows[4]]
high_df
high_df <- tidalHTdf[high_rows[1]:high_rows[4], ]
high_df
new_tidal_ht <- tidalHTdf$sample_area_tidal_ht
new_tidal_ht
new_tidal_ht[high_rows[1]:high_rows[4], ] <- c(2.7, 3.9, 5.9, 6.9)
new_tidal_ht[high_rows[1]:high_rows[4]] <- c(2.7, 3.9, 5.9, 6.9)
new_tidal_ht
tidalHTdf$sample_area_tidal_ht <- new_tidal_ht
dat2 <- inner_join(dat2, tidalHTdf, by = "sampleArea")
dat2
dat2 <- dat2 %>% group_by(species) %>%
mutate(size_prop = size1mm/max(size1mm, na.rm = TRUE)) %>%
ungroup()
##### SIMPLIFY DATAFRAME #####
dat2 <- dat2 %>%
select(-c(lat, long)) %>%
rename(lat = lat2, long = long2) %>%
mutate(year = lubridate::year(dmy(date)))
head(dat2)
unique(dat2$year)
