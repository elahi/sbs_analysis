tempDF %>% filter(metric == "maximum") %>%
filter(species == "Chlorostoma funebralis") %>%
ggplot(aes(tidalHT, mean, shape = species, color = species)) +
geom_point(alpha = 0.6, size = 2) +
geom_line(aes(group = interaction(species, metric), color = species),
alpha = 1, size = 0.15) +
scale_colour_manual(values=cbPalette) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
ylab(expression(paste("Maximum temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
theme(legend.position = "none") +
facet_wrap(~ dataset, ncol = 2, #scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
scale_y_continuous(limits = c(16, 39)) +
scale_x_continuous(limits = c(-0.1, 8))
ggsave("figs/elahi_temp_body_rock_ppt1.png", height = 3.5, width = 7)
# plot2
tempDF %>% filter(metric == "maximum") %>%
filter(species != "Littorina keenae") %>%
ggplot(aes(tidalHT, mean, shape = species, color = species)) +
geom_point(alpha = 0.6, size = 2) +
geom_line(aes(group = interaction(species, metric), color = species),
alpha = 1, size = 0.15) +
scale_colour_manual(values=cbPalette) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
ylab(expression(paste("Maximum temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
theme(legend.position = "none") +
facet_wrap(~ dataset, ncol = 2, #scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
scale_y_continuous(limits = c(16, 39)) +
scale_x_continuous(limits = c(-0.1, 8))
ggsave("figs/elahi_temp_body_rock_ppt2.png", height = 3.5, width = 7)
# plot3
tempDF %>% filter(metric == "maximum") %>%
#filter(species != "Littorina keenae") %>%
ggplot(aes(tidalHT, mean, shape = species, color = species)) +
geom_point(alpha = 0.6, size = 2) +
geom_line(aes(group = interaction(species, metric), color = species),
alpha = 1, size = 0.15) +
scale_colour_manual(values=cbPalette) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
ylab(expression(paste("Maximum temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
theme(legend.position = "none") +
facet_wrap(~ dataset, ncol = 2, #scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
scale_y_continuous(limits = c(16, 39)) +
scale_x_continuous(limits = c(-0.1, 8))
ggsave("figs/elahi_temp_body_rock_ppt3.png", height = 3.5, width = 7)
library(grid)
# load data
source("03_identify_size_cutoff.R")
# plotting functions
source("./R/multiplotF.R")
head(dat4)
##### TRY FACETTING #####
facet_panels <- dat4 %>% select(species, era) %>% distinct() %>%
arrange(species, era)
facet_panels
facet_panels <- facet_panels %>%
mutate(facet_labels = paste(LETTERS)[1:6]) %>%
arrange(facet_labels)
dat6 <- dat4 %>%
inner_join(., facet_panels, by = c("species", "era"))
dat6 %>%
ggplot(aes(size1mm)) +
geom_histogram(aes(y = ..density.. * 100), binwidth = 1,
color = "black", fill = "gray") +
facet_grid(era ~ species, switch = "y") +
geom_vline(aes(xintercept = size0.05), linetype = "dashed", color = "red") +
labs(x = "Size (mm)", y = "Frequency (%)") +
theme(strip.background = element_blank()) +
geom_text(data = facet_panels, aes(0.1, 18, label = facet_labels),
inherit.aes = FALSE)
# Littorina keenae
childsDF <- droplevels(filter(dat6, sp == "LIKE"))
childsPast <- childsDF %>% filter(era == "past")
childsPres <- childsDF %>% filter(era == "present")
# Chlorostoma funebralis
waraDF <- droplevels(filter(dat6, sp == "CHFU"))
waraPast <- waraDF %>% filter(era == "past")
waraPres <- waraDF %>% filter(era == "present")
# Lottia digitalis
hexDF <- droplevels(filter(dat6, sp == "LODI"))
hexPast <- hexDF %>% filter(era == "past")
hexPres <- hexDF %>% filter(era == "present")
plot_histo_panel <- function(df, bin_width = 1) {
p <- ggplot(df,  aes(x = size1mm)) +
geom_histogram(aes(y = ..count../sum(..count..)), binwidth = bin_width,
color = "black", fill = "gray") +
xlab("Size (mm)") + ylab("Proportion") +
geom_vline(aes(xintercept = size0.05),
linetype = "dashed", color = "black", alpha = 0.65)
return(p)
}
# Need to customize for each panel:
theme_set(theme_bw(base_size = 10))
# theme_set(theme_bw(base_size = 10) +
#             theme(panel.grid = element_blank()))
fig1a <- plot_histo_panel(waraPast, bin_width = 2) +
scale_x_continuous(limits = c(2, 32)) +
scale_y_continuous(limits = c(0, 0.31)) +
annotate("text", label = "1963\nn = 817",
x = 32, y = 0.31, size = 2.2, vjust = 1, hjust = 1) +
annotate("text", label = "A",
x = 2, y = 0.31, vjust = 1, hjust = -0.05) +
ggtitle("Chlorostoma funebralis") +
theme(plot.title = element_text(size = 6, face = "italic",
hjust = 0.5, vjust = 0.9))
fig1b <- plot_histo_panel(waraPres, bin_width = 2) +
scale_x_continuous(limits = c(2, 32)) +
scale_y_continuous(limits = c(0, 0.31)) +
annotate("text", label = "2014\nn = 5995",
x = 32, y = 0.31, size = 2.2, vjust = 1, hjust = 1) +
annotate("text", label = "B",
x = 2, y = 0.31, vjust = 1, hjust = -0.05)
fig1c <- plot_histo_panel(hexPast) +
scale_x_continuous(limits = c(5, 25)) +
scale_y_continuous(limits = c(0, 0.2)) +
annotate("text", label = "1950\nn = 492",
x = 25, y = 0.2, size = 2.2, vjust = 1, hjust = 1) +
annotate("text", label = "C",
x = 5, y = 0.2, vjust = 1, hjust = -0.05) +
ggtitle("Lottia digitalis") +
theme(plot.title = element_text(size = 6, face = "italic",
hjust = 0.5, vjust = 0.9))
fig1d <- plot_histo_panel(hexPres) +
scale_x_continuous(limits = c(5, 25)) +
scale_y_continuous(limits = c(0, 0.2)) +
annotate("text", label = "2015\nn = 587",
x = 25, y = 0.2, size = 2.2, vjust = 1, hjust = 1) +
annotate("text", label = "D",
x = 5, y = 0.2, vjust = 1, hjust = -0.05)
fig1e <- plot_histo_panel(childsPast) +
scale_x_continuous(limits = c(1, 21)) +
scale_y_continuous(limits = c(0, 0.2)) +
annotate("text", label = "1947\nn = 682",
x = 21, y = 0.2, size = 2.2, vjust = 1, hjust = 1) +
annotate("text", label = "E",
x = 1, y = 0.2, vjust = 1, hjust = -0.05) +
ggtitle("Littorina keenae") +
theme(plot.title = element_text(size = 6, face = "italic",
hjust = 0.5, vjust = 0.9))
fig1f <- plot_histo_panel(childsPres) +
scale_x_continuous(limits = c(1, 21)) +
scale_y_continuous(limits = c(0, 0.2)) +
annotate("text", label = "2014\nn = 733",
x = 21, y = 0.2, size = 2.2, vjust = 1, hjust = 1) +
annotate("text", label = "F",
x = 1, y = 0.2, vjust = 1, hjust = -0.05)
multiplot(fig1a, fig1b, fig1c, fig1d, fig1e, fig1f, cols = 3)
head(dat6)
dat6 %>% group_by(species, era) %>%
summarise(mean = mean(size1mm, na.rm = TRUE))
head(dat6)
names(dat6)
dat7 <- dat6 %>% group_by(species, era) %>%
summarise(mean_size = mean(size1mm, na.rm = TRUE))
dat7 <- dat6 %>% group_by(species, era) %>%
mutate(mean_size = mean(size1mm, na.rm = TRUE))
head(dat7)
View(dat7)
# Littorina keenae
childsDF <- droplevels(filter(dat7, sp == "LIKE"))
childsPast <- childsDF %>% filter(era == "past")
childsPres <- childsDF %>% filter(era == "present")
# Chlorostoma funebralis
waraDF <- droplevels(filter(dat7, sp == "CHFU"))
waraPast <- waraDF %>% filter(era == "past")
waraPres <- waraDF %>% filter(era == "present")
# Lottia digitalis
hexDF <- droplevels(filter(dat7, sp == "LODI"))
hexPast <- hexDF %>% filter(era == "past")
hexPres <- hexDF %>% filter(era == "present")
plot_histo_panel <- function(df, bin_width = 1) {
p <- ggplot(df,  aes(x = size1mm)) +
geom_histogram(aes(y = ..count../sum(..count..)), binwidth = bin_width,
color = "black", fill = "gray") +
xlab("Size (mm)") + ylab("Proportion") +
geom_vline(aes(xintercept = mean_size),
linetype = "dashed", color = "red", alpha = 0.65)
return(p)
}
theme_set(theme_bw(base_size = 10))
# theme_set(theme_bw(base_size = 10) +
#             theme(panel.grid = element_blank()))
fig1a <- plot_histo_panel(waraPast, bin_width = 2) +
scale_x_continuous(limits = c(2, 32)) +
scale_y_continuous(limits = c(0, 0.31)) +
annotate("text", label = "1963\nn = 817",
x = 32, y = 0.31, size = 2.2, vjust = 1, hjust = 1) +
annotate("text", label = "A",
x = 2, y = 0.31, vjust = 1, hjust = -0.05) +
ggtitle("Chlorostoma funebralis") +
theme(plot.title = element_text(size = 6, face = "italic",
hjust = 0.5, vjust = 0.9))
fig1a
fig1b <- plot_histo_panel(waraPres, bin_width = 2) +
scale_x_continuous(limits = c(2, 32)) +
scale_y_continuous(limits = c(0, 0.31)) +
annotate("text", label = "2014\nn = 5995",
x = 32, y = 0.31, size = 2.2, vjust = 1, hjust = 1) +
annotate("text", label = "B",
x = 2, y = 0.31, vjust = 1, hjust = -0.05)
fig1c <- plot_histo_panel(hexPast) +
scale_x_continuous(limits = c(5, 25)) +
scale_y_continuous(limits = c(0, 0.2)) +
annotate("text", label = "1950\nn = 492",
x = 25, y = 0.2, size = 2.2, vjust = 1, hjust = 1) +
annotate("text", label = "C",
x = 5, y = 0.2, vjust = 1, hjust = -0.05) +
ggtitle("Lottia digitalis") +
theme(plot.title = element_text(size = 6, face = "italic",
hjust = 0.5, vjust = 0.9))
fig1d <- plot_histo_panel(hexPres) +
scale_x_continuous(limits = c(5, 25)) +
scale_y_continuous(limits = c(0, 0.2)) +
annotate("text", label = "2015\nn = 587",
x = 25, y = 0.2, size = 2.2, vjust = 1, hjust = 1) +
annotate("text", label = "D",
x = 5, y = 0.2, vjust = 1, hjust = -0.05)
fig1e <- plot_histo_panel(childsPast) +
scale_x_continuous(limits = c(1, 21)) +
scale_y_continuous(limits = c(0, 0.2)) +
annotate("text", label = "1947\nn = 682",
x = 21, y = 0.2, size = 2.2, vjust = 1, hjust = 1) +
annotate("text", label = "E",
x = 1, y = 0.2, vjust = 1, hjust = -0.05) +
ggtitle("Littorina keenae") +
theme(plot.title = element_text(size = 6, face = "italic",
hjust = 0.5, vjust = 0.9))
fig1f <- plot_histo_panel(childsPres) +
scale_x_continuous(limits = c(1, 21)) +
scale_y_continuous(limits = c(0, 0.2)) +
annotate("text", label = "2014\nn = 733",
x = 21, y = 0.2, size = 2.2, vjust = 1, hjust = 1) +
annotate("text", label = "F",
x = 1, y = 0.2, vjust = 1, hjust = -0.05)
multiplot(fig1a, fig1b, fig1c, fig1d, fig1e, fig1f, cols = 3)
fig1a <- plot_histo_panel(waraPast, bin_width = 2) +
scale_x_continuous(limits = c(2, 32)) +
scale_y_continuous(limits = c(0, 0.31)) +
annotate("text", label = "1963\nn = 817",
x = 32, y = 0.31, size = 2.2, vjust = 1, hjust = 1) +
# annotate("text", label = "A",
#          x = 2, y = 0.31, vjust = 1, hjust = -0.05) +
ggtitle("Chlorostoma funebralis") +
theme(plot.title = element_text(size = 6, face = "italic",
hjust = 0.5, vjust = 0.9))
fig1b <- plot_histo_panel(waraPres, bin_width = 2) +
scale_x_continuous(limits = c(2, 32)) +
scale_y_continuous(limits = c(0, 0.31)) +
annotate("text", label = "2014\nn = 5995",
x = 32, y = 0.31, size = 2.2, vjust = 1, hjust = 1) #+
fig1c <- plot_histo_panel(hexPast) +
scale_x_continuous(limits = c(5, 25)) +
scale_y_continuous(limits = c(0, 0.2)) +
annotate("text", label = "1950\nn = 492",
x = 25, y = 0.2, size = 2.2, vjust = 1, hjust = 1) +
# annotate("text", label = "C",
#          x = 5, y = 0.2, vjust = 1, hjust = -0.05) +
ggtitle("Lottia digitalis") +
theme(plot.title = element_text(size = 6, face = "italic",
hjust = 0.5, vjust = 0.9))
fig1d <- plot_histo_panel(hexPres) +
scale_x_continuous(limits = c(5, 25)) +
scale_y_continuous(limits = c(0, 0.2)) +
annotate("text", label = "2015\nn = 587",
x = 25, y = 0.2, size = 2.2, vjust = 1, hjust = 1)
fig1e <- plot_histo_panel(childsPast) +
scale_x_continuous(limits = c(1, 21)) +
scale_y_continuous(limits = c(0, 0.2)) +
annotate("text", label = "1947\nn = 682",
x = 21, y = 0.2, size = 2.2, vjust = 1, hjust = 1) #+
annotate("text", label = "E",
x = 1, y = 0.2, vjust = 1, hjust = -0.05) +
ggtitle("Littorina keenae") +
theme(plot.title = element_text(size = 6, face = "italic",
hjust = 0.5, vjust = 0.9))
fig1e <- plot_histo_panel(childsPast) +
scale_x_continuous(limits = c(1, 21)) +
scale_y_continuous(limits = c(0, 0.2)) +
annotate("text", label = "1947\nn = 682",
x = 21, y = 0.2, size = 2.2, vjust = 1, hjust = 1) +
# annotate("text", label = "E",
#          x = 1, y = 0.2, vjust = 1, hjust = -0.05) +
ggtitle("Littorina keenae") +
theme(plot.title = element_text(size = 6, face = "italic",
hjust = 0.5, vjust = 0.9))
fig1f <- plot_histo_panel(childsPres) +
scale_x_continuous(limits = c(1, 21)) +
scale_y_continuous(limits = c(0, 0.2)) +
annotate("text", label = "2014\nn = 733",
x = 21, y = 0.2, size = 2.2, vjust = 1, hjust = 1)
multiplot(fig1a, fig1b, fig1c, fig1d, fig1e, fig1f, cols = 3)
png("./figs/sbs_fig1_ppt.png", width = 7, height = 3.5, units = "in", res = 300)
multiplot(fig1a, fig1b, fig1c, fig1d, fig1e, fig1f, cols = 3)
dev.off()
# Get monterey air summary
source("05_summarise_monterey_weather.R")
air_annual_long <- air_annual_long %>%
mutate(dataset = "Air")
# Get SST summary
source("05_summarise_hms_sst.R")
sst_annual_long
sst_annual_long <- sst_annual_long %>%
mutate(dataset = "Seawater")
### Load limpet hindcasts (15 yrs of modeled body temperatures)
source("05_summarise_limpet_temps.R")
lim_annual_seasons_long2
theme_set(theme_bw(base_size = 12))
# theme_set(theme_bw(base_size = 12) +
#             theme(panel.grid = element_blank()))
### Combine data
temp_records <- rbind(sst_annual_long, air_annual_long)
##### GET YEARS OF SNAIL SAMPLES #####
head(dat4)
spYrs <- dat4 %>% ungroup() %>% select(species, year) %>% distinct() %>%
arrange(species, year) %>%
group_by(species) %>%
mutate(genus = unlist(strsplit(as.character(species), split = " +"))[1]) %>%
ungroup()
spYrs
spYrs$genus <- factor(spYrs$genus, levels = c("Chlorostoma", "Lottia", "Littorina"))
##### TWO-PANEL PLOT #####
sort(unique(lim_annual_seasons_long2$tidalHT))
lim_for_sst <- lim_annual_seasons_long2 %>%
filter(tidalHT == 1.1) %>%
mutate(dataset = "Seawater")
lim_for_air <- lim_annual_seasons_long2 %>%
filter(tidalHT == 7.55) %>%
mutate(dataset = "Air")
text_df <- data.frame(x = c(rep(1940, 3)),
y = c(6.5, 13, 21),
text1 = c("Min", "Median", "Max"),
dataset = rep("Air", 3),
metric = c("minimum", "median", "maximum"))
facet_label_text <- data.frame(x = rep(1938, 2),
y = rep(23.3, 2),
text1 = c("A", "B"),
dataset = c("Air", "Seawater"))
temp_records %>%
ggplot(aes(year, tempC, color = metric)) +
geom_smooth(data = subset(temp_records, dataset == "Seawater" &
metric == "maximum"), method = "lm",
color = "darkgray", linetype = "dashed") +
geom_smooth(data = subset(temp_records, dataset == "Air" &
metric == "maximum"), method = "lm",
color = "darkgray", linetype = "dashed") +
geom_smooth(data = subset(temp_records, dataset == "Air" &
metric == "minimum"), method = "lm",
color = "darkgray", linetype = "dashed") +
geom_line(alpha = 1) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.title = element_blank()) +
theme(legend.position = "top") +
guides(color = FALSE) +
guides(shape =
guide_legend(title = "SAMPLING EVENT", title.position = "top",
title.hjust = 0.5,
title.theme =
element_text(size = 10, face = "bold", angle = 0),
direction = "horizontal",
label.theme = element_text(angle = 0, size = 8,
face =  "italic"))) +
facet_wrap(~ dataset) +
theme(strip.background = element_blank()) +
geom_line(data = lim_for_sst,
aes(year, tempC), alpha = 0.25, size = 1.5) +
geom_line(data = lim_for_air,
aes(year, tempC), alpha = 0.25, size = 1.5) +
geom_line(data = lim_for_sst,
aes(year, tempC, group = metric), alpha = 1, size = 0.25, color = "black") +
geom_line(data = lim_for_air,
aes(year, tempC, group = metric), alpha = 1, size = 0.25, color = "black") +
geom_text(aes(x, y, label = text1), data = text_df, size = 3,
hjust = 0, fontface = "bold") +
geom_point(aes(x = year, y = 5, shape = species, color = NULL), data = spYrs,
alpha = 0.6, size = 2) +
geom_text(aes(x, y, label = text1, color = NULL, shape = NULL),
data = facet_label_text, size = 5, hjust = 0.25, vjust = 0.75,
show.legend = FALSE)
temp_records %>%
ggplot(aes(year, tempC, color = metric)) +
geom_smooth(data = subset(temp_records, dataset == "Seawater" &
metric == "maximum"), method = "lm",
color = "darkgray", linetype = "dashed") +
geom_smooth(data = subset(temp_records, dataset == "Air" &
metric == "maximum"), method = "lm",
color = "darkgray", linetype = "dashed") +
geom_smooth(data = subset(temp_records, dataset == "Air" &
metric == "minimum"), method = "lm",
color = "darkgray", linetype = "dashed")
temp_records %>%
ggplot(aes(year, tempC, color = metric)) +
geom_smooth(data = subset(temp_records, dataset == "Seawater" &
metric == "maximum"), method = "lm",
color = "darkgray", linetype = "dashed") +
geom_smooth(data = subset(temp_records, dataset == "Air" &
metric == "maximum"), method = "lm",
color = "darkgray", linetype = "dashed") +
geom_smooth(data = subset(temp_records, dataset == "Air" &
metric == "minimum"), method = "lm",
color = "darkgray", linetype = "dashed") +
geom_line(alpha = 1) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.title = element_blank()) +
theme(legend.position = "top") +
guides(color = FALSE)
temp_records %>%
ggplot(aes(year, tempC, color = metric)) +
geom_smooth(data = subset(temp_records, dataset == "Seawater" &
metric == "maximum"), method = "lm",
color = "darkgray", linetype = "dashed") +
geom_smooth(data = subset(temp_records, dataset == "Air" &
metric == "maximum"), method = "lm",
color = "darkgray", linetype = "dashed") +
geom_smooth(data = subset(temp_records, dataset == "Air" &
metric == "minimum"), method = "lm",
color = "darkgray", linetype = "dashed") +
geom_line(alpha = 1) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.title = element_blank()) +
theme(legend.position = "top") +
guides(color = FALSE) +
guides(shape =
guide_legend(title = "SAMPLING EVENT", title.position = "top",
title.hjust = 0.5,
title.theme =
element_text(size = 10, face = "bold", angle = 0),
direction = "horizontal",
label.theme = element_text(angle = 0, size = 8,
face =  "italic"))) +
facet_wrap(~ dataset) +
theme(strip.background = element_blank())
temp_records %>%
ggplot(aes(year, tempC, color = metric)) +
geom_smooth(data = subset(temp_records, dataset == "Seawater" &
metric == "maximum"), method = "lm",
color = "darkgray", linetype = "dashed") +
geom_smooth(data = subset(temp_records, dataset == "Air" &
metric == "maximum"), method = "lm",
color = "darkgray", linetype = "dashed") +
geom_smooth(data = subset(temp_records, dataset == "Air" &
metric == "minimum"), method = "lm",
color = "darkgray", linetype = "dashed") +
geom_line(alpha = 1) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.title = element_blank()) +
theme(legend.position = "top") +
guides(color = FALSE) +
guides(shape =
guide_legend(title = "SAMPLING EVENT", title.position = "top",
title.hjust = 0.5,
title.theme =
element_text(size = 10, face = "bold", angle = 0),
direction = "horizontal",
label.theme = element_text(angle = 0, size = 8,
face =  "italic"))) +
facet_wrap(~ dataset) +
theme(strip.background = element_blank()) +
# geom_line(data = lim_for_sst,
#           aes(year, tempC), alpha = 0.25, size = 1.5) +
# geom_line(data = lim_for_air,
#           aes(year, tempC), alpha = 0.25, size = 1.5) +
# geom_line(data = lim_for_sst,
#           aes(year, tempC, group = metric), alpha = 1, size = 0.25, color = "black") +
# geom_line(data = lim_for_air,
#           aes(year, tempC, group = metric), alpha = 1, size = 0.25, color = "black") +
geom_text(aes(x, y, label = text1), data = text_df, size = 3,
hjust = 0, fontface = "bold")
temp_records %>%
ggplot(aes(year, tempC, color = metric)) +
geom_smooth(data = subset(temp_records, dataset == "Seawater" &
metric == "maximum"), method = "lm",
color = "darkgray", linetype = "dashed") +
geom_smooth(data = subset(temp_records, dataset == "Air" &
metric == "maximum"), method = "lm",
color = "darkgray", linetype = "dashed") +
geom_smooth(data = subset(temp_records, dataset == "Air" &
metric == "minimum"), method = "lm",
color = "darkgray", linetype = "dashed") +
geom_line(alpha = 1) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.title = element_blank()) +
theme(legend.position = "top") +
guides(color = FALSE) +
guides(shape =
guide_legend(title = "SAMPLING EVENT", title.position = "top",
title.hjust = 0.5,
title.theme =
element_text(size = 10, face = "bold", angle = 0),
direction = "horizontal",
label.theme = element_text(angle = 0, size = 8,
face =  "italic"))) +
facet_wrap(~ dataset) +
theme(strip.background = element_blank()) +
geom_text(aes(x, y, label = text1), data = text_df, size = 3,
hjust = 0, fontface = "bold")
ggsave("figs/temp_timeseries_ppt.png", height = 3.5, width = 7)
