scale_x_continuous(limits = c(-0.1, 8))
ggsave("figs/elahi_temp_body_rock_ppt3_hindcast.png", height = 3.5, width = 3.5)
tempDF %>% filter(metric == "maximum") %>% filter(dataset == "Model") %>%
#filter(species != "Littorina keenae") %>%
ggplot(aes(tidalHT, mean, shape = species, color = species)) +
geom_point(alpha = 1, size = 2) +
geom_line(aes(group = interaction(species, metric), color = species),
alpha = 1, size = 0.5) +
scale_colour_manual(values=cbPalette) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.1, alpha = 1) +
ylab(expression(paste("Maximum temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
theme(legend.position = "none") +
facet_wrap(~ dataset, ncol = 2, #scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
scale_y_continuous(limits = c(16, 21)) +
scale_x_continuous(limits = c(-0.1, 8))
ggsave("figs/elahi_temp_body_rock_ppt3_hindcast.png", height = 1.75, width = 3.5)
ggsave("figs/elahi_temp_body_rock_ppt3_hindcast.png", height = 3.5, width = 5)
tempDF %>% filter(metric == "maximum") %>% filter(dataset == "Model") %>%
#filter(species != "Littorina keenae") %>%
ggplot(aes(tidalHT, mean, shape = species, color = species)) +
geom_point(alpha = 1, size = 2) +
geom_line(aes(group = interaction(species, metric), color = species),
alpha = 1, size = 0.5) +
scale_colour_manual(values=cbPalette) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.1, alpha = 1) +
ylab(expression(paste("Maximum\ntemperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
theme(legend.position = "none") +
facet_wrap(~ dataset, ncol = 2, #scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
scale_y_continuous(limits = c(16, 21)) +
scale_x_continuous(limits = c(-0.1, 8))
# plot3
tempDF %>% filter(metric == "maximum") %>% filter(dataset == "Model") %>%
#filter(species != "Littorina keenae") %>%
ggplot(aes(tidalHT, mean, shape = species, color = species)) +
geom_point(alpha = 1, size = 2) +
geom_line(aes(group = interaction(species, metric), color = species),
alpha = 1, size = 0.5) +
scale_colour_manual(values=cbPalette) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.1, alpha = 1) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
theme(legend.position = "none") +
facet_wrap(~ dataset, ncol = 2, #scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
scale_y_continuous(limits = c(16, 21)) +
scale_x_continuous(limits = c(-0.1, 8))
ggsave("figs/elahi_temp_body_rock_ppt3_hindcast.png", height = 1.75, width = 3.5)
theme_set(theme_bw(base_size = 8))
tempDF %>% filter(metric == "maximum") %>% filter(dataset == "Model") %>%
#filter(species != "Littorina keenae") %>%
ggplot(aes(tidalHT, mean, shape = species, color = species)) +
geom_point(alpha = 1, size = 2) +
geom_line(aes(group = interaction(species, metric), color = species),
alpha = 1, size = 0.5) +
scale_colour_manual(values=cbPalette) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.1, alpha = 1) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
theme(legend.position = "none") +
facet_wrap(~ dataset, ncol = 2, #scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
scale_y_continuous(limits = c(16, 21)) +
scale_x_continuous(limits = c(-0.1, 8))
ggsave("figs/elahi_temp_body_rock_ppt3_hindcast.png", height = 1.75, width = 3.5)
tempDF %>% filter(metric == "maximum") %>% filter(dataset == "Model") %>%
#filter(species != "Littorina keenae") %>%
ggplot(aes(tidalHT, mean, shape = species, color = species)) +
geom_point(alpha = 1, size = 1) +
geom_line(aes(group = interaction(species, metric), color = species),
alpha = 1, size = 0.5) +
scale_colour_manual(values=cbPalette) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.1, alpha = 1) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
theme(legend.position = "none") +
facet_wrap(~ dataset, ncol = 2, #scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
scale_y_continuous(limits = c(16, 21)) +
scale_x_continuous(limits = c(-0.1, 8))
ggsave("figs/elahi_temp_body_rock_ppt3_hindcast.png", height = 1.75, width = 3.5)
tempDF %>% filter(metric == "maximum") %>% filter(dataset == "Model") %>%
#filter(species != "Littorina keenae") %>%
ggplot(aes(tidalHT, mean, shape = species, color = species)) +
geom_point(alpha = 1, size = 1.5) +
geom_line(aes(group = interaction(species, metric), color = species),
alpha = 1, size = 0.5) +
scale_colour_manual(values=cbPalette) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.1, alpha = 1) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
theme(legend.position = "none") +
facet_wrap(~ dataset, ncol = 2, #scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
scale_y_continuous(limits = c(16, 21)) +
scale_x_continuous(limits = c(-0.1, 8))
ggsave("figs/elahi_temp_body_rock_ppt3_hindcast.png", height = 1.75, width = 3.5)
tempDF %>% filter(metric == "maximum") %>% filter(dataset == "Model") %>%
#filter(species != "Littorina keenae") %>%
ggplot(aes(tidalHT, mean, shape = species, color = species)) +
geom_point(alpha = 1, size = 1.5) +
geom_line(aes(group = interaction(species, metric), color = species),
alpha = 1, size = 0.5) +
scale_colour_manual(values=cbPalette) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.1, alpha = 1) +
ylab(expression(paste("Max temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
theme(legend.position = "none") +
facet_wrap(~ dataset, ncol = 2, #scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
scale_y_continuous(limits = c(16, 21)) +
scale_x_continuous(limits = c(-0.1, 8))
ggsave("figs/elahi_temp_body_rock_ppt3_hindcast.png", height = 1.75, width = 3.5)
theme_set(theme_bw(base_size = 8) + theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank()))
# plot3
tempDF %>% filter(metric == "maximum") %>% filter(dataset == "Model") %>%
#filter(species != "Littorina keenae") %>%
ggplot(aes(tidalHT, mean, shape = species, color = species)) +
geom_point(alpha = 1, size = 1.5) +
geom_line(aes(group = interaction(species, metric), color = species),
alpha = 1, size = 0.5) +
scale_colour_manual(values=cbPalette) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.1, alpha = 1) +
ylab(expression(paste("Max temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
theme(legend.position = "none") +
facet_wrap(~ dataset, ncol = 2, #scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
scale_y_continuous(limits = c(16, 21)) +
scale_x_continuous(limits = c(-0.1, 8))
ggsave("figs/elahi_temp_body_rock_ppt3_hindcast.png", height = 1.75, width = 3.5)
tempDF %>% filter(metric == "maximum") %>% filter(dataset == "Model") %>%
filter(species != "Littorina keenae") %>%
ggplot(aes(tidalHT, mean, shape = species, color = species)) +
geom_point(alpha = 1, size = 1.5) +
geom_line(aes(group = interaction(species, metric), color = species),
alpha = 1, size = 0.5) +
scale_colour_manual(values=cbPalette) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.1, alpha = 1) +
ylab(expression(paste("Max temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
theme(legend.position = "none") +
facet_wrap(~ dataset, ncol = 2, #scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
scale_y_continuous(limits = c(16, 21)) +
scale_x_continuous(limits = c(-0.1, 8))
ggsave("figs/elahi_temp_body_rock_ppt2_hindcast.png", height = 3.5, width = 7)
tempDF %>% filter(metric == "maximum") %>% filter(dataset == "Model") %>%
filter(species == "Chlorostoma funebralis") %>%
ggplot(aes(tidalHT, mean, shape = species, color = species)) +
geom_point(alpha = 1, size = 1.5) +
geom_line(aes(group = interaction(species, metric), color = species),
alpha = 1, size = 0.5) +
scale_colour_manual(values=cbPalette) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.1, alpha = 1) +
ylab(expression(paste("Max temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
theme(legend.position = "none") +
facet_wrap(~ dataset, ncol = 2, #scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
scale_y_continuous(limits = c(16, 21)) +
scale_x_continuous(limits = c(-0.1, 8))
ggsave("figs/elahi_temp_body_rock_ppt1_hindcast.png", height = 3.5, width = 3.5)
tempDF %>% filter(metric == "maximum") %>% filter(dataset == "Model") %>%
filter(species == "Chlorostoma funebralis") %>%
ggplot(aes(tidalHT, mean, shape = species, color = species)) +
geom_point(alpha = 1, size = 1.5) +
geom_line(aes(group = interaction(species, metric), color = species),
alpha = 1, size = 0.5) +
scale_colour_manual(values=cbPalette) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.1, alpha = 1) +
ylab(expression(paste("Max temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
theme(legend.position = "none") +
facet_wrap(~ dataset, ncol = 2, #scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
scale_y_continuous(limits = c(16, 21)) +
scale_x_continuous(limits = c(-0.1, 8))
ggsave("figs/elahi_temp_body_rock_ppt1_hindcast.png", height = 1.75, width = 3.5)
# plot2
tempDF %>% filter(metric == "maximum") %>% filter(dataset == "Model") %>%
filter(species != "Littorina keenae") %>%
ggplot(aes(tidalHT, mean, shape = species, color = species)) +
geom_point(alpha = 1, size = 1.5) +
geom_line(aes(group = interaction(species, metric), color = species),
alpha = 1, size = 0.5) +
scale_colour_manual(values=cbPalette) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.1, alpha = 1) +
ylab(expression(paste("Max temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
theme(legend.position = "none") +
facet_wrap(~ dataset, ncol = 2, #scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
scale_y_continuous(limits = c(16, 21)) +
scale_x_continuous(limits = c(-0.1, 8))
ggsave("figs/elahi_temp_body_rock_ppt2_hindcast.png", height = 1.75, width = 3.5)
# Get monterey air summary
source("05_summarise_monterey_weather.R")
air_annual_long <- air_annual_long %>%
mutate(dataset = "Air")
# Get SST summary
source("05_summarise_hms_sst.R")
sst_annual_long
sst_annual_long <- sst_annual_long %>%
mutate(dataset = "Seawater")
### Load limpet hindcasts (15 yrs of modeled body temperatures)
source("05_summarise_limpet_temps.R")
lim_annual_seasons_long2
theme_set(theme_bw(base_size = 12))
# theme_set(theme_bw(base_size = 12) +
#             theme(panel.grid = element_blank()))
### Combine data
temp_records <- rbind(sst_annual_long, air_annual_long)
##### GET YEARS OF SNAIL SAMPLES #####
head(dat4)
spYrs <- dat4 %>% ungroup() %>% select(species, year) %>% distinct() %>%
arrange(species, year) %>%
group_by(species) %>%
mutate(genus = unlist(strsplit(as.character(species), split = " +"))[1]) %>%
ungroup()
spYrs
spYrs$genus <- factor(spYrs$genus, levels = c("Chlorostoma", "Lottia", "Littorina"))
##### TWO-PANEL PLOT #####
sort(unique(lim_annual_seasons_long2$tidalHT))
lim_for_sst <- lim_annual_seasons_long2 %>%
filter(tidalHT == 1.1) %>%
mutate(dataset = "Seawater")
lim_for_air <- lim_annual_seasons_long2 %>%
filter(tidalHT == 7.55) %>%
mutate(dataset = "Air")
text_df <- data.frame(x = c(rep(1940, 3)),
y = c(6.5, 13, 21),
text1 = c("Min", "Median", "Max"),
dataset = rep("Air", 3),
metric = c("minimum", "median", "maximum"))
facet_label_text <- data.frame(x = rep(1938, 2),
y = rep(23.3, 2),
text1 = c("A", "B"),
dataset = c("Air", "Seawater"))
temp_records %>%
sort(unique(lim_annual_seasons_long2$tidalHT))
lim_for_sst <- lim_annual_seasons_long2 %>%
filter(tidalHT == 1.1) %>%
mutate(dataset = "Seawater")
lim_for_air <- lim_annual_seasons_long2 %>%
filter(tidalHT == 7.55) %>%
mutate(dataset = "Air")
text_df <- data.frame(x = c(rep(1940, 3)),
y = c(6.5, 13, 21),
text1 = c("Min", "Median", "Max"),
dataset = rep("Air", 3),
metric = c("minimum", "median", "maximum"))
facet_label_text <- data.frame(x = rep(1938, 2),
y = rep(23.3, 2),
text1 = c("A", "B"),
dataset = c("Air", "Seawater"))
temp_records %>%
ggplot(aes(year, tempC, color = metric)) +
geom_smooth(data = subset(temp_records, dataset == "Seawater" &
metric == "maximum"), method = "lm",
color = "darkgray", linetype = "dashed") +
# geom_smooth(data = subset(temp_records, dataset == "Air" &
#                             metric == "maximum"), method = "lm",
#             color = "darkgray", linetype = "dashed") +
geom_smooth(data = subset(temp_records, dataset == "Air" &
metric == "minimum"), method = "lm",
color = "darkgray", linetype = "dashed") +
geom_line(alpha = 1) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.title = element_blank()) +
theme(legend.position = "top") +
guides(color = FALSE) +
guides(shape =
guide_legend(title = "SAMPLING EVENT", title.position = "top",
title.hjust = 0.5,
title.theme =
element_text(size = 10, face = "bold", angle = 0),
direction = "horizontal",
label.theme = element_text(angle = 0, size = 8,
face =  "italic"))) +
facet_wrap(~ dataset) +
theme(strip.background = element_blank()) +
geom_text(aes(x, y, label = text1), data = text_df, size = 3,
hjust = 0, fontface = "bold")
temp_records <- rbind(sst_annual_long, air_annual_long)
air_annual_long <- air_annual_long %>%
mutate(dataset = "Air")
source("05_summarise_monterey_weather.R")
sst_annual_long
source("R/process_weather_data.R")
path_to_weather_data <- "data/uc_ipm/"
# Need a list of file names
fileNames <- dir(path = path_to_weather_data, recursive = TRUE,
pattern = ".txt")
monterey <- format_weather_data(path = path_to_weather_data,
weather_file = fileNames[3],
lines_to_skip = 55)
# Are some months poorly sampled?
# Remove months that have fewer than 15 samples
monterey %>% filter(!is.na(air_max)) %>%
group_by(year, month) %>% tally() %>% ungroup() %>%
filter(n < 15)
monterey2 <- monterey %>% filter(!is.na(air_max)) %>%
group_by(year, month) %>%
mutate(n = n()) %>% ungroup()
monterey3 <- monterey2 %>% filter(n > 15)
weather <- monterey3
head(weather)
tail(weather)
summary(weather)
glimpse(weather)
#### GET WARMEST AND COLDEST MONTHS #####
wL <- weather %>%
gather(., key = climate_var, value = value, air_max:air_obs)
tail(wL)
glimpse(wL)
# What are the warmest and coldest months?
wL %>% group_by(month, climate_var) %>%
summarise(meanTemp = mean(value, na.rm = TRUE)) %>% ungroup() %>%
arrange(climate_var, meanTemp) %>% View()
# Coldest == Dec, Jan, Feb
# Warmest == Aug, Sep, Oct
##### SUMMARISE MONTHLY #####
# Use air_obs, air_max, air_min
wM <- weather %>% group_by(Station, year, month) %>%
summarise(median = median(air_obs, na.rm = TRUE),
maximum = median(air_max, na.rm = TRUE),
minimum = median(air_min, na.rm = TRUE)) %>%
mutate(dateR = ymd(paste(year, month, 15, sep = "-"))) %>%
ungroup()
wM
tail(wM)
summary(wM)
##### GET ANNUAL TIME SERIES #####
# Calculate mean of hottest months for maximum per year
monthly_max <- wM %>% filter(!is.na(maximum)) %>%
filter(month == 10 | month == 8 | month == 9) %>%
group_by(year) %>%
summarise(maximum = mean(maximum)) %>% ungroup()
# Calculate mean of coldest months for minimum per year
monthly_min <- wM %>% filter(!is.na(minimum)) %>%
filter(month == 12 | month == 1 | month == 2) %>%
group_by(year) %>%
summarise(minimum = mean(minimum)) %>% ungroup()
# Calculate mean of observed temperatures for median per year
monthly_med <- wM %>% filter(!is.na(median)) %>%
group_by(year) %>%
summarise(median = mean(median)) %>% ungroup()
air_annual <- inner_join(monthly_max, monthly_min,
by = "year") %>%
inner_join(., monthly_med, by = "year")
air_annual
tail(air_annual)
# Get in long format
air_annual_long <- air_annual %>%
gather(key = metric, value = tempC, maximum:median) %>%
filter(!is.na(tempC))
tail(air_annual_long)
##### GET DECADAL MEANS #####
weather2 <- weather %>%
mutate(era = ifelse(year < 1961, "past",
ifelse(year > 2000, "present", "between"))) %>%
filter(era != "between")
decade_max <- weather2 %>% group_by(era, month) %>%
summarise(mean = mean(air_max, na.rm = TRUE),
sd = sd(air_max, na.rm = TRUE),
n = n(),
se = sd/sqrt(n),
CI = qt(0.975, df = n - 1) * se,
upper = mean + CI,
lower = mean - CI)
decade_max_long <- decade_max %>%
select(era, month, mean, upper, lower) %>%
gather(key = summary_stat, value = tempC, mean:lower) %>%
mutate(line_type = ifelse(summary_stat == "mean", "average", "ci"),
metric = "maximum")
decade_min <- weather2 %>% group_by(era, month) %>%
summarise(mean = mean(air_min, na.rm = TRUE),
sd = sd(air_min, na.rm = TRUE),
n = n(),
se = sd/sqrt(n),
CI = qt(0.975, df = n - 1) * se,
upper = mean + CI,
lower = mean - CI)
decade_min_long <- decade_min %>%
select(era, month, mean, upper, lower) %>%
gather(key = summary_stat, value = tempC, mean:lower) %>%
mutate(line_type = ifelse(summary_stat == "mean", "average", "ci"),
metric = "minimum")
decade_obs <- weather2 %>% group_by(era, month) %>%
summarise(mean = mean(air_obs, na.rm = TRUE),
sd = sd(air_obs, na.rm = TRUE),
n = n(),
se = sd/sqrt(n),
CI = qt(0.975, df = n - 1) * se,
upper = mean + CI,
lower = mean - CI)
decade_obs_long <- decade_obs %>%
select(era, month, mean, upper, lower) %>%
gather(key = summary_stat, value = tempC, mean:lower) %>%
mutate(line_type = ifelse(summary_stat == "mean", "average", "ci"),
metric = "median")
decade_dat <- rbind(decade_max_long, decade_min_long, decade_obs_long)
decade_dat
##### SEASONAL PLOTS #####
decade_dat %>%
ggplot(aes(month, tempC, group = interaction(era, summary_stat, metric))) +
geom_line(aes(linetype = line_type, color = era, size = line_type)) +
#facet_wrap(~ metric, ncol = 3) +
scale_color_manual(values = c("darkgray", "black")) +
scale_size_manual(values = c(0.75, 0.25)) +
theme(strip.background = element_blank()) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Month") +
ggtitle("Air") +
scale_x_continuous(breaks = seq(1, 12, 1)) +
guides(linetype = FALSE, size = FALSE) +
theme(legend.position = c(0, 1), legend.justification = c(0, 1)) +
theme(legend.title = element_blank())
source("R/process_weather_data.R")
format_weather_data
air_annual_long <- air_annual_long %>%
mutate(dataset = "Air")
temp_records <- rbind(sst_annual_long, air_annual_long)
sort(unique(lim_annual_seasons_long2$tidalHT))
lim_for_sst <- lim_annual_seasons_long2 %>%
filter(tidalHT == 1.1) %>%
mutate(dataset = "Seawater")
lim_for_air <- lim_annual_seasons_long2 %>%
filter(tidalHT == 7.55) %>%
mutate(dataset = "Air")
text_df <- data.frame(x = c(rep(1940, 3)),
y = c(6.5, 13, 21),
text1 = c("Min", "Median", "Max"),
dataset = rep("Air", 3),
metric = c("minimum", "median", "maximum"))
facet_label_text <- data.frame(x = rep(1938, 2),
y = rep(23.3, 2),
text1 = c("A", "B"),
dataset = c("Air", "Seawater"))
temp_records %>%
ggplot(aes(year, tempC, color = metric)) +
geom_smooth(data = subset(temp_records, dataset == "Seawater" &
metric == "maximum"), method = "lm",
color = "darkgray", linetype = "dashed") +
# geom_smooth(data = subset(temp_records, dataset == "Air" &
#                             metric == "maximum"), method = "lm",
#             color = "darkgray", linetype = "dashed") +
geom_smooth(data = subset(temp_records, dataset == "Air" &
metric == "minimum"), method = "lm",
color = "darkgray", linetype = "dashed") +
geom_line(alpha = 1) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.title = element_blank()) +
theme(legend.position = "top") +
guides(color = FALSE) +
guides(shape =
guide_legend(title = "SAMPLING EVENT", title.position = "top",
title.hjust = 0.5,
title.theme =
element_text(size = 10, face = "bold", angle = 0),
direction = "horizontal",
label.theme = element_text(angle = 0, size = 8,
face =  "italic"))) +
facet_wrap(~ dataset) +
theme(strip.background = element_blank()) +
geom_text(aes(x, y, label = text1), data = text_df, size = 3,
hjust = 0, fontface = "bold")
library(dplyr)
library(tidyr)
library(readr)
library(ggplot2)
theme_set(theme_bw(base_size = 12))
library(lubridate)
# load cleaned up data
source("02_sbs_size_dataPrep2.R")
dat2 %>% group_by(sp) %>%
summarise(start_date = min(date))
summarise(start_date = min(date), )
dat2 %>% group_by(species, era) %>%
summarise(minDate = min(date),
maxDate = max(date))
