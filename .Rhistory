time_rep = NA,
#era = ifelse(year > 2000, "present", "past"),
species = "Nucella lapillus") %>%
arrange(site, year)
head(df_final)
yearDat <- siteDat %>%
#group_by(exposure) %>%
summarise(yearColton = weighted.mean(Year, Nc, na.rm = TRUE))
yearDat
fisherDatL <- yearDat %>%
inner_join(., fisherDatL, by = "exposure")
yearDat
yearDat <- siteDat %>%
#group_by(exposure) %>%
summarise(yearColton = weighted.mean(Year, Nc, na.rm = TRUE))
yearDat
fisherDatL$yearColton <- yearDat$yearColton
head(fisherDatL)
# Change Colton year, create site
fisherDatL <- fisherDatL %>%
mutate(yearFinal = ifelse(year == 1915, yearColton, year),
site = paste(exposure, point, sep = "_"))
# Modify sample size data
repeat_this <- unique(fisherDatL$time_rep)
rep(repeat_this, 3)
sampleSizeDat2 <- sampleSizeDat %>%
mutate(time_rep = rep(repeat_this, 3)) %>% select(-Collector)
# Get sample sizes by exposure
fisherDatL2 <- sampleSizeDat2 %>% select(exposure, time_rep, n_total) %>%
inner_join(fisherDatL, ., by = c("exposure", "time_rep")) %>%
rename(sample_size = n_total) %>%
mutate(sample_size_units = "total number of snails by exposure")
# Get era
fisherDatL2 <- fisherDatL2 %>%
mutate(era = ifelse(yearFinal > 2000, "present", "past"))
fisherDatL2
fisher_summary <- fisherDatL2 %>%
group_by(era) %>%
summarise(size_mean = mean(length_mean),
size_sd = sd(length_mean),
size_n = n()) %>%
ungroup()
fisher_summary
fisher_summary <- fisherDatL2 %>%
group_by(era, yearFinal) %>%
summarise(size_mean = mean(length_mean),
size_sd = sd(length_mean),
size_n = n()) %>%
ungroup()
fisher_summary
##### FORMAT TABLE FOR META-ANALYSIS #####
names(fisher_summary)
df_final <- fisher_summary %>%
mutate(size_rep = size_mean,
size_error = size_sd,
year = yearFinal,
site = "Mount Desert Island, Maine",
size_original = "mean",
time_rep = NA,
#era = ifelse(year > 2000, "present", "past"),
species = "Nucella lapillus") %>%
arrange(site, year)
head(df_final)
dfMeta <- data.frame(
study = "Fisher_2009",
studySub = NA,
fig_table = "Figure_1",
species = df_final$species,
site = df_final$site,
size_original = df_final$size_original,
size_rep = df_final$size_rep,
size_units = "mm",
size_error = df_final$size_error,
size_error_type = "SD",
time_rep = df_final$time_rep,
time_error = NA,
era = df_final$era,
year = df_final$year,
year_error = NA,
year_error_type = NA,
sample_size = df_final$sample_size,
sample_size_units = df_final$sample_size_units,
museum = TRUE,
size_threshold_mm = 0,
latitude = lat_mean,
longitude = long_mean
)
### Fisher does not provide sample sizes for each point,
head(sampleSizeDat)
fisherDatL2
fisher_summary <- fisherDatL2 %>%
group_by(era, yearFinal) %>%
summarise(size_mean = mean(length_mean),
size_sd = sd(length_mean),
sample_size = n(),
sample_size_units = "Number of sites") %>%
ungroup()
fisher_summary
##### FORMAT TABLE FOR META-ANALYSIS #####
names(fisher_summary)
df_final <- fisher_summary %>%
mutate(size_rep = size_mean,
size_error = size_sd,
year = yearFinal,
site = "Mount Desert Island, Maine",
size_original = "mean",
time_rep = NA,
#era = ifelse(year > 2000, "present", "past"),
species = "Nucella lapillus") %>%
arrange(site, year)
head(df_final)
dfMeta <- data.frame(
study = "Fisher_2009",
studySub = NA,
fig_table = "Figure_1",
species = df_final$species,
site = df_final$site,
size_original = df_final$size_original,
size_rep = df_final$size_rep,
size_units = "mm",
size_error = df_final$size_error,
size_error_type = "SD",
time_rep = df_final$time_rep,
time_error = NA,
era = df_final$era,
year = df_final$year,
year_error = NA,
year_error_type = NA,
sample_size = df_final$sample_size,
sample_size_units = df_final$sample_size_units,
museum = TRUE,
size_threshold_mm = 0,
latitude = ll_exposure$lat_mean,
longitude = ll_exposure$long_mean
)
write.csv(dfMeta, "sbs_meta/output/dfMeta_Fisher2009_MDI.csv")
library(dplyr)
library(readr)
library(ggplot2)
theme_set(theme_bw(base_size = 12) +
theme(panel.grid = element_blank(),
strip.background = element_blank()))
library(viridis)
## Elahi data (rename)
elahi <- read_csv("sbs_meta/output/dfMeta_Elahi2015_species.csv") # averaged across sample areas
elahi <- elahi %>%
mutate(species = gsub(x = species, pattern = "\\.", replacement = " ")) %>%
mutate(species = ifelse(species == "Chlorostoma funebralis", "Tegula funebralis", species))
elahi
##
gall_frank <- read_csv("sbs_meta/output/dfMeta_Galloway-Frank_2017.csv")
gall_tren <- read_csv("sbs_meta/output/dfMeta_Galloway-Treneman_2017.csv")
hay_king <- read_csv("sbs_meta/output/dfMeta_Hayford-King_2017.csv")
# ## Museum data
fisher <- read_csv("sbs_meta/output/dfMeta_Fisher2009_MDI.csv")
fisher
dat <- rbind(elahi, gall_frank, gall_tren, hay_king)
## For metafor, I want the data in wide format
names(dat)
dat2 <- dat %>% select(study, species, era, size_rep, size_error, sample_size) %>%
rename(size_n = sample_size)
dat2
datM <- dat2 %>%
gather(key = temp, value = value, starts_with("size")) %>%
unite(col = temp1, era, temp, sep = "_") %>%
spread(temp1, value)
## Try metafor
library(metafor)
names(datM)
names(datM) <- c("study", "species", "sd2i", "n2i", "m2i", "sd1i", "n1i", "m1i")
datM
### calculate log ratio of means and corresponding sampling variances
datM <- escalc(measure = "ROM", m1i = m1i, sd1i = sd1i, n1i = n1i, m2i = m2i, sd2i = sd2i, n2i = n2i, data = datM)
datM
### Get standard error (following Vuorre)
datM <- datM %>%
mutate(sei = as.numeric(sqrt(vi)),
upper = yi + 2*sei,
lower = yi - 2*sei)
### Plot this
ggplot(datM, aes(x = yi, y = species, color = study)) +
geom_segment(aes(x = lower, xend = upper, y = species, yend = species)) +
geom_point() +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
labs(x = "Proportional change in body size",
y = "") +
scale_color_viridis_d()
### Get standard error (following Vuorre)
datM <- datM %>%
mutate(sei = as.numeric(sqrt(vi)),
upper = yi + 2*sei,
lower = yi - 2*sei)
datM
dat <- rbind(elahi, gall_frank, gall_tren, hay_king, fisher)
## For metafor, I want the data in wide format
names(dat)
dat2 <- dat %>% select(study, species, era, size_rep, size_error, sample_size) %>%
rename(size_n = sample_size)
dat2
datM <- dat2 %>%
gather(key = temp, value = value, starts_with("size")) %>%
unite(col = temp1, era, temp, sep = "_") %>%
spread(temp1, value)
## Try metafor
library(metafor)
names(datM)
names(datM) <- c("study", "species", "sd2i", "n2i", "m2i", "sd1i", "n1i", "m1i")
datM
### calculate log ratio of means and corresponding sampling variances
datM <- escalc(measure = "ROM", m1i = m1i, sd1i = sd1i, n1i = n1i, m2i = m2i, sd2i = sd2i, n2i = n2i, data = datM)
datM
### Get standard error (following Vuorre)
datM <- datM %>%
mutate(sei = as.numeric(sqrt(vi)),
upper = yi + 2*sei,
lower = yi - 2*sei)
### Plot this
ggplot(datM, aes(x = yi, y = species, color = study)) +
geom_segment(aes(x = lower, xend = upper, y = species, yend = species)) +
geom_point() +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
labs(x = "Proportional change in body size",
y = "") +
scale_color_viridis_d()
### meta-analysis of log ratio of means using a random-effects model
res <- rma(yi, vi, method = "DL", data = datM)
res
plot(res)
### Plot this
ggplot(datM, aes(x = yi, y = species, color = study)) +
geom_segment(aes(x = lower, xend = upper, y = species, yend = species)) +
geom_point() +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
labs(x = "Proportional change in body size",
y = "") +
scale_color_viridis_d()
### Plot this
ggplot(datM, aes(x = yi, y = species, color = study)) +
geom_segment(aes(x = lower, xend = upper, y = species, yend = species)) +
geom_point() +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
labs(x = "Proportional change in body size",
y = "") +
scale_color_viridis_d()
### Plot this
ggplot(datM, aes(x = yi, y = species, color = study)) +
geom_segment(aes(x = lower, xend = upper, y = species, yend = species)) +
geom_point() +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
labs(x = "Proportional change in body size",
y = "") +
scale_color_viridis_d()
ggplot(datM, aes(x = yi, y = species, color = study)) +
geom_segment(aes(x = lower, xend = upper, y = species, yend = species)) +
geom_point() +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
labs(x = "Proportional change in body size",
y = "")
### Plot this
ggplot(datM, aes(x = yi, y = species, color = study)) +
geom_segment(aes(x = lower, xend = upper, y = species, yend = species)) +
geom_point() +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
labs(x = "Proportional change in body size",
y = "") +
scale_color_viridis_d()
qplot(datM, x = yi, y = species)
library(ggplot2)
### Plot this
ggplot(datM, aes(x = yi, y = species, color = study)) +
geom_segment(aes(x = lower, xend = upper, y = species, yend = species)) +
geom_point() +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
labs(x = "Proportional change in body size",
y = "") +
scale_color_viridis_d()
library(dplyr)
library(readr)
library(ggplot2)
theme_set(theme_bw(base_size = 12) +
theme(panel.grid = element_blank(),
strip.background = element_blank()))
library(viridis)
## Elahi data (rename)
elahi <- read_csv("sbs_meta/output/dfMeta_Elahi2015_species.csv") # averaged across sample areas
elahi <- elahi %>%
mutate(species = gsub(x = species, pattern = "\\.", replacement = " ")) %>%
mutate(species = ifelse(species == "Chlorostoma funebralis", "Tegula funebralis", species))
elahi
##
gall_frank <- read_csv("sbs_meta/output/dfMeta_Galloway-Frank_2017.csv")
gall_tren <- read_csv("sbs_meta/output/dfMeta_Galloway-Treneman_2017.csv")
hay_king <- read_csv("sbs_meta/output/dfMeta_Hayford-King_2017.csv")
## Museum data
## Fisher summary data is based on the mean sizes from 19 sites on Mount Desert Island
fisher <- read_csv("sbs_meta/output/dfMeta_Fisher2009_MDI.csv")
# roy <- read_csv("sbs_meta/output/dfMeta_Roy2003.csv")
dat <- rbind(elahi, gall_frank, gall_tren, hay_king, fisher)
## For metafor, I want the data in wide format
names(dat)
dat2 <- dat %>% select(study, species, era, size_rep, size_error, sample_size) %>%
rename(size_n = sample_size)
dat2
datM <- dat2 %>%
gather(key = temp, value = value, starts_with("size")) %>%
unite(col = temp1, era, temp, sep = "_") %>%
spread(temp1, value)
## Try metafor
library(metafor)
names(datM)
names(datM) <- c("study", "species", "sd2i", "n2i", "m2i", "sd1i", "n1i", "m1i")
datM
### calculate log ratio of means and corresponding sampling variances
datM <- escalc(measure = "ROM", m1i = m1i, sd1i = sd1i, n1i = n1i,
m2i = m2i, sd2i = sd2i, n2i = n2i, data = datM)
datM
### Get standard error (following Vuorre)
datM <- datM %>%
mutate(sei = as.numeric(sqrt(vi)),
upper = yi + 2*sei,
lower = yi - 2*sei)
### Plot this
ggplot(datM, aes(x = yi, y = species, color = study)) +
geom_segment(aes(x = lower, xend = upper, y = species, yend = species)) +
geom_point() +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
labs(x = "Proportional change in body size",
y = "") +
scale_color_viridis_d()
library(dplyr)
library(readr)
library(tidyr)
library(ggplot2)
theme_set(theme_bw(base_size = 12) +
theme(panel.grid = element_blank(),
strip.background = element_blank()))
library(viridis)
## Elahi data (rename)
elahi <- read_csv("sbs_meta/output/dfMeta_Elahi2015_species.csv") # averaged across sample areas
elahi <- elahi %>%
mutate(species = gsub(x = species, pattern = "\\.", replacement = " ")) %>%
mutate(species = ifelse(species == "Chlorostoma funebralis", "Tegula funebralis", species))
elahi
##
gall_frank <- read_csv("sbs_meta/output/dfMeta_Galloway-Frank_2017.csv")
gall_tren <- read_csv("sbs_meta/output/dfMeta_Galloway-Treneman_2017.csv")
hay_king <- read_csv("sbs_meta/output/dfMeta_Hayford-King_2017.csv")
## Museum data
## Fisher summary data is based on the mean sizes from 19 sites on Mount Desert Island
fisher <- read_csv("sbs_meta/output/dfMeta_Fisher2009_MDI.csv")
# roy <- read_csv("sbs_meta/output/dfMeta_Roy2003.csv")
dat <- rbind(elahi, gall_frank, gall_tren, hay_king, fisher)
## For metafor, I want the data in wide format
names(dat)
dat2 <- dat %>% select(study, species, era, size_rep, size_error, sample_size) %>%
rename(size_n = sample_size)
dat2
datM <- dat2 %>%
gather(key = temp, value = value, starts_with("size")) %>%
unite(col = temp1, era, temp, sep = "_") %>%
spread(temp1, value)
## Try metafor
library(metafor)
names(datM)
names(datM) <- c("study", "species", "sd2i", "n2i", "m2i", "sd1i", "n1i", "m1i")
datM
### calculate log ratio of means and corresponding sampling variances
datM <- escalc(measure = "ROM", m1i = m1i, sd1i = sd1i, n1i = n1i,
m2i = m2i, sd2i = sd2i, n2i = n2i, data = datM)
datM
### Get standard error (following Vuorre)
datM <- datM %>%
mutate(sei = as.numeric(sqrt(vi)),
upper = yi + 2*sei,
lower = yi - 2*sei)
### Plot this
ggplot(datM, aes(x = yi, y = species, color = study)) +
geom_segment(aes(x = lower, xend = upper, y = species, yend = species)) +
geom_point() +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
labs(x = "Proportional change in body size",
y = "") +
scale_color_viridis_d()
### meta-analysis of log ratio of means using a random-effects model
res <- rma(yi, vi, method = "DL", data = datM)
res
GES #####
library(dplyr)
library(tidyr)
library(ggplot2)
# Function to take the scraped data and assemble into a single dataframe
path <- "sbs_meta/scraped/Roy2003/"
# Get list of files
fileNames <- dir(path = path, recursive = TRUE,
pattern = ".csv")
fileNames
# Set up the first dataframe
paste(path, fileNames[1], sep = "")
i = 1
df <- read.csv(file = paste(path, fileNames[i], sep = ""),
header = FALSE)
df <- df %>% rename(length_ln = V2) %>%
mutate(temporalBin = c(rep("Pre-1960", 3), rep("1961-1980", 3),
rep("Field", 3), rep("CNM", 3)),
csvFile = fileNames[i])
df
# Get the remaining species
for(i in 2:length(fileNames)) {
df.i <- read.csv(file = paste(path, fileNames[i], sep = ""),
header = FALSE)
df.i <- df.i %>% rename(length_ln = V2) %>%
mutate(temporalBin = c(rep("Pre-1960", 3), rep("1961-1980", 3),
rep("Field", 3), rep("CNM", 3)),
csvFile = fileNames[i])
# Add to existing dataframe
df <- rbind(df, df.i)
}
df
##### RENAME SITES AND TIMES #####
# Get sites
df <- df %>%
mutate(site = ifelse(test = (temporalBin == "Pre-1960" |
temporalBin == "1961-1980"), yes = "Museum",
no = temporalBin),
time_rep = ifelse(test = (temporalBin == "Pre-1960" |
temporalBin == "1961-1980"), yes = temporalBin,
no = "2001"),
time_rep = gsub(pattern = "Pre-1960", time_rep,
replacement = "1885-1960"))
head(df)
##### SPECIES NAMES #####
# Get species names using string split
csvList <- strsplit(df$csvFile, split = "_")
csv_df <- data.frame(matrix(unlist(csvList), nrow = 48, byrow = TRUE),
stringsAsFactors = FALSE)
csv_df
sppList <- strsplit(csv_df$X3, split = "[.]")
spp_df <- data.frame(matrix(unlist(sppList), nrow = 48, byrow = TRUE),
stringsAsFactors = FALSE)
df$species <- spp_df$X1
# Get species names by hand
df$species <- c(rep("Acanthinucella spirata", 12), rep("Fissurella volcano", 12),
rep("Lottia gigantea", 12), rep("Tegula aureotincta", 12))
##### CALCULATE MEAN SE #####
# Assign the upper, mean, and lower error bars
df$value <- rep(c("upperSE", "length_mean", "lowerSE"), 16)
# Get wide format for error values
df2 <- df %>% select(- V1) %>%
spread(., key = value, value = length_ln)
head(df2)
# Get the mean SE
df2 <- df2 %>%
mutate(diffLower = length_mean - lowerSE,
diffUpper = upperSE - length_mean,
diffMean = (diffLower + diffUpper)/2)
head(df2)
# These data provide a historical time series extending
# from 1869 to 1981 for F. volcano,
# 1896–1975 for T. aureotincta,
# 1869–1960 for L. gigantea
# and 1903–1985 for A. spirata.
# Pre-1960 times = earliest date, 1959
Fvolcano1 <- mean(c(1869, 1959))
Taureotincta1 <- mean(c(1896, 1959))
Lgigantea1 <- mean(c(1869, 1959))
Aspirata1 <- mean(c(1903, 1959))
# 1961-1980 times = earliest date, 1959
Fvolcano2 <- mean(c(1961, 1980))
Taureotincta2 <- mean(c(1961, 1975))
Lgigantea2 <- NA
Aspirata2 <- mean(c(1961, 1980))
with(df2, cbind(temporalBin, species))
year <- c(Aspirata2, Fvolcano2, Lgigantea2, Taureotincta2,
rep(2001, 8),
Aspirata1, Fvolcano1, Lgigantea1, Taureotincta1)
year
df2$year <- year
df3 <- df2 %>%
mutate(size_rep = exp(length_mean),
size_error = exp(diffMean))
df3 %>%
ggplot(aes(year, size_rep, color = site)) + geom_point() +
facet_wrap(~ species, scales = "free_y") +
# facet_wrap(~ species) +
geom_errorbar(aes(ymin = size_rep - size_error,
ymax = size_rep + size_error))
df3
head(df)
df
View(df2)
View(df3)
head(df2)
df3 <- df2 %>%
mutate(size_rep = exp(length_mean),
size_error = exp(diffMean),
size_upper = exp(upperSE),
size_lower = exp(lowerSE))
df3
exp(0.013)
exp(0.03)
df3 %>%
ggplot(aes(year, size_rep, color = site)) + geom_point() +
facet_wrap(~ species, scales = "free_y") +
# facet_wrap(~ species) +
geom_errorbar(aes(ymin = size_rep - size_error,
ymax = size_rep + size_error))
df3 %>%
ggplot(aes(year, length_mean, color = site)) + geom_point() +
facet_wrap(~ species, scales = "free_y") +
# facet_wrap(~ species) +
geom_errorbar(aes(ymin = length_mean - diffMean,
ymax = length_mean + diffMean))
