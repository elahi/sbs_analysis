title.theme =
element_text(size = 10, face = "bold", angle = 0),
label.theme =
element_text(angle = 0, size = 8, face =  "italic")))
tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 0, y = 38.5, label = "A") +
guides(shape =
guide_legend(title = "SAMPLING AREA", title.position = "top",
title.hjust = 0.5,
title.theme =
element_text(size = 10, face = "bold", angle = 0),
label.theme =
element_text(angle = 0, size = 8, face =  "italic"))) +
theme(legend.position = c(0,1), legend.justification = c(0,1))
tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 0, y = 38.5, label = "A") +
guides(shape =
guide_legend(title = "SAMPLING AREA", title.position = "top",
title.hjust = 0.5,
title.theme =
element_text(size = 10, face = "bold", angle = 0),
label.theme =
element_text(angle = 0, size = 8, face =  "italic"))) +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95))
## Panel A - Empirical rock temps
panelA <- tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 8, y = 38.5, label = "A") +
guides(shape =
guide_legend(title = "SAMPLING AREA", title.position = "top",
title.hjust = 0.5,
title.theme =
element_text(size = 10, face = "bold", angle = 0),
label.theme =
element_text(angle = 0, size = 8, face =  "italic"))) +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95))
panelA
layout1 <- matrix(c(1, 1, 2, 2, 3), nrow = 5, byrow = TRUE)
png("figs/elahi_temp_body_rock_3panel.png", width = 3.5, height = 7, units = "in", res = 300)
multiplot(panelA, panelB, panelC, layout = layout1)
dev.off()
## Panel A - Empirical rock temps
panelA <- tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 8, y = 38.5, label = "A") +
guides(shape =
guide_legend(title = "", title.position = "top",
title.hjust = 0.5,
title.theme =
element_text(size = 10, face = "bold", angle = 0),
label.theme =
element_text(angle = 0, size = 8, face =  "italic"))) +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95))
panelA
guides
?guides()
tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 8, y = 38.5, label = "A") +
guides(shape =
guide_legend(title = "", title.position = "top",
title.hjust = 0.5,
title.theme =
element_text(size = 10, face = "bold", angle = 0),
label.theme =
element_text(angle = 0, size = 8, face =  "italic"))) +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95)) +
theme(legend.title = element_blank())
?guide_legend
tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 8, y = 38.5, label = "A") +
guides(shape =
guide_legend(title = NULL, title.position = "top",
title.hjust = 0.5,
title.theme =
element_text(size = 10, face = "bold", angle = 0),
label.theme =
element_text(angle = 0, size = 8, face =  "italic"))) +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95)) +
theme(legend.title = element_blank())
panelA
tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 8, y = 38.5, label = "A") +
guides(shape =
guide_legend(title = NULL,
label.theme =
element_text(angle = 0, size = 8, face =  "italic"))) +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95)) +
theme(legend.title = element_blank())
panelA <- tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 8, y = 38.5, label = "A") +
guides(shape =
guide_legend(title = NULL,
label.theme =
element_text(angle = 0, size = 8, face =  "italic"))) +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95)) +
theme(legend.title = element_blank())
panelA
layout1 <- matrix(c(1, 1, 2, 2, 3), nrow = 5, byrow = TRUE)
png("figs/elahi_temp_body_rock_3panel.png", width = 3.5, height = 7, units = "in", res = 300)
multiplot(panelA, panelB, panelC, layout = layout1)
dev.off()
## Panel A - Empirical rock temps
panelA <- tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 8, y = 38.5, label = "A") +
guides(shape =
guide_legend(title = NULL,
label.theme =
element_text(angle = 0, size = 5, face =  "italic"))) +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95)) +
theme(legend.title = element_blank())
panelA
panelA <- tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 8, y = 38.5, label = "A") +
guides(shape =
guide_legend(title = NULL, keywidth=0.1,
keyheight=0.1,
default.unit="inch",
label.theme =
element_text(angle = 0, size = 8, face =  "italic"))) +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95)) +
theme(legend.title = element_blank())
panelA
panelA <- tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 8, y = 38.5, label = "A") +
guides(shape =
guide_legend(title = NULL, keywidth = 0.2,
keyheight = 0.2,
default.unit="inch",
label.theme =
element_text(angle = 0, size = 8, face =  "italic"))) +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95)) +
theme(legend.title = element_blank())
panelA
png("figs/elahi_temp_body_rock_3panel.png", width = 3.5, height = 7, units = "in", res = 300)
multiplot(panelA, panelB, panelC, layout = layout1)
dev.off()
k temps
panelA <- tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 8, y = 38.5, label = "A") +
guides(shape =
guide_legend(title = NULL, keywidth = 0.1,
keyheight = 0.1,
default.unit="inch",
label.theme =
element_text(angle = 0, size = 8, face =  "italic"))) +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95)) +
theme(legend.title = element_blank())
panelA
png("figs/elahi_temp_body_rock_3panel.png", width = 3.5, height = 7, units = "in", res = 300)
multiplot(panelA, panelB, panelC, layout = layout1)
dev.off()
panelA <- tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
guides(shape =
guide_legend(title = NULL, keywidth = 0.1,
keyheight = 0.1,
default.unit="inch",
label.theme =
element_text(angle = 0, size = 8, face =  "italic"))) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 8, y = 38.5, label = "A") +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95)) +
theme(legend.title = element_blank())
panelA
png("figs/elahi_temp_body_rock_3panel.png", width = 3.5, height = 7, units = "in", res = 300)
multiplot(panelA, panelB, panelC, layout = layout1)
dev.off()
panelA <- tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
guides(shape =
guide_legend(title = NULL, keywidth = 0.1,
keyheight = 0.1,
default.unit="inch",
label.theme =
element_text(angle = 0, size = 8, face =  "italic"))) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 8, y = 38.5, label = "A") +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95)) +
theme(legend.title = element_blank()) +
theme(legend.background = element_blank())
panelA
png("figs/elahi_temp_body_rock_3panel.png", width = 3.5, height = 7, units = "in", res = 300)
multiplot(panelA, panelB, panelC, layout = layout1)
dev.off()
panelA <- tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
guides(shape =
guide_legend(title = "SAMPLING AREA", title.position = "top",
title.hjust = 0.5,
title.theme =
element_text(size = 8, face = "bold", angle = 0),
keywidth = 0.1,
keyheight = 0.1,
default.unit="inch",
label.theme =
element_text(angle = 0, size = 8, face =  "italic"))) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 8, y = 38.5, label = "A") +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95)) +
theme(legend.title = element_blank()) +
theme(legend.background = element_blank())
panelA
layout1 <- matrix(c(1, 1, 2, 2, 3), nrow = 5, byrow = TRUE)
png("figs/elahi_temp_body_rock_3panel.png", width = 3.5, height = 7, units = "in", res = 300)
multiplot(panelA, panelB, panelC, layout = layout1)
dev.off()
source("05_summarise_size_density.R")
glimpse(datMeans4)
library(nlme)
total_snails
whl
total_snails
View(total_snails)
whl %>%
ggplot(aes(length_mm, snail_count, color = site)) +
geom_line()
wara_histo
whl <- wara_histo %>%
select(length_mm, Wara.B, Wara.D) %>%
gather(key = site, value = snail_count, Wara.B:Wara.D)
whl
total_snails <- whl %>% group_by(site) %>%
summarise(total_snails_m2 = sum(snail_count)) %>%
mutate(transect_length_m = c(14, 62.5),
transect_area = transect_length_m * 2,
transect_snail_count_total = total_snails_m2 * transect_area)
total_snails
total_snails
wara <- read_csv("data/Wara_1963_fig2_fig6.csv")
wara <- wara %>%
mutate(transect_interval = ifelse(area == "areaB", 1, 2.5),
snail_count = density_m2 * transect_interval * 2)
wara %>%
ggplot(aes(m_along_transect, density_m2, color = area)) +
#facet_wrap(~ area, scales = "free", nrow = 2) +
geom_line()
wara
View(wara)
total_snails
wara_area <- wara %>% group_by(area) %>%
summarise(start_m = min(m_along_transect),
end_m = max(m_along_transect)) %>%
mutate(transect_dist = end_m - start_m,
area_m2 = transect_dist * 2)
wara_area2 <- inner_join(wara_area, wara_mean, by = "area")
wara_area2 <- wara_area2 %>%
mutate(snail_number = area_m2 * dens_mean)
wara_area2
wara %>% group_by(area) %>% summarise(total_snails = sum(snail_count))
waraPast <- wara %>%
mutate(sp = "CHFU",
species = "Chlorostoma funebralis",
tideHTm = tide_ht_ft/3.28084,
site = ifelse(area == "areaB", "Wara.B", "Wara.D"),
era = "past") %>%
select(density_m2, size_mm, species, sp, tideHTm, site, era)
waraPast
wara %>% group_by(area) %>% summarise(total_snails = sum(snail_count))
wara
total_snails_transect <- wara %>% group_by(area) %>% summarise(total_snails = sum(snail_count))
total_snails
total_snails_transect
total_snails2 <- total_snails %>%
inner_join(., total_snails_transect, by = "site")
total_snails$transect_estimate <- total_snails_transect$total_snails
total_snails
total_snails <- total_snails %>%
mutate(per_diff = 100 *(transect_estimate - transect_snail_count_total)/transect_snail_count_total)
total_snails
6000/4
92000/1500
93000/2000
transect_length <- c(1, 3, 2, 3, 5)
density_vector <- c(160, 180, 450, 390, 290)
total_snails_vector <- transect_length_vector * 2 * density_vector
transect_length_vector <- c(1, 3, 2, 3, 5)
density_vector <- c(160, 180, 450, 390, 290)
total_snails_vector <- transect_length_vector * 2 * density_vector
total_snails_vector
sum(total_snails_vector)
