head(tempDat)
tempDat2 <- tempDat %>% inner_join(., spCodes, by = "sp")
tempDat2
head(tempDat2)
tempDatL <- tempDat2 %>% gather(key = metric, value = tempC, mean_tempC:min_tempC)
tempMeans <- tempDatL %>%
group_by(species, position, nest1:lat, metric) %>%
summarise(mean = mean(tempC),
sd = sd(tempC),
n = n(),
se = sd/sqrt(n),
CI = qt(0.975, df = n - 1) * se) %>%
ungroup()
tempDatL %>%
group_by(species, position, nest1:lat, metric)
tempDatL
head(tempDatL)
summary(tempDatL)
tempMeans <- tempDatL %>%
group_by(species, position, nest1:lat, metric) %>%
summarise(mean = mean(tempC),
sd = sd(tempC),
n = n(),
se = sd/sqrt(n),
CI = qt(0.975, df = n - 1) * se) %>%
ungroup()
tempMeans <- tempDatL %>%
group_by(species, position, nest1:lat, metric) %>%
summarise(mean = mean(tempC))
head(tempDatL)
tempMeans <- tempDatL %>%
group_by(species, position, metric) %>%
summarise(mean = mean(tempC))
tempMeans <- tempDatL %>%
group_by(species, position, tidalHT, metric) %>%
summarise(mean = mean(tempC))
tempMeans <- tempDatL %>%
group_by(species, position, tidalHT, aspect, slope, metric) %>%
summarise(mean = mean(tempC))
tempMeans <- tempDatL %>%
group_by(species, position, tidalHT, aspect, slope, lon, lat, metric) %>%
summarise(mean = mean(tempC))
tempMeans <- tempDatL %>%
group_by(species, position, tidalHT, aspect, slope, lon, lat, metric) %>%
summarise(mean = mean(tempC),
sd = sd(tempC),
n = n(),
se = sd/sqrt(n),
CI = qt(0.975, df = n - 1) * se) %>%
ungroup()
tempMeans
tempMeans %>%
ggplot(aes(tidalHT, mean, shape = species)) +
geom_point(alpha = 0.6, size = 2) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
labs(x = "Tidal height (m)", y = "Temperature") +
theme(strip.background = element_blank()) +
#facet_wrap(~ species) +
#guides(shape = FALSE) +
theme(legend.position = c(0, 0.0), legend.justification = c(0, 0)) +
theme(legend.title = element_blank())
tempMeans %>%
ggplot(aes(tidalHT, mean, shape = species)) +
geom_point(alpha = 0.6, size = 2) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
labs(x = "Tidal height (m)", y = "Temperature") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = c(0, 0.0), legend.justification = c(0, 0)) +
theme(legend.title = element_blank())
tempMeans %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.6, size = 2) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
labs(x = "Tidal height (m)", y = "Temperature") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = c(0, 0.0), legend.justification = c(0, 0)) +
theme(legend.title = element_blank())
tempMeans %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.6, size = 2) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
labs(x = "Tidal height (m)", y = "Temperature") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank())
source('~/github/sbs_analysis/06_plot_intertidal_temps.R')
tempMeans %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.6, size = 2) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
labs(x = "Tidal height (m)", y = "Average daily temperature (C)") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank())
head(tempDat)
tempDat <- read.csv("output/temp_daily_position.csv") %>%
select(-X) %>%
rename(sp = code, daily_mean = mean_tempC,
daily_max = max_tempC,
daily_min = min_tempC)
head(tempDat)
tempDat2 <- tempDat %>% inner_join(., spCodes, by = "sp")
head(tempDat2)
tempDatL <- tempDat2 %>% gather(key = metric, value = tempC, daily_mean:daily_min)
head(tempDatL)
summary(tempDatL)
tempMeans <- tempDatL %>%
group_by(species, position, tidalHT, aspect, slope, lon, lat, metric) %>%
summarise(mean = mean(tempC),
sd = sd(tempC),
n = n(),
se = sd/sqrt(n),
CI = qt(0.975, df = n - 1) * se) %>%
ungroup()
tempMeans %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.6, size = 2) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
labs(x = "Tidal height (m)", y = "Mean temperature (C)") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank())
ggsave("figs/elahi_temp_tidal.png", height = 3.5, width = 7)
library(ggplot2)
theme_set(theme_classic(base_size = 8))
library(dplyr)
theme_set(theme_bw(base_size = 12))
library(dplyr)
getwd()
source("./R/multiplotF.R")
# For collating temperature data
source("./R/process_iButtonFiles.R")
# Run function to create collated temperature dataframe
dat <- iButtonTempF(fls = fileNames)
unique(dat$iButtonID)
unique(dat$csvID)
head(dat)
with(dat, iButtonID == csvID)
loggers <- read.table("./data/iButton_retrieval.txt", header = TRUE)
unique(loggers$iButtonID)
View(loggers)
# Load file that links bagNames to the details of the logger positions
positions <- read.csv("./data/iButton_deployment.csv", header = TRUE)
View(positions)
head(loggers)
head(positions)
envDat <- inner_join(loggers, positions, by = "bagName")
head(envDat)
View(envDat)
unique(dat$iButtonID)
unique(envDat$iButtonID)
master <- inner_join(dat, envDat, by = "iButtonID")
head(master)
master$day <- as.Date(master$dateR)
boxplot(tempC ~ code, data = master)
ggplot(master, aes(dateR, tempC, color = position)) +
geom_point(size = 2, alpha = 0.2, pch = 21) +
ylab("Temperature (C)") + xlab("Date")	+
geom_smooth(se = TRUE, size = 1) + facet_wrap(~ code)
master %>%
ggplot(aes(position, tempC)) +
geom_boxplot() +
facet_wrap(~ code)
master %>%
ggplot(aes(position, tempC)) +
geom_boxplot() +
facet_wrap(~ code, scales = "free")
master %>% filter(code == "LIKE") %>%
ggplot(aes(position, tempC)) +
geom_boxplot() +
facet_wrap(~ code, scales = "free")
ggplot(master, aes(dateR, tempC, color = iButtonID)) +
geom_line() +
ylab("Temperature (C)") + xlab("Date")	+
facet_wrap(~ position)
master %>% filter(code == "LIKE") %>%
ggplot(aes(dateR, tempC), color = position) +
geom_line() +
facet_wrap(~ position)
master %>% filter(code == "LIKE") %>%
ggplot(aes(dateR, tempC, color = position)) +
geom_line()
head(master)
master %>% filter(code == "LIKE") %>%
ggplot(aes(dateR, tempC, color = nest2)) +
geom_line() + facet_wrap(~ nest1)
waraD_extra <- master %>% filter(position == "WaraD_mid2" |
position == "WaraD_low2")
ggplot(waraD_extra, aes(dateR, tempC, color = iButtonID)) +
geom_line() +
ylab("Temperature (C)") + xlab("Date")	+
facet_wrap(~ position)
# Remove pre 10AM August 2
str(waraD_extra1$dateR)
waraD_extra1 <- waraD_extra %>% filter(dateR > "2015-08-01 10:00:00")
ggplot(waraD_extra1, aes(dateR, tempC, color = iButtonID)) +
geom_line() +
ylab("Temperature (C)") + xlab("Date")	+
facet_wrap(~ position)
# Now remove these two positions from master
master2 <- master %>% filter(position != "WaraD_mid2" &
position != "WaraD_low2")
# Add in the corrected positions
master3 <- rbind(master2, waraD_extra1)
ggplot(master3, aes(dateR, tempC, color = iButtonID)) +
geom_line() +
ylab("Temperature (C)") + xlab("Date")	+
facet_wrap(~ position)
ggplot(master3, aes(dateR, tempC, color = iButtonID)) +
geom_line() +
ylab("Temperature (C)") + xlab("Date")	+
facet_wrap(~ position) +
theme(legend.position = "none")
# rename master file
master <- master3
### Violin plots (?)
ggplot(master, aes(code, tempC)) +
geom_violin() +
ylab("Temperature (C)") + xlab("Species") +
theme(legend.position = "none") + coord_flip()
write.csv(master, "./output/temp_raw_iButton.csv")
###########################
#Make daily summaries for each iButton
names(master)
head(master)
iButton_daily <- master %>%
group_by(iButtonID, day, code, nest1, nest2, position, tidalHT,
aspect, slope, lon, lat) %>%
summarise(mean_tempC = mean(tempC, na.rm=T),
max_tempC = max(tempC, na.rm=T),
min_tempC = min(tempC, na.rm=T)) %>%
ungroup()
write.csv(iButton_daily, "./output/temp_daily_iButton.csv")
###########################
#Make daily summaries for each position (2 buttons per position for most)
unique(master$position)
position_daily <- master %>%
group_by(position, day, code, nest1, nest2, tidalHT,
aspect, slope, lon, lat) %>%
summarise(mean_tempC = mean(tempC, na.rm=T),
max_tempC = max(tempC, na.rm=T),
min_tempC = min(tempC, na.rm=T)) %>%
ungroup()
write.csv(position_daily, "./output/temp_daily_position.csv")
###########################
#Make daily summaries for each species
unique(master$code)
species_daily <- master %>%
group_by(code, day) %>%
summarise(mean_tempC = mean(tempC, na.rm=T),
max_tempC = max(tempC, na.rm=T),
min_tempC = min(tempC, na.rm=T)) %>%
ungroup()
write.csv(position_daily, "./output/temp_daily_species.csv")
###########################
#Make hourly summaries for each species
View(master)
names(master)
head(master)
master <- master3 %>%
arrange(code, position, dateR)
head(master)
write.csv(master, "./output/temp_raw_iButton.csv")
dat <- read.csv("./output/temp_daily_iButton.csv", header = TRUE)
head(dat)
dat$day <- as.Date(dat$day)
# Mean temperatures
ggplot(dat, aes(day, mean_tempC, color = iButtonID)) +
geom_line(size = 1, alpha = 0.8) +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ position) + theme(legend.position = "none")
dat <- read.csv("./output/temp_daily_position.csv", header = TRUE)
head(dat)
dat$day <- as.Date(dat$day)
# Mean temperatures
ggplot(dat, aes(day, mean_tempC, color = position)) +
geom_line(size = 1, alpha = 0.8) +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ position) + theme(legend.position = "none")
dat <- read.csv("./output/temp_daily_species.csv", header = TRUE)
head(dat)
dat$day <- as.Date(dat$day)
# Mean temperatures
ggplot(dat, aes(day, mean_tempC)) +
geom_line() +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ code) + theme(legend.position = "none")
dat <- read.csv("./output/temp_daily_species.csv", header = TRUE)
str(dat$code)
lit <- dat %>% filter(code == "LIKE") %>% droplevels()
levels(lit$nest1)
names(lit)
unique(lit$nest2)
ggplot(lit, aes(nest2, mean_tempC)) +
geom_violin(fill = "gray") +
geom_boxplot(width = 0.3, notch = TRUE, color = "black") +
ylab(expression(paste("Daily mean temperature (", degree, "C)"))) +
facet_wrap(~ nest1, nrow = 4)
lit %>% group_by(nest1) %>% summarise(totalN = n(),
meanHT = mean(tidalHT, na.rm = TRUE),
sdHT = sd(tidalHT, na.rm = TRUE))
head(master)
master %>%
ggplot(aes(dateR, tempC, color = position)) +
facet_wrap(~ position)
master %>%
ggplot(aes(dateR, tempC, color = position)) +
geom_line() +
facet_wrap(~ position)
library(dplyr)
library(tidyr)
library(ggplot2)
theme_set(theme_bw(base_size = 12))
library(lubridate)
# Load size data
source("03_identify_size_cutoff.R")
head(dat4)
spCodes <- dat4 %>% select(species, sp) %>% distinct() %>%
spCodes <- dat4 %>% select(species, sp) %>% distinct()
spCodes
tempDat <- read.csv("output/temp_daily_position.csv") %>%
select(-X) %>%
rename(sp = code, daily_mean = mean_tempC,
daily_max = max_tempC,
daily_min = min_tempC)
head(tempDat)
tempDat2 <- tempDat %>% inner_join(., spCodes, by = "sp")
head(tempDat2)
tempDatL <- tempDat2 %>% gather(key = metric, value = tempC, daily_mean:daily_min)
head(tempDatL)
summary(tempDatL)
tempMeans <- tempDatL %>%
group_by(species, position, tidalHT, aspect, slope, lon, lat, metric) %>%
summarise(mean = mean(tempC),
sd = sd(tempC),
n = n(),
se = sd/sqrt(n),
CI = qt(0.975, df = n - 1) * se) %>%
ungroup()
tempMeans %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.6, size = 2) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.6) +
labs(x = "Tidal height (m)", y = "Mean temperature (C)") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank())
tempMeans <- tempDatL %>%
group_by(species, position, tidalHT, aspect, slope, lon, lat, metric) %>%
summarise(mean = mean(tempC),
sd = sd(tempC),
n = n(),
se = sd/sqrt(n),
CI = qt(0.975, df = n - 1) * se,
max = max(tempC),
min = min(tempC)) %>%
ungroup()
tempMeans
tempDatL
tempQuantiles <- tempDatL %>%
group_by(species, position, tidalHT, aspect, slope, lon, lat, metric) %>%
summarise(median = median(tempC),
max = max(tempC),
min = min(tempC)) %>%
ungroup()
tempMed <- tempDatL %>%
group_by(species, position, tidalHT, aspect, slope, lon, lat, metric) %>%
summarise(median = median(tempC),
max = max(tempC),
min = min(tempC)) %>%
ungroup()
tempMed
tempMedL <- tempMed %>% gather(key = metric, value = tempC, median:min)
tempMedL %>%
ggplot(aes(tidalHT, tempC, shape = species, color = metric)) +
geom_point(alpha = 0.6, size = 2) +
labs(x = "Tidal height (m)", y = "Mean temperature (C)") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank())
tempMed <- tempDatL %>%
group_by(species, position, metric) %>%
summarise(median = median(tempC),
max = max(tempC),
min = min(tempC)) %>%
ungroup()
tempDatL
head(tempDatL)
tail(tempDatL)
unique(tempMedL$tidalHT)
unique(tempMedL$position)
head(tempDatL)
summary(tempDatL)
head(tempDat)
tempDatL
head(tempDatL)
rawDat <- read.csv("output/temp_raw_iButton.csv")
head(rawDat)
tempMed <- rawDat %>%
group_by(species, position, tidalHT, aspect, slope, lon, lat, metric) %>%
summarise(median = median(tempC),
max = max(tempC),
min = min(tempC)) %>%
ungroup()
tempMed <- rawDat %>%
group_by(code, position, tidalHT, aspect, slope, lon, lat, metric) %>%
summarise(median = median(tempC),
max = max(tempC),
min = min(tempC)) %>%
ungroup()
tempMed <- rawDat %>%
group_by(code, position, tidalHT, aspect, slope, lon, lat) %>%
summarise(median = median(tempC),
max = max(tempC),
min = min(tempC)) %>%
ungroup()
tempMed
tempMedL <- tempMed %>% gather(key = metric, value = tempC, median:min)
unique(tempMedL$tidalHT)
unique(tempMedL$position)
tempMedL %>%
ggplot(aes(tidalHT, tempC, shape = code, color = metric)) +
geom_point(alpha = 0.6, size = 2) +
labs(x = "Tidal height (m)", y = "Mean temperature (C)") +
theme(strip.background = element_blank()) +
facet_wrap(~ code) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank())
rawDat2 <- rawDat %>% inner_join(., spCodes, by = "sp")
head(rawDat)
rawDat <- read.csv("output/temp_raw_iButton.csv") %>%
select(-X) %>%
rename(sp = code)
head(rawDat)
head(tempDatL)
rawDat2 <- rawDat %>% inner_join(., spCodes, by = "sp")
tempMed <- rawDat2 %>%
group_by(species, position, tidalHT, aspect, slope, lon, lat) %>%
summarise(median = median(tempC),
max = max(tempC),
min = min(tempC)) %>%
ungroup()
tempMedL <- tempMed %>% gather(key = metric, value = tempC, median:min)
tempMedL %>%
ggplot(aes(tidalHT, tempC, shape = species, color = metric)) +
geom_point(alpha = 0.6, size = 2) +
labs(x = "Tidal height (m)", y = "Mean temperature (C)") +
theme(strip.background = element_blank()) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = "top") +
theme(legend.title = element_blank())
ggsave("figs/elahi_temp_median_tidal.png", height = 3.5, width = 7)
ggsave("figs/elahi_temp_median_tidal.png", height = 3.5, width = 7)
master %>%
ggplot(aes(dateR, tempC, color = position)) +
geom_line() +
facet_wrap(~ position)
master %>% filter(code == "LIKE") %>%
ggplot(aes(dateR, tempC, color = position)) +
geom_line() +
facet_wrap(~ position)
head(master)
master %>% filter(code == "LIKE") %>%
ggplot(aes(dateR, tempC, color = position)) +
geom_line() +
facet_wrap(~ tidalHT)
head(master)
master %>% filter(code == "LIKE") %>% View()
master %>% filter(code == "LIKE") %>%
ggplot(aes(dateR, tempC, color = tidalHT)) +
geom_line() +
facet_wrap(nest1 ~ nest2)
master %>% filter(code == "LIKE") %>%
ggplot(aes(dateR, tempC, color = tidalHT)) +
geom_line() +
facet_grid(nest1 ~ nest2)
childs <- master %>% filter(code == "LIKE")
childs$nest1 <- factor(childs$nest1, levels = c("D", "C", "B", "A"))
childs %>%
ggplot(aes(dateR, tempC, color = tidalHT)) +
geom_line() +
facet_grid(nest1 ~ nest2)
ggsave("figs/littorina_intertidal_temps.png", height = 7, width = 7)
childs %>%
ggplot(aes(dateR, tempC, color = tidalHT)) +
theme_bw(base_size = 8) +
geom_line() +
facet_grid(nest1 ~ nest2)
ggsave("figs/littorina_intertidal_temps.png", height = 7, width = 7)
