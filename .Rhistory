ungroup() %>%
filter(tempC <= threshold) # note less than
}
dat_annual <- dat2 %>% group_by(year) %>%
summarise(tempC = mean(tempC, na.rm = TRUE),
n = n()) %>%
ungroup()
return(dat_annual)
}
summer_annual <- get_summer_annual_means(dat, my_quant = 0.75, remove = F)
winter_annual <- get_winter_annual_means(dat, my_quant = 0.25, remove = F)
annual_mean <- dat %>% group_by(year) %>%
summarise(mean = mean(tempC, na.rm = TRUE)) %>%
ungroup() %>% filter(!is.na(mean))
## Collate annual data
summer_annual <- summer_annual %>% filter(year < 2011)
winter_annual <- winter_annual %>% filter(year < 2011)
annual_df <- annual_mean %>%
mutate(minimum = winter_annual$tempC,
maximum = summer_annual$tempC)
# Get in long format
annual_df_long <- annual_df %>%
gather(key = metric, value = tempC, mean:maximum) %>%
filter(!is.na(tempC))
# Resave
air_annual_long <- annual_df_long %>%
mutate(dataset = "Air")
# Plot
air_annual_long %>%
ggplot(aes(year, tempC, color = metric)) +
geom_line() +
geom_smooth(method = "lm")
summer_annual <- get_summer_annual_means(dat, my_quant = 0.75, remove = T)
winter_annual <- get_winter_annual_means(dat, my_quant = 0.25, remove = T)
annual_mean <- dat %>% group_by(year) %>%
summarise(mean = mean(tempC, na.rm = TRUE)) %>%
ungroup() %>% filter(!is.na(mean))
## Collate annual data
summer_annual <- summer_annual %>% filter(year < 2011)
winter_annual <- winter_annual %>% filter(year < 2011)
annual_df <- annual_mean %>%
mutate(minimum = winter_annual$tempC,
maximum = summer_annual$tempC)
# Get in long format
annual_df_long <- annual_df %>%
gather(key = metric, value = tempC, mean:maximum) %>%
filter(!is.na(tempC))
# Resave
air_annual_long <- annual_df_long %>%
mutate(dataset = "Air")
# Plot
air_annual_long %>%
ggplot(aes(year, tempC, color = metric)) +
geom_line() +
geom_smooth(method = "lm")
summer_annual <- get_summer_annual_means(dat, my_quant = 0.75, remove = T)
winter_annual <- get_winter_annual_means(dat, my_quant = 0.25, remove = T)
annual_mean <- dat %>% group_by(year) %>%
summarise(mean = mean(tempC, na.rm = TRUE)) %>%
ungroup() %>% filter(!is.na(mean))
## Collate annual data
annual_df <- annual_mean %>%
mutate(minimum = winter_annual$tempC,
maximum = summer_annual$tempC)
# Get in long format
annual_df_long <- annual_df %>%
gather(key = metric, value = tempC, mean:maximum) %>%
filter(!is.na(tempC))
# Resave
sst_annual_long <- annual_df_long %>%
mutate(dataset = "Seawater")
# Plot
sst_annual_long %>%
ggplot(aes(year, tempC, color = metric)) +
geom_line() +
geom_smooth(method = "lm")
dat <- sst_hms %>% filter(year > 1937 & year < 2016)
# What are the warmest and coldest months?
dat %>% group_by(month) %>%
summarise(meanTemp = mean(tempC)) %>% ungroup() %>%
arrange(meanTemp)
# Coldest == Dec, Jan, Feb
# Warmest == July, Aug, Sep
##### SELECT SUMMER, WINTER TEMPS #####
# I will use the top 25th percentile of summer temps and bottom 25th percentile of winter temps
summer_annual <- get_summer_annual_means(dat, my_quant = 0.75, remove = T)
winter_annual <- get_winter_annual_means(dat, my_quant = 0.25, remove = T)
annual_mean <- dat %>% group_by(year) %>%
summarise(mean = mean(tempC, na.rm = TRUE)) %>%
ungroup() %>% filter(!is.na(mean))
## Collate annual data
annual_df <- annual_mean %>%
mutate(minimum = winter_annual$tempC,
maximum = summer_annual$tempC)
# Get in long format
annual_df_long <- annual_df %>%
gather(key = metric, value = tempC, mean:maximum) %>%
filter(!is.na(tempC))
# Resave
sst_annual_long <- annual_df_long %>%
mutate(dataset = "Seawater")
# Plot
sst_annual_long %>%
ggplot(aes(year, tempC, color = metric)) +
geom_line() +
geom_smooth(method = "lm")
# I will use the top 25th percentile of summer temps and bottom 25th percentile of winter temps
remove_data = TRUE
remove_data
source('~/github/sbs_analysis/2_summarise_data/summarise_hms_sst.R')
dat <- sst_hms %>% filter(year > 1937 & year < 2016)
# What are the warmest and coldest months?
dat %>% group_by(month) %>%
summarise(meanTemp = mean(tempC)) %>% ungroup() %>%
arrange(meanTemp)
# Coldest == Dec, Jan, Feb
# Warmest == July, Aug, Sep
##### SELECT SUMMER, WINTER TEMPS #####
# I will use the top 25th percentile of summer temps and bottom 25th percentile of winter temps
remove_data = F
summer_annual <- get_summer_annual_means(dat, my_quant = 0.75, remove = remove_data)
winter_annual <- get_winter_annual_means(dat, my_quant = 0.25, remove = remove_data)
annual_mean <- dat %>% group_by(year) %>%
summarise(mean = mean(tempC, na.rm = TRUE)) %>%
ungroup() %>% filter(!is.na(mean))
## Collate annual data
annual_df <- annual_mean %>%
mutate(minimum = winter_annual$tempC,
maximum = summer_annual$tempC)
# Get in long format
annual_df_long <- annual_df %>%
gather(key = metric, value = tempC, mean:maximum) %>%
filter(!is.na(tempC))
# Resave
sst_annual_long <- annual_df_long %>%
mutate(dataset = "Seawater")
# Plot
sst_annual_long %>%
ggplot(aes(year, tempC, color = metric)) +
geom_line() +
geom_smooth(method = "lm")
dat <- monterey %>% rename(tempC = air_obs) %>%
select(dateR, month, year, tempC) %>% tbl_df()
##### SELECT SUMMER, WINTER TEMPS #####
# I will use the top 25th percentile of summer temps and bottom 25th percentile of winter temps
remove_data = F
summer_annual <- get_summer_annual_means(dat, my_quant = 0.75, remove = remove_data)
winter_annual <- get_winter_annual_means(dat, my_quant = 0.25, remove = remove_data)
annual_mean <- dat %>% group_by(year) %>%
summarise(mean = mean(tempC, na.rm = TRUE)) %>%
ungroup() %>% filter(!is.na(mean))
## Collate annual data
summer_annual <- summer_annual %>% filter(year < 2011)
winter_annual <- winter_annual %>% filter(year < 2011)
annual_df <- annual_mean %>%
mutate(minimum = winter_annual$tempC,
maximum = summer_annual$tempC)
# Get in long format
annual_df_long <- annual_df %>%
gather(key = metric, value = tempC, mean:maximum) %>%
filter(!is.na(tempC))
# Resave
air_annual_long <- annual_df_long %>%
mutate(dataset = "Air")
# Plot
air_annual_long %>%
ggplot(aes(year, tempC, color = metric)) +
geom_line() +
geom_smooth(method = "lm")
##### SELECT SUMMER, WINTER TEMPS #####
# I will use the top 25th percentile of summer temps and bottom 25th percentile of winter temps
remove_data = T
summer_annual <- get_summer_annual_means(dat, my_quant = 0.75, remove = remove_data)
winter_annual <- get_winter_annual_means(dat, my_quant = 0.25, remove = remove_data)
annual_mean <- dat %>% group_by(year) %>%
summarise(mean = mean(tempC, na.rm = TRUE)) %>%
ungroup() %>% filter(!is.na(mean))
## Collate annual data
summer_annual <- summer_annual %>% filter(year < 2011)
winter_annual <- winter_annual %>% filter(year < 2011)
annual_df <- annual_mean %>%
mutate(minimum = winter_annual$tempC,
maximum = summer_annual$tempC)
# Get in long format
annual_df_long <- annual_df %>%
gather(key = metric, value = tempC, mean:maximum) %>%
filter(!is.na(tempC))
# Resave
air_annual_long <- annual_df_long %>%
mutate(dataset = "Air")
# Plot
air_annual_long %>%
ggplot(aes(year, tempC, color = metric)) +
geom_line() +
geom_smooth(method = "lm")
dat %>% group_by(month) %>%
summarise(meanTemp = mean(tempC)) %>% ungroup() %>%
arrange(meanTemp)
# Coldest == Dec, Jan, Feb
# Warmest == July, Aug, Sep
##### SELECT SUMMER, WINTER TEMPS #####
# I will use the top 25th percentile of summer temps and bottom 25th percentile of winter temps
remove_data = F
summer_annual <- get_summer_annual_means(dat, my_quant = 0.75, remove = remove_data)
winter_annual <- get_winter_annual_means(dat, my_quant = 0.25, remove = remove_data)
annual_mean <- dat %>% group_by(year) %>%
summarise(mean = mean(tempC, na.rm = TRUE)) %>%
ungroup() %>% filter(!is.na(mean))
## Collate annual data
annual_df <- annual_mean %>%
mutate(minimum = winter_annual$tempC,
maximum = summer_annual$tempC)
# Get in long format
annual_df_long <- annual_df %>%
gather(key = metric, value = tempC, mean:maximum) %>%
filter(!is.na(tempC))
# Resave
sst_annual_long <- annual_df_long %>%
mutate(dataset = "Seawater")
# Plot
sst_annual_long %>%
ggplot(aes(year, tempC, color = metric)) +
geom_line() +
geom_smooth(method = "lm")
dat <- sst_hms %>% filter(year > 1937 & year < 2016)
# What are the warmest and coldest months?
dat %>% group_by(month) %>%
summarise(meanTemp = mean(tempC)) %>% ungroup() %>%
arrange(meanTemp)
# Coldest == Dec, Jan, Feb
# Warmest == July, Aug, Sep
##### SELECT SUMMER, WINTER TEMPS #####
# I will use the top 25th percentile of summer temps and bottom 25th percentile of winter temps
remove_data = F
summer_annual <- get_summer_annual_means(dat, my_quant = 0.75, remove = remove_data)
winter_annual <- get_winter_annual_means(dat, my_quant = 0.25, remove = remove_data)
annual_mean <- dat %>% group_by(year) %>%
summarise(mean = mean(tempC, na.rm = TRUE)) %>%
ungroup() %>% filter(!is.na(mean))
## Collate annual data
annual_df <- annual_mean %>%
mutate(minimum = winter_annual$tempC,
maximum = summer_annual$tempC)
# Get in long format
annual_df_long <- annual_df %>%
gather(key = metric, value = tempC, mean:maximum) %>%
filter(!is.na(tempC))
# Resave
sst_annual_long <- annual_df_long %>%
mutate(dataset = "Seawater")
# Plot
sst_annual_long %>%
ggplot(aes(year, tempC, color = metric)) +
geom_line() +
geom_smooth(method = "lm")
# Plot
air_annual_long %>%
ggplot(aes(year, tempC, color = metric)) +
geom_line() +
geom_smooth(method = "lm")
# Plot
sst_annual_long %>%
ggplot(aes(year, tempC, color = metric)) +
geom_line() +
geom_smooth(method = "lm")
library(cowplot)
library(dplyr)
options(tibble.print_max = 50, tibble.print_min = 10)
theme_set(theme_bw(base_size = 12) +
theme(strip.background = element_blank(),
strip.text = element_text(face = "italic"),
panel.grid = element_blank()))
## Load bayesian analysis results
coda_df_logsize_density <- read.csv("3_analyse_data/bayes_output/logsize_density/coda_df_all.csv") %>%
mutate(model = "With density")
coda_df_logsize <- read.csv("3_analyse_data/bayes_output/logsize/coda_df_all.csv") %>%
mutate(model = "Without density")
names(coda_df_logsize)
names(coda_df_logsize_density)
coda_df_all <- rbind(coda_df_logsize, coda_df_logsize_density)
species_df <- data.frame(sp = c("CHFU", "LODI", "LIKE"),
species = c("Chlorostoma funebralis", "Lottia digitalis", "Littorina keenae"))
coda_df_all <- left_join(coda_df_all, species_df, by = "sp")
# Reorder levels
species <- factor(coda_df_all$species, levels = rev(c("Littorina keenae",
"Lottia digitalis",
"Chlorostoma funebralis")))
coda_df_all$species <- species
##### 3 PANEL PLOT OF PROPORTIONAL CHANGE #####
facet_panels <- coda_df_all %>%
filter(!is.na(species)) %>%
select(species) %>% distinct() %>%
arrange(species)
facet_panels
facet_panels <- facet_panels %>%
mutate(facet_labels = paste(LETTERS)[1:3]) %>%
arrange(facet_labels)
coda_df_all <- coda_df_all %>%
inner_join(., facet_panels, by = c("species"))
coda_df_all %>%
filter(param == "prop_change") %>%
filter(sp != "CHFU_means") %>%
ggplot(aes(quant, X50., color = model)) +
geom_point() +
geom_line(aes(linetype = model)) +
geom_errorbar(aes(ymin = X2.5., ymax = X97.5.), width = 0.025) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
ylab("Proportional change in size (mm)") +
xlab("Size threshold (quantile of past size)") +
theme(legend.title = element_blank()) +
theme(legend.position = c(0.99, 0.01), legend.justification = c(0.99, 0.01)) +
#coord_cartesian(ylim = c(-0.4, 0.4)) +
facet_wrap(~ species) +
scale_color_manual(values = c("darkgray", "black")) +
geom_text(data = facet_panels, aes(0, 0.18, label = facet_labels),
inherit.aes = FALSE, size = 6, nudge_x = 0, nudge_y = 0.00)
## Plot Littorina only
coda_df_all %>%
filter(param == "prop_change") %>%
filter(sp == "Littorina keenae") %>%
ggplot(aes(quant, X50., color = model)) +
geom_point() +
geom_line(aes(linetype = model)) +
geom_errorbar(aes(ymin = X2.5., ymax = X97.5.), width = 0.025) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
ylab("Proportional change in size (mm)") +
xlab("Size threshold (quantile of past size)") +
theme(legend.title = element_blank()) +
theme(legend.position = c(0.99, 0.01), legend.justification = c(0.99, 0.01)) +
#coord_cartesian(ylim = c(-0.4, 0.4)) +
facet_wrap(~ species) +
scale_color_manual(values = c("darkgray", "black")) +
geom_text(data = facet_panels, aes(0, 0.18, label = facet_labels),
inherit.aes = FALSE, size = 6, nudge_x = 0, nudge_y = 0.00)
## Plot Littorina only
coda_df_all %>%
filter(param == "prop_change") %>%
filter(sp == "LIKE") %>%
ggplot(aes(quant, X50., color = model)) +
geom_point() +
geom_line(aes(linetype = model)) +
geom_errorbar(aes(ymin = X2.5., ymax = X97.5.), width = 0.025) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
ylab("Proportional change in size (mm)") +
xlab("Size threshold (quantile of past size)") +
theme(legend.title = element_blank()) +
theme(legend.position = c(0.99, 0.01), legend.justification = c(0.99, 0.01)) +
#coord_cartesian(ylim = c(-0.4, 0.4)) +
facet_wrap(~ species) +
scale_color_manual(values = c("darkgray", "black")) +
geom_text(data = facet_panels, aes(0, 0.18, label = facet_labels),
inherit.aes = FALSE, size = 6, nudge_x = 0, nudge_y = 0.00)
## Plot Littorina only
coda_df_all %>%
filter(param == "prop_change") %>%
filter(sp == "LIKE") %>%
ggplot(aes(quant, X50., color = model)) +
geom_point() +
geom_line(aes(linetype = model)) +
geom_errorbar(aes(ymin = X2.5., ymax = X97.5.), width = 0.025) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
ylab("Proportional change in size (mm)") +
xlab("Size threshold (quantile of past size)") +
theme(legend.title = element_blank()) +
theme(legend.position = c(0.99, 0.01), legend.justification = c(0.99, 0.01)) +
#coord_cartesian(ylim = c(-0.4, 0.4)) +
facet_wrap(~ species) +
scale_color_manual(values = c("darkgray", "black"))
## Plot Littorina only
coda_df_all %>%
filter(param == "prop_change") %>%
filter(sp == "LIKE") %>%
ggplot(aes(quant, X50., color = model)) +
geom_point() +
geom_line(aes(linetype = model)) +
geom_errorbar(aes(ymin = X2.5., ymax = X97.5.), width = 0.025) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
ylab("Proportional change in size (mm)") +
xlab("Size threshold (quantile of past size)") +
theme(legend.title = element_blank()) +
theme(legend.position = c(0.99, 0.01), legend.justification = c(0.99, 0.01)) +
#coord_cartesian(ylim = c(-0.4, 0.4)) +
facet_wrap(~ species) +
scale_color_manual(values = c("red", "black"))
ggsave("figs_ms/plot_prop_change_like.pdf", height = 3.5, width = 3.5)
## Plot Littorina only
unique(coda_df_all$model)
coda_df_all$model <- as.factor(coda_df_all$model, levels = c("Without density", "With density"))
## Plot Littorina only
str(coda_df_all$model)
?as.factor
crap <- as.factor(coda_df_all$model, levels = c("Without density", "With density"))
crap <- factor(coda_df_all$model, levels = c("Without density", "With density"))
str(crap)
coda_df_all$model <- factor(coda_df_all$model, levels = c("Without density", "With density"))
coda_df_all %>%
filter(param == "prop_change") %>%
filter(sp == "LIKE") %>%
ggplot(aes(quant, X50., color = model)) +
geom_point() +
geom_line(aes(linetype = model)) +
geom_errorbar(aes(ymin = X2.5., ymax = X97.5.), width = 0.025) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
ylab("Proportional change in size (mm)") +
xlab("Size threshold (quantile of past size)") +
theme(legend.title = element_blank()) +
theme(legend.position = c(0.99, 0.01), legend.justification = c(0.99, 0.01)) +
#coord_cartesian(ylim = c(-0.4, 0.4)) +
facet_wrap(~ species) +
scale_color_manual(values = c("red", "black"))
coda_df_all %>%
filter(param == "prop_change") %>%
filter(sp == "LIKE") %>%
ggplot(aes(quant, X50., color = model)) +
geom_point() +
geom_line(aes(linetype = model)) +
geom_errorbar(aes(ymin = X2.5., ymax = X97.5.), width = 0.025) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
ylab("Proportional change in size (mm)") +
xlab("Size threshold (quantile of past size)") +
theme(legend.title = element_blank()) +
theme(legend.position = c(0.99, 0.01), legend.justification = c(0.99, 0.01)) +
#coord_cartesian(ylim = c(-0.4, 0.4)) +
facet_wrap(~ species) +
scale_color_manual(values = c("black", "red"))
ggsave("figs_ms/plot_prop_change_like.pdf", height = 3.5, width = 3.5)
coda_df_all %>%
filter(param == "prop_change") %>%
filter(sp != "CHFU_means") %>%
ggplot(aes(quant, X50., color = model)) +
geom_point() +
geom_line(aes(linetype = model)) +
geom_errorbar(aes(ymin = X2.5., ymax = X97.5.), width = 0.025) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
ylab("Proportional change in size (mm)") +
xlab("Size threshold (quantile of past size)") +
theme(legend.title = element_blank()) +
theme(legend.position = c(0.99, 0.01), legend.justification = c(0.99, 0.01)) +
#coord_cartesian(ylim = c(-0.4, 0.4)) +
facet_wrap(~ species) +
scale_color_manual(values = c("darkgray", "black")) +
geom_text(data = facet_panels, aes(0, 0.18, label = facet_labels),
inherit.aes = FALSE, size = 6, nudge_x = 0, nudge_y = 0.00)
coda_df_all %>%
filter(param == "prop_change") %>%
filter(sp != "CHFU_means") %>%
ggplot(aes(quant, X50., color = model)) +
geom_point() +
geom_line(aes(linetype = model)) +
geom_errorbar(aes(ymin = X2.5., ymax = X97.5.), width = 0.025) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
ylab("Proportional change in size (mm)") +
xlab("Size threshold (quantile of past size)") +
theme(legend.title = element_blank()) +
theme(legend.position = c(0.99, 0.01), legend.justification = c(0.99, 0.01)) +
#coord_cartesian(ylim = c(-0.4, 0.4)) +
facet_wrap(~ species) +
scale_color_manual(values = c("black", "darkgray")) +
geom_text(data = facet_panels, aes(0, 0.18, label = facet_labels),
inherit.aes = FALSE, size = 6, nudge_x = 0, nudge_y = 0.00)
ggsave("figs_ms/plot_prop_change.pdf", height = 3.5, width = 7)
## Plot Littorina only
coda_df_all %>%
filter(param == "prop_change") %>%
filter(sp == "LIKE") %>%
ggplot(aes(quant, X50., color = model)) +
geom_point() +
geom_line(aes(linetype = model)) +
geom_errorbar(aes(ymin = X2.5., ymax = X97.5.), width = 0.025) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
ylab("Proportional change in size (mm)") +
xlab("Size threshold (quantile of past size)") +
theme(legend.title = element_blank()) +
theme(legend.position = c(0.99, 0.01), legend.justification = c(0.99, 0.01)) +
#coord_cartesian(ylim = c(-0.4, 0.4)) +
facet_wrap(~ species) +
scale_color_manual(values = c("black", "red"))
ggsave("figs_ms/plot_prop_change_like.pdf", height = 3.5, width = 3.5)
## Plot Littorina only
coda_df_all %>%
filter(param == "prop_change") %>%
filter(sp == "LIKE") %>%
ggplot(aes(quant, X50., color = model)) +
geom_point() +
geom_line(aes(linetype = model)) +
geom_errorbar(aes(ymin = X2.5., ymax = X97.5.), width = 0.025) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
ylab("Proportional change in size") +
xlab("Size threshold (quantile of past size)") +
theme(legend.title = element_blank()) +
theme(legend.position = c(0.99, 0.01), legend.justification = c(0.99, 0.01)) +
#coord_cartesian(ylim = c(-0.4, 0.4)) +
facet_wrap(~ species) +
scale_color_manual(values = c("black", "red"))
ggsave("figs_ms/plot_prop_change_like.pdf", height = 3.5, width = 3.5)
## Plot Littorina only
coda_df_all %>%
filter(param == "prop_change") %>%
filter(sp == "LIKE") %>%
ggplot(aes(quant, X50., color = model)) +
geom_point() +
geom_line(aes(linetype = model)) +
geom_errorbar(aes(ymin = X2.5., ymax = X97.5.), width = 0.025) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
ylab("Proportional change in size") +
xlab("Size threshold for inclusion\n (quantile of past size)") +
theme(legend.title = element_blank()) +
theme(legend.position = c(0.99, 0.01), legend.justification = c(0.99, 0.01)) +
#coord_cartesian(ylim = c(-0.4, 0.4)) +
facet_wrap(~ species) +
scale_color_manual(values = c("black", "red"))
ggsave("figs_ms/plot_prop_change_like.pdf", height = 3.5, width = 3.5)
