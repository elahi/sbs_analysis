# Quick plots (1944 - 2014)
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm") +
ggtitle("Sea Surface Temperature\n1944 - 2014") +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Year")
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm") +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Year")
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm") +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Year") +
theme(legend.position = "none")
# Quick plots (1944 - 2014)
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm", aes(color = NULL)) +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Year") +
theme(legend.position = "none")
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm", color = NULL) +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Year") +
theme(legend.position = "none")
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm") +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Year") +
theme(legend.position = "none")
ggsave("hms_sst_yearly.pdf", width = 3.5, height = 3.5)
ggsave("./figs/hms_sst_yearly.pdf", width = 3.5, height = 3.5)
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type,
shape = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm") +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Year") +
theme(legend.position = "none")
ggsave("./figs/hms_sst_yearly.pdf", width = 3.5, height = 3.5)
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type,
shape = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm") +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.position = "none")
ggsave("./figs/hms_sst_yearly.pdf", width = 3.5, height = 3.5)
library(ggplot2)
theme_set(theme_classic(base_size = 8))
library(dplyr)
library(tidyr)
library(nlme)
# Set working directory to main project folder
setwd("~/github/sbs_analysis")
# Get uncorrected temperature data from MLO
# hms_raw <- read.table("http://mlo.stanford.edu/HMS-SST.txt",
#                       header = TRUE, na.strings = "NaN")
hms_raw <- read.table("./data/HMS-SST.txt",
skip = 0, header = TRUE, na.strings = "NaN",
stringsAsFactors = FALSE)
# Get corrected temperature data (up to 2004)
hms_corr <- read.table("./data/HMStemp.corrected.txt",
skip = 13, header = TRUE, na.strings = "NaN")
head(hms_raw)
head(hms_corr)
str(hms_raw)
hms_raw$dateR <- as.Date(hms_raw$DATE, "%m/%d/%Y")
hms_corr$dateR <- as.Date(with(hms_corr, ISOdate(year, month, day)))
str(hms_corr)
dat1 <- hms_raw %>% select(dateR, SST)
dat2 <- hms_corr %>% select(dateR, new) %>% rename(SST = new)
# Get uncorrected data for 2005 on
str(dat1$dateR)
dat3 <- dat1 %>% filter(dateR > "2004-12-31")
head(dat3)
# now combine corrected and uncorrected data
master <- rbind(dat2, dat3)
head(master)
# get month and year to calculate averages
master$month <- strftime(master$dateR, "%m")
master$year <- strftime(master$dateR, "%Y")
master$mo_yr <- with(master, paste(month, year, sep = "_"))
master$SST <- as.numeric(master$SST)
str(master)
# this value is suspicious
min(master$SST, na.rm = TRUE)
master %>% filter(SST < 8)
master2 <- master %>% filter(SST < 7.3)
master2
# Quick plot
head(master)
ggplot(data = master, aes(dateR, SST)) +
geom_line()
# Quick plot (1944 - 2014)
master %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(dateR, SST)) +
geom_point() + geom_line() +
geom_smooth(method = "lm") +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.position = "none")
hms_monthly <- master %>%
group_by(mo_yr, month, year) %>%
summarise(mean = mean(SST, na.rm=T),
maximum = max(SST, na.rm=T),
minimum = min(SST, na.rm=T)) %>%
ungroup()
str(hms_monthly)
hms_monthly$dateR <- with(hms_monthly,
as.Date(paste(year, month, 15, sep = "-")))
str(hms_monthly)
mod1 <- gls(mean ~ dateR,
data = hms_monthly,
correlation = corAR1())
summary(mod1)
mod2 <- gls(maximum ~ dateR,
data = hms_monthly,
correlation = corAR1())
summary(mod2)
mod3 <- gls(minimum ~ dateR,
data = hms_monthly,
correlation = corAR1())
summary(mod3)
# convert wide to long
head(hms_monthly)
hms_long <- gather(hms_monthly, key = type, value = tempC,
mean:minimum)
head(hms_long)
unique(hms_long$type)
# Quick plots
ggplot(data = hms_long, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type)
ggplot(data = hms_long, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type, nrow = 3)
ggplot(data = hms_long, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type, nrow = 3) +
theme(legend.position = "none")
ggplot(data = hms_long, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type, nrow = 3) +
theme(legend.position = "none") +
geom_smooth(method = "lm")
ggplot(data = hms_long, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type, nrow = 3) +
theme(legend.position = "none") +
geom_smooth(method = "lm", color = "black")
###########################
# Quick plots
ggplot(data = hms_long, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type, nrow = 3) +
theme(legend.position = "none") +
geom_smooth(method = "lm", color = "black") +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.title = element_blank())
subDat <- hms_monthly %>% filter(year > 1943 & year < 2015)
subDat <- hms_long %>% filter(year > 1943 & year < 2015)
ggplot(data = hms_long, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type, nrow = 3) +
theme(legend.position = "none") +
geom_smooth(method = "lm", color = "black") +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.title = element_blank())
# Quick plots
ggplot(data = subDat, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type, nrow = 3) +
theme(legend.position = "none") +
geom_smooth(method = "lm", color = "black") +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.title = element_blank())
# Quick plots
ggplot(data = subDat, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type, nrow = 1) +
theme(legend.position = "none") +
geom_smooth(method = "lm", color = "black") +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.title = element_blank())
# Quick plots
ggplot(data = subDat, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type, nrow = 1) +
theme(legend.position = "none") +
geom_smooth(method = "lm", color = "black") +
ggtitle("Monthly Sea Surface Temperature\n1944 - 2014") +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.title = element_blank())
ggsave("./figs/hms_sst_monthly.pdf", width = 7, height = 3.5)
#################################################
# Author: Robin Elahi
# Date: 151102
# Temporal shifts in gastropod size-frequency distributions are
# consistent with climate warming
# Plotting summarized temperature data
#################################################
# Set working directory to main project folder
setwd("~/github/sbs_analysis")
getwd()
# Load packages
library(ggplot2)
theme_set(theme_classic(base_size = 8))
library(plyr)
library(dplyr)
source("./R/multiplotF.R")
###########################
# Load daily iButton data from output folder
dat <- read.csv("./output/temp_daily_iButton.csv", header = TRUE)
head(dat)
dat$day <- as.Date(dat$day)
# Mean temperatures
ggplot(dat, aes(day, mean_tempC, color = iButtonID)) +
geom_line(size = 1, alpha = 0.8) +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ position) + theme(legend.position = "none")
# Max temperatures
ggplot(dat, aes(day, max_tempC, color = iButtonID)) +
geom_line(size = 1, alpha = 0.8) +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ position) + theme(legend.position = "none")
# Min temperatures
ggplot(dat, aes(day, min_tempC, color = iButtonID)) +
geom_line(size = 1, alpha = 0.8) +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ position) + theme(legend.position = "none")
###########################
# Now plot summarized data for each logger position
# (summarizes across two iButtons per position)
# Except for: WaraD_mid2; WaraD_hi; WaraD_low
# (these only had one logger per position)
dat <- read.csv("./output/temp_daily_position.csv", header = TRUE)
head(dat)
dat$day <- as.Date(dat$day)
# Mean temperatures
ggplot(dat, aes(day, mean_tempC, color = position)) +
geom_line(size = 1, alpha = 0.8) +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ position) + theme(legend.position = "none")
# Max temperatures
ggplot(dat, aes(day, max_tempC, color = iButtonID)) +
geom_line(size = 1, alpha = 0.8) +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ position) + theme(legend.position = "none")
# Min temperatures
ggplot(dat, aes(day, min_tempC, color = iButtonID)) +
geom_line(size = 1, alpha = 0.8) +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ position) + theme(legend.position = "none")
# Mean temperatures
names(dat)
ggplot(dat, aes(day, mean_tempC, color = position)) +
geom_line(size = 1, alpha = 0.8) +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ code) + theme(legend.position = "none")
###########################
# Now plot summarized data for each species
dat <- read.csv("./output/temp_daily_species.csv", header = TRUE)
head(dat)
dat$day <- as.Date(dat$day)
# Mean temperatures
ggplot(dat, aes(day, mean_tempC)) +
geom_line() +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ code) + theme(legend.position = "none")
# Max temperatures
ggplot(dat, aes(day, max_tempC)) +
geom_line() +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ code) + theme(legend.position = "none")
# Min temperatures
ggplot(dat, aes(day, min_tempC)) +
geom_line() +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ code) + theme(legend.position = "none")
# Relevel the species codes
dat$code <- factor(dat$code, levels = rev(c('LIKE', 'LODI', 'CHFU')),
ordered = TRUE)
# Figure out how many daily records per species, and mean tidal height
dat %>% group_by(code) %>% summarise(totalN = n(),
meanHT = mean(tidalHT, na.rm = TRUE),
sdHT = sd(tidalHT, na.rm = TRUE))
### Violin plot
ggplot(dat, aes(code, mean_tempC)) +
geom_violin(fill = "gray") +
geom_boxplot(width = 0.3, notch = TRUE, color = "black") +
ylab("Temperature (C)") + xlab("Species") +
theme(legend.position = "none") +
scale_x_discrete("", labels = c("CHFU" = "Chlorostoma funebralis\nn=344",
"LODI" = "Lottia digitalis\nn=258",
"LIKE" = "Littorina keenae\nn=344")) +
coord_flip()
ggsave("./figs/temp_violin_spp.pdf", width = 3.5, height = 3.5)
### 3 panel plot
# Relevel the species codes
dat$code <- factor(dat$code, levels = c('LIKE', 'LODI', 'CHFU'),
ordered = TRUE)
ULClabel <- theme(plot.title = element_text(hjust = -0.05, vjust = 1,
size = rel(1.2)))
p1 <- ggplot(dat, aes(code, mean_tempC)) +
geom_violin(fill = "gray") +
geom_boxplot(width = 0.3, notch = TRUE, color = "black") +
ylab(expression(paste("Daily mean temperature (", degree, "C)"))) +
xlab("Species") +
theme(legend.position = "none") +
scale_x_discrete("",
labels = c("CHFU" = expression(italic(Chlorostoma)),
"LODI" = expression(italic(Lottia)),
"LIKE" = expression(italic(Littorina)))) +
ULClabel + labs(title = "A")
p2 <- ggplot(dat, aes(code, max_tempC)) +
geom_violin(fill = "gray") +
geom_boxplot(width = 0.3, notch = TRUE, color = "black") +
ylab(expression(paste("Daily maximum temperature (", degree, "C)"))) +
xlab("Species") +
theme(legend.position = "none") +
scale_x_discrete("",
labels = c("CHFU" = expression(italic(Chlorostoma)),
"LODI" = expression(italic(Lottia)),
"LIKE" = expression(italic(Littorina)))) +
ULClabel + labs(title = "B")
p3 <- ggplot(dat, aes(code, min_tempC)) +
geom_violin(fill = "gray") +
geom_boxplot(width = 0.3, notch = TRUE, color = "black") +
ylab(expression(paste("Daily minimum temperature (", degree, "C)"))) +
xlab("Species") +
theme(legend.position = "none") +
scale_x_discrete("",
labels = c("CHFU" = expression(italic(Chlorostoma)),
"LODI" = expression(italic(Lottia)),
"LIKE" = expression(italic(Littorina)))) +
ULClabel + labs(title = "C")
# save as pdf
pdf("./figs/temp_spp_3panel.pdf", width = 3.5, height = 6)
multiplot(p1, p2, p3, cols = 1)
dev.off()
pdf("./figs/temp_spp_3panel.pdf", width = 3.5, height = 3.5)
multiplot(p1, p2, p3, cols = 1)
dev.off()
pdf("./figs/temp_spp_3panel.pdf", width = 3.5, height = 3.5)
multiplot(p1, p2, p3, cols = 1)
dev.off()
# save as pdf
pdf("./figs/temp_spp_3panel.pdf", width = 3.5, height = 3.5)
multiplot(p1, p2, p3, cols = 1)
dev.off()
# Set working directory to main project folder
setwd("~/github/sbs_analysis")
getwd()
# Load packages
library(ggplot2)
theme_set(theme_classic(base_size = 8))
library(plyr)
library(dplyr)
source("./R/multiplotF.R")
###########################
# Load daily iButton data from output folder
dat <- read.csv("./output/temp_daily_iButton.csv", header = TRUE)
head(dat)
dat$day <- as.Date(dat$day)
# Mean temperatures
ggplot(dat, aes(day, mean_tempC, color = iButtonID)) +
geom_line(size = 1, alpha = 0.8) +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ position) + theme(legend.position = "none")
# Max temperatures
ggplot(dat, aes(day, max_tempC, color = iButtonID)) +
geom_line(size = 1, alpha = 0.8) +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ position) + theme(legend.position = "none")
# Min temperatures
ggplot(dat, aes(day, min_tempC, color = iButtonID)) +
geom_line(size = 1, alpha = 0.8) +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ position) + theme(legend.position = "none")
###########################
# Now plot summarized data for each logger position
# (summarizes across two iButtons per position)
# Except for: WaraD_mid2; WaraD_hi; WaraD_low
# (these only had one logger per position)
dat <- read.csv("./output/temp_daily_position.csv", header = TRUE)
head(dat)
dat$day <- as.Date(dat$day)
# Mean temperatures
ggplot(dat, aes(day, mean_tempC, color = position)) +
geom_line(size = 1, alpha = 0.8) +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ position) + theme(legend.position = "none")
# Max temperatures
ggplot(dat, aes(day, max_tempC, color = iButtonID)) +
geom_line(size = 1, alpha = 0.8) +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ position) + theme(legend.position = "none")
# Min temperatures
ggplot(dat, aes(day, min_tempC, color = iButtonID)) +
geom_line(size = 1, alpha = 0.8) +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ position) + theme(legend.position = "none")
# Mean temperatures
names(dat)
ggplot(dat, aes(day, mean_tempC, color = position)) +
geom_line(size = 1, alpha = 0.8) +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ code) + theme(legend.position = "none")
###########################
# Now plot summarized data for each species
dat <- read.csv("./output/temp_daily_species.csv", header = TRUE)
head(dat)
dat$day <- as.Date(dat$day)
# Mean temperatures
ggplot(dat, aes(day, mean_tempC)) +
geom_line() +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ code) + theme(legend.position = "none")
# Max temperatures
ggplot(dat, aes(day, max_tempC)) +
geom_line() +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ code) + theme(legend.position = "none")
# Min temperatures
ggplot(dat, aes(day, min_tempC)) +
geom_line() +
ylab("Temperature (C)") + xlab("Date") +
facet_wrap(~ code) + theme(legend.position = "none")
# Relevel the species codes
dat$code <- factor(dat$code, levels = rev(c('LIKE', 'LODI', 'CHFU')),
ordered = TRUE)
# Figure out how many daily records per species, and mean tidal height
dat %>% group_by(code) %>% summarise(totalN = n(),
meanHT = mean(tidalHT, na.rm = TRUE),
sdHT = sd(tidalHT, na.rm = TRUE))
### Violin plot
ggplot(dat, aes(code, mean_tempC)) +
geom_violin(fill = "gray") +
geom_boxplot(width = 0.3, notch = TRUE, color = "black") +
ylab("Temperature (C)") + xlab("Species") +
theme(legend.position = "none") +
scale_x_discrete("", labels = c("CHFU" = "Chlorostoma funebralis\nn=344",
"LODI" = "Lottia digitalis\nn=258",
"LIKE" = "Littorina keenae\nn=344")) +
coord_flip()
ggsave("./figs/temp_violin_spp.pdf", width = 3.5, height = 3.5)
### 3 panel plot
# Relevel the species codes
dat$code <- factor(dat$code, levels = c('LIKE', 'LODI', 'CHFU'),
ordered = TRUE)
ULClabel <- theme(plot.title = element_text(hjust = -0.05, vjust = 1,
size = rel(1.2)))
p1 <- ggplot(dat, aes(code, mean_tempC)) +
geom_violin(fill = "gray") +
geom_boxplot(width = 0.3, notch = TRUE, color = "black") +
ylab(expression(paste("Daily mean temperature (", degree, "C)"))) +
xlab("Species") +
theme(legend.position = "none") +
scale_x_discrete("",
labels = c("CHFU" = expression(italic(Chlorostoma)),
"LODI" = expression(italic(Lottia)),
"LIKE" = expression(italic(Littorina)))) +
ULClabel + labs(title = "A")
p2 <- ggplot(dat, aes(code, max_tempC)) +
geom_violin(fill = "gray") +
geom_boxplot(width = 0.3, notch = TRUE, color = "black") +
ylab(expression(paste("Daily maximum temperature (", degree, "C)"))) +
xlab("Species") +
theme(legend.position = "none") +
scale_x_discrete("",
labels = c("CHFU" = expression(italic(Chlorostoma)),
"LODI" = expression(italic(Lottia)),
"LIKE" = expression(italic(Littorina)))) +
ULClabel + labs(title = "B")
p3 <- ggplot(dat, aes(code, min_tempC)) +
geom_violin(fill = "gray") +
geom_boxplot(width = 0.3, notch = TRUE, color = "black") +
ylab(expression(paste("Daily minimum temperature (", degree, "C)"))) +
xlab("Species") +
theme(legend.position = "none") +
scale_x_discrete("",
labels = c("CHFU" = expression(italic(Chlorostoma)),
"LODI" = expression(italic(Lottia)),
"LIKE" = expression(italic(Littorina)))) +
ULClabel + labs(title = "C")
# save as pdf
pdf("./figs/temp_spp_3panel.pdf", width = 3.5, height = 3.5)
multiplot(p1, p2, p3, cols = 1)
dev.off()
