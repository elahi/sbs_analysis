temp1 = gregexpr("[1-9]", param_j),
group_j = as.numeric(unique(unlist(regmatches(param_j, temp1)))))
hier2
temp1
crap <- group_j[3]
unlist(strsplit(crap, "[", fixed = TRUE))[1]
unlist(strsplit(crap, "[", fixed = TRUE))[2]
temp1 <- gregexpr("[0-9]", crap)
as.numeric(unique(unlist(regmatches(crap, temp1))))
temp1
unique(as.numeric(unlist(strsplit(gsub("[^0-9]", "", unlist(crap)), ""))))
hier2 <- read_csv("sbs_bayes/bayes_output/coda_quantile_hier2_normal.csv")
hier2
hier2 <- hier2 %>% rename(param_j = param) %>% # rename param to reflect groups
mutate(param = unlist(strsplit(param_j, "[", fixed = TRUE))[1], # get new param
temp1 = gregexpr("[1-9]", param_j),
group_j = unique(as.numeric(unlist(strsplit(gsub("[^0-9]", "",
unlist(param_j)), "")))))
?strsplit
unique(as.numeric(unlist(strsplit(gsub("[^0-9]", "", crap), ""))))
gsub("[^0-9]", "", crap)
unlist(strsplit(gsub("[^0-9]", "", crap), "")
)
hier2 <- hier2 %>% rename(param_j = param) %>% # rename param to reflect groups
mutate(param = unlist(strsplit(param_j, "[", fixed = TRUE))[1], # get new param
temp1 = gregexpr("[1-9]", param_j),
group_j = gsub("[^0-9]", "", param_j))
hier2
hier2 <- read_csv("sbs_bayes/bayes_output/coda_quantile_hier2_normal.csv")
hier2 <- hier2 %>% rename(param_j = param) %>% # rename param to reflect groups
mutate(param = unlist(strsplit(param_j, "[", fixed = TRUE))[1], # get new param
group_j = gsub("[^0-9]", "", param_j))
hier2
names(hier2)
hier2
pooled <- read_csv("sbs_bayes/bayes_output/coda_quantile_pooled_normal_wara.csv")
pooled
hier2
pooled <- pooled %>%
mutate(group_j = as.integer(as.factor(site)))
pooled
pooled <- pooled %>%
mutate(group_j = as.integer(as.factor(site)),
param_j = NA)
coda_quantile <- rbind(hier2, pooled)
hier2 <- read_csv("sbs_bayes/bayes_output/coda_quantile_hier2_normal.csv")
hier2 <- hier2 %>% rename(param_j = param) %>% # rename param to reflect groups
mutate(param = unlist(strsplit(param_j, "[", fixed = TRUE))[1], # get new param
group_j = gsub("[^0-9]", "", param_j),
sampleArea = NA) # get group j
hier2
pooled <- pooled %>%
mutate(group_j = as.integer(as.factor(site)),
param_j = NA) %>%
rename(sampleArea = site)
coda_quantile <- rbind(hier2, pooled)
View(coda_quantile)
coda_quantile
datJ %>% distinct(sp, sampleArea)
datJ %>% distinct(sp, sampleArea, sample_area_tidal_ht)
datJ %>% distinct(sp, sampleArea, sample_area_tidal_ht) %>%
group_by(sampleArea) %>%
mutate(group_j = as.integer(as.factor(sampleArea)))
datJ %>% distinct(sp, sampleArea, sample_area_tidal_ht) %>%
group_by(sp) %>%
mutate(group_j = as.integer(as.factor(sampleArea)))
datJ %>% distinct(sp, sampleArea, sample_area_tidal_ht) %>%
group_by(sp) %>%
mutate(group_j = as.integer(as.factor(sampleArea))) %>%
ungroup()
waraDF %>% distinct(sp, sampleArea, sample_area_tidal_ht) %>%
group_by(sp) %>%
mutate(group_j = as.integer(as.factor(sampleArea))) %>%
ungroup()
wara_groups <- waraDF %>% distinct(sp, sampleArea, sample_area_tidal_ht) %>%
group_by(sp) %>%
mutate(group_j = as.integer(as.factor(sampleArea))) %>%
ungroup()
childs_groups <- childsDF %>% distinct(sp, sampleArea, sample_area_tidal_ht) %>%
mutate(group_j = as.integer(as.factor(sampleArea)))
hex_groups
hex_groups <- hexDF %>% distinct(sp, sampleArea, sample_area_tidal_ht) %>%
mutate(group_j = as.integer(as.factor(sampleArea)))
childs_groups <- childsDF %>% distinct(sp, sampleArea, sample_area_tidal_ht) %>%
mutate(group_j = as.integer(as.factor(sampleArea)))
hex_groups
groups_df <- rbind(wara_groups, childs_groups, hex_groups)
coda_quantile
View(coda_quantile)
groups_df
coda_quantile <- groups_df %>% select(-sampleArea) %>%
left_join(coda_quantile, ., by = c("sp", "group_j"))
coda_quantile
groups_df
hex_groups <- hexDF %>% distinct(sp, sampleArea, sample_area_tidal_ht) %>%
mutate(group_j = as.character(as.integer(as.factor(sampleArea))))
groups_df <- rbind(wara_groups, childs_groups, hex_groups)
groups_df
wara_groups <- waraDF %>% distinct(sp, sampleArea, sample_area_tidal_ht) %>%
mutate(group_j = as.integer(as.factor(sampleArea)))
childs_groups <- childsDF %>% distinct(sp, sampleArea, sample_area_tidal_ht) %>%
mutate(group_j = as.integer(as.factor(sampleArea)))
hex_groups <- hexDF %>% distinct(sp, sampleArea, sample_area_tidal_ht) %>%
mutate(group_j = as.integer(as.factor(sampleArea)))
groups_df <- rbind(wara_groups, childs_groups, hex_groups) %>%
mutate(group_j = as.character(group_j))
groups_df
coda_quantile <- groups_df %>% select(-sampleArea) %>%
left_join(coda_quantile, ., by = c("sp", "group_j"))
coda_quantile
groups_df
coda_quantile <- rbind(hier2, pooled)
coda_quantile <- coda_quantile %>% select(-sampleArea) %>%
left_join(., coda_quantile, by = c("sp", "group_j"))
### Read raw data for tidal height info per sample area
source("sbs_bayes/00_sbs_bayes_data.R")
wara_groups <- waraDF %>% distinct(sp, sampleArea, sample_area_tidal_ht) %>%
mutate(group_j = as.integer(as.factor(sampleArea)))
childs_groups <- childsDF %>% distinct(sp, sampleArea, sample_area_tidal_ht) %>%
mutate(group_j = as.integer(as.factor(sampleArea)))
hex_groups <- hexDF %>% distinct(sp, sampleArea, sample_area_tidal_ht) %>%
mutate(group_j = as.integer(as.factor(sampleArea)))
groups_df <- rbind(wara_groups, childs_groups, hex_groups) %>%
mutate(group_j = as.character(group_j))
### Read bayes objects
# Get Littorina and Lottia
hier2 <- read_csv("sbs_bayes/bayes_output/coda_quantile_hier2_normal.csv")
hier2 <- hier2 %>% rename(param_j = param) %>% # rename param to reflect groups
mutate(param = unlist(strsplit(param_j, "[", fixed = TRUE))[1], # get new param
group_j = gsub("[^0-9]", "", param_j),
sampleArea = NA) # get group j
# Get Chlorostoma
pooled <- read_csv("sbs_bayes/bayes_output/coda_quantile_pooled_normal_wara.csv")
pooled <- pooled %>%
mutate(group_j = as.integer(as.factor(site)),
param_j = NA) %>%
rename(sampleArea = site)
# Combine datasets
coda_quantile <- rbind(hier2, pooled)
coda_quantile <- coda_quantile %>% select(-sampleArea) %>%
left_join(., coda_quantile, by = c("sp", "group_j"))
hier2 <- read_csv("sbs_bayes/bayes_output/coda_quantile_hier2_normal.csv")
hier2 <- hier2 %>% rename(param_j = param) %>% # rename param to reflect groups
mutate(param = unlist(strsplit(param_j, "[", fixed = TRUE))[1], # get new param
group_j = gsub("[^0-9]", "", param_j),
sampleArea = NA) # get group j
pooled <- read_csv("sbs_bayes/bayes_output/coda_quantile_pooled_normal_wara.csv")
pooled <- pooled %>%
mutate(group_j = as.integer(as.factor(site)),
param_j = NA) %>%
rename(sampleArea = site)
coda_quantile <- rbind(hier2, pooled)
coda_quantile <- coda_quantile %>% select(-sampleArea) %>%
left_join(., coda_quantile, by = c("sp", "group_j"))
coda_quantile
rm(list=ls(all=TRUE))
source("sbs_bayes/00_sbs_bayes_data.R")
wara_groups <- waraDF %>% distinct(sp, sampleArea, sample_area_tidal_ht) %>%
mutate(group_j = as.integer(as.factor(sampleArea)))
childs_groups <- childsDF %>% distinct(sp, sampleArea, sample_area_tidal_ht) %>%
mutate(group_j = as.integer(as.factor(sampleArea)))
hex_groups <- hexDF %>% distinct(sp, sampleArea, sample_area_tidal_ht) %>%
mutate(group_j = as.integer(as.factor(sampleArea)))
groups_df <- rbind(wara_groups, childs_groups, hex_groups) %>%
mutate(group_j = as.character(group_j))
hier2 <- read_csv("sbs_bayes/bayes_output/coda_quantile_hier2_normal.csv")
hier2 <- hier2 %>% rename(param_j = param) %>% # rename param to reflect groups
mutate(param = unlist(strsplit(param_j, "[", fixed = TRUE))[1], # get new param
group_j = gsub("[^0-9]", "", param_j),
sampleArea = NA) # get group j
pooled <- read_csv("sbs_bayes/bayes_output/coda_quantile_pooled_normal_wara.csv")
pooled <- pooled %>%
mutate(group_j = as.integer(as.factor(site)),
param_j = NA) %>%
rename(sampleArea = site)
coda_quantile <- rbind(hier2, pooled)
coda_quantile <- coda_quantile %>% select(-sampleArea) %>%
left_join(., coda_quantile, by = c("sp", "group_j"))
coda_quantile <- rbind(hier2, pooled)
coda_quantile <- coda_quantile %>% select(-sampleArea) %>%
left_join(., groups_df, by = c("sp", "group_j"))
names(coda_quantile)
coda_quantile <- coda_quantile %>% rename(tidalHeight = sample_area_tidal_ht)
ggDat %>%
ggplot(aes(tidalHeight, X50., shape = species, color = era)) +
geom_point(alpha = 0.5, size = 2) +
geom_errorbar(aes(ymax = X97.5.,
ymin = X2.5.), width = 0.1, alpha = 0.5) +
labs(x = "Tidal height (m)", y = "Size (mm)") +
theme(strip.background = element_blank()) +
theme(legend.justification=c(1, 1), legend.position=c(0.9, 1)) +
theme(legend.box = "horizontal") +
theme(legend.box.just = "top")
coda_quantile %>%
ggplot(aes(tidalHeight, X50., shape = species, color = era)) +
geom_point(alpha = 0.5, size = 2) +
geom_errorbar(aes(ymax = X97.5.,
ymin = X2.5.), width = 0.1, alpha = 0.5) +
labs(x = "Tidal height (m)", y = "Size (mm)") +
theme(strip.background = element_blank()) +
theme(legend.justification=c(1, 1), legend.position=c(0.9, 1)) +
theme(legend.box = "horizontal") +
theme(legend.box.just = "top")
wara_groups <- waraDF %>% distinct(sp, species, sampleArea, sample_area_tidal_ht) %>%
mutate(group_j = as.integer(as.factor(sampleArea)))
childs_groups <- childsDF %>% distinct(sp, species, sampleArea, sample_area_tidal_ht) %>%
mutate(group_j = as.integer(as.factor(sampleArea)))
hex_groups <- hexDF %>% distinct(sp, species, sampleArea, sample_area_tidal_ht) %>%
mutate(group_j = as.integer(as.factor(sampleArea)))
groups_df <- rbind(wara_groups, childs_groups, hex_groups) %>%
mutate(group_j = as.character(group_j))
hier2 <- read_csv("sbs_bayes/bayes_output/coda_quantile_hier2_normal.csv")
hier2 <- hier2 %>% rename(param_j = param) %>% # rename param to reflect groups
mutate(param = unlist(strsplit(param_j, "[", fixed = TRUE))[1], # get new param
group_j = gsub("[^0-9]", "", param_j),
sampleArea = NA) # get group j
pooled <- read_csv("sbs_bayes/bayes_output/coda_quantile_pooled_normal_wara.csv")
pooled <- pooled %>%
mutate(group_j = as.integer(as.factor(site)),
param_j = NA) %>%
rename(sampleArea = site)
coda_quantile <- rbind(hier2, pooled)
coda_quantile <- coda_quantile %>% select(-sampleArea) %>%
left_join(., groups_df, by = c("sp", "group_j"))
names(coda_quantile)
coda_quantile <- coda_quantile %>% rename(tidalHeight = sample_area_tidal_ht)
coda_quantile %>%
ggplot(aes(tidalHeight, X50., shape = species, color = era)) +
geom_point(alpha = 0.5, size = 2) +
geom_errorbar(aes(ymax = X97.5.,
ymin = X2.5.), width = 0.1, alpha = 0.5) +
labs(x = "Tidal height (m)", y = "Size (mm)") +
theme(strip.background = element_blank()) +
theme(legend.justification=c(1, 1), legend.position=c(0.9, 1)) +
theme(legend.box = "horizontal") +
theme(legend.box.just = "top")
coda_quantile %>%
ggplot(aes(tidalHeight, X50., shape = species)) +
geom_point(alpha = 0.5, size = 2) +
geom_errorbar(aes(ymax = X97.5.,
ymin = X2.5.), width = 0.1, alpha = 0.5) +
labs(x = "Tidal height (m)", y = "Size (mm)") +
theme(strip.background = element_blank()) +
theme(legend.justification=c(1, 1), legend.position=c(0.9, 1)) +
theme(legend.box = "horizontal") +
theme(legend.box.just = "top")
coda_quantile_groups <- coda_quantile %>% filter(!is.na(tidalHeight))
coda_quantile %>%
ggplot(aes(tidalHeight, X50., shape = species)) +
geom_point(alpha = 0.5, size = 2) +
geom_errorbar(aes(ymax = X97.5.,
ymin = X2.5.), width = 0.1, alpha = 0.5) +
labs(x = "Tidal height (m)", y = "Size (mm)") +
theme(strip.background = element_blank()) +
theme(legend.justification=c(1, 1), legend.position=c(0.9, 1)) +
theme(legend.box = "horizontal") +
theme(legend.box.just = "top") +
guides(color = guide_legend(title.position = "top", title.hjust = 0.5)) +
scale_color_manual(values = c("darkgray", "black")) +
guides(shape = guide_legend(title = "SPECIES",
title.position = "top",
title.hjust = 0,
title.theme = element_text(size = 8, face = "bold", angle = 0),
label.theme = element_text(face = "italic", angle = 0, size = 6),
direction = "vertical")) +
guides(color = guide_legend(title = "ERA",
title.position = "top",
title.hjust = 0,
title.theme = element_text(size = 8, face = "bold", angle = 0),
label.theme = element_text(angle = 0, size = 6),
direction = "vertical"))
coda_quantile_groups %>%
ggplot(aes(tidalHeight, X50., shape = species)) +
geom_point(alpha = 0.5, size = 2) +
geom_errorbar(aes(ymax = X97.5.,
ymin = X2.5.), width = 0.1, alpha = 0.5) +
labs(x = "Tidal height (m)", y = "Size (mm)") +
theme(strip.background = element_blank()) +
theme(legend.justification=c(1, 1), legend.position=c(0.9, 1)) +
theme(legend.box = "horizontal") +
theme(legend.box.just = "top") +
guides(color = guide_legend(title.position = "top", title.hjust = 0.5)) +
scale_color_manual(values = c("darkgray", "black")) +
guides(shape = guide_legend(title = "SPECIES",
title.position = "top",
title.hjust = 0,
title.theme = element_text(size = 8, face = "bold", angle = 0),
label.theme = element_text(face = "italic", angle = 0, size = 6),
direction = "vertical")) +
guides(color = guide_legend(title = "ERA",
title.position = "top",
title.hjust = 0,
title.theme = element_text(size = 8, face = "bold", angle = 0),
label.theme = element_text(angle = 0, size = 6),
direction = "vertical"))
View(coda_quantile_groups)
coda_quantile_beta <- coda_quantile %>% filter(!is.na(tidalHeight) & param == "beta")
coda_quantile_beta %>%
ggplot(aes(tidalHeight, X50., shape = species)) +
geom_point(alpha = 0.5, size = 2) +
geom_errorbar(aes(ymax = X97.5.,
ymin = X2.5.), width = 0.1, alpha = 0.5) +
labs(x = "Tidal height (m)", y = "Size (mm)") +
theme(strip.background = element_blank()) +
theme(legend.justification=c(1, 1), legend.position=c(0.9, 1)) +
theme(legend.box = "horizontal") +
theme(legend.box.just = "top") +
guides(color = guide_legend(title.position = "top", title.hjust = 0.5)) +
scale_color_manual(values = c("darkgray", "black")) +
guides(shape = guide_legend(title = "SPECIES",
title.position = "top",
title.hjust = 0,
title.theme = element_text(size = 8, face = "bold", angle = 0),
label.theme = element_text(face = "italic", angle = 0, size = 6),
direction = "vertical")) +
guides(color = guide_legend(title = "ERA",
title.position = "top",
title.hjust = 0,
title.theme = element_text(size = 8, face = "bold", angle = 0),
label.theme = element_text(angle = 0, size = 6),
direction = "vertical"))
View(coda_quantile_beta)
wara_groups
childs_groups
hier2
hier2 <- read_csv("sbs_bayes/bayes_output/coda_quantile_hier2_normal.csv")
hier2 <- hier2 %>% rename(param_j = param) %>% # rename param to reflect groups
mutate(param = unlist(strsplit(param_j, "[", fixed = TRUE)), # get new param
group_j = gsub("[^0-9]", "", param_j),
sampleArea = NA) # get group j
hier2
hier2 <- hier2 %>% rename(param_j = param) %>% # rename param to reflect groups
mutate(param = unlist(strsplit(param_j, "[", fixed = TRUE))[1], # get new param
group_j = gsub("[^0-9]", "", param_j),
sampleArea = NA) # get group j
hier2
hier2 <- read_csv("sbs_bayes/bayes_output/coda_quantile_hier2_normal.csv")
crap = hier2$param
crap
param = hier2$param
unlist(strsplit(param, "[", fixed = TRUE))[1]
unlist(strsplit(param, "[", fixed = TRUE))
unlist(strsplit(param, "[", fixed = TRUE))[1]
unlist(strsplit(param, "[", fixed = TRUE))[[1]]
unlist(strsplit(param, "[", fixed = TRUE))[[1]]
unlist(strsplit(param, "[", fixed = TRUE))
gsub("alpha", "", param)
gsub("^alpha", "", param)
gsub("[alpha]", "", param)
strsplit(param, "[", fixed = TRUE)
strsplit(param, "[", fixed = TRUE)[[1]]
strsplit(param, "[", fixed = TRUE)[1]
strsplit(param, "[", fixed = TRUE)[[1]]
strsplit(param, "[", fixed = TRUE)[[1]][1]
for(i in 1:length(param)){
strsplit(param[i], "[", fixed = TRUE)[[i]][1]
}
param[1]
i = 3
strsplit(param[i], "[", fixed = TRUE)[[i]][1]
strsplit(param[i], "[", fixed = TRUE)
for(i in 1:length(param)){
strsplit(param[i], "[", fixed = TRUE)[[1]][1]
}
i = 1
strsplit(param[i], "[", fixed = TRUE)[[i]][1]
i = 1
param_j <- strsplit(param[i], "[", fixed = TRUE)[[i]][1]
for(i in 2:length(param_j)){
strsplit(param_j[i], "[", fixed = TRUE)[[1]][1]
}
param_j
param = hier2$param
param[1]
i = 1
param_j <- strsplit(param[i], "[", fixed = TRUE)[[i]][1]
param_j = hier2$param
param_j
param_j = hier2$param
i = 1
param <- strsplit(param_j[i], "[", fixed = TRUE)[[i]][1]
for(i in 2:length(param_j)){
param.i <- strsplit(param_j[i], "[", fixed = TRUE)[[1]][1]
param <- c(param, param.i)
}
param
hier2 <- read_csv("sbs_bayes/bayes_output/coda_quantile_hier2_normal.csv")
param_j = hier2$param
i = 1
param <- strsplit(param_j[i], "[", fixed = TRUE)[[i]][1]
for(i in 2:length(param_j)){
param.i <- strsplit(param_j[i], "[", fixed = TRUE)[[1]][1]
param <- c(param, param.i)
}
param
hier2 <- hier2 %>% rename(param_j = param) %>% # rename param to reflect groups
mutate(param = param, # get new param
group_j = gsub("[^0-9]", "", param_j),
sampleArea = NA) # get group j
View(hier2)
pooled <- read_csv("sbs_bayes/bayes_output/coda_quantile_pooled_normal_wara.csv")
pooled <- pooled %>%
mutate(group_j = as.integer(as.factor(site)),
param_j = NA) %>%
rename(sampleArea = site)
coda_quantile <- rbind(hier2, pooled)
coda_quantile <- coda_quantile %>% select(-sampleArea) %>%
left_join(., groups_df, by = c("sp", "group_j"))
names(coda_quantile)
coda_quantile <- coda_quantile %>% rename(tidalHeight = sample_area_tidal_ht)
coda_quantile_beta <- coda_quantile %>% filter(!is.na(tidalHeight) & param == "beta")
coda_quantile_beta %>%
ggplot(aes(tidalHeight, X50., shape = species)) +
geom_point(alpha = 0.5, size = 2) +
geom_errorbar(aes(ymax = X97.5.,
ymin = X2.5.), width = 0.1, alpha = 0.5) +
labs(x = "Tidal height (m)", y = "Size (mm)") +
theme(strip.background = element_blank()) +
theme(legend.justification=c(1, 1), legend.position=c(0.9, 1)) +
theme(legend.box = "horizontal") +
theme(legend.box.just = "top") +
guides(color = guide_legend(title.position = "top", title.hjust = 0.5)) +
scale_color_manual(values = c("darkgray", "black")) +
guides(shape = guide_legend(title = "SPECIES",
title.position = "top",
title.hjust = 0,
title.theme = element_text(size = 8, face = "bold", angle = 0),
label.theme = element_text(face = "italic", angle = 0, size = 6),
direction = "vertical")) +
guides(color = guide_legend(title = "ERA",
title.position = "top",
title.hjust = 0,
title.theme = element_text(size = 8, face = "bold", angle = 0),
label.theme = element_text(angle = 0, size = 6),
direction = "vertical"))
coda_quantile_beta %>%
ggplot(aes(tidalHeight, X50., shape = species)) +
geom_point(alpha = 0.5, size = 2) +
geom_errorbar(aes(ymax = X97.5.,
ymin = X2.5.), width = 0.1, alpha = 0.5) +
labs(x = "Tidal height (m)", y = "Size (mm)") +
theme(strip.background = element_blank()) +
theme(legend.justification=c(1, 1), legend.position=c(0.9, 1)) +
theme(legend.box = "horizontal") +
theme(legend.box.just = "top") +
guides(color = guide_legend(title.position = "top", title.hjust = 0.5)) +
scale_color_manual(values = c("darkgray", "black")) +
guides(shape = guide_legend(title = "SPECIES",
title.position = "top",
title.hjust = 0,
title.theme = element_text(size = 8, face = "bold", angle = 0),
label.theme = element_text(face = "italic", angle = 0, size = 6),
direction = "vertical")) +
guides(color = guide_legend(title = "ERA",
title.position = "top",
title.hjust = 0,
title.theme = element_text(size = 8, face = "bold", angle = 0),
label.theme = element_text(angle = 0, size = 6),
direction = "vertical")) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray")
datJ %>%
ggplot(aes(sample_area_tidal_ht, size1mm)) +
geom_jitter() +
facet_wrap(~ species)
datJ %>%
ggplot(aes(sample_area_tidal_ht, size1mm, color = era)) +
geom_jitter() +
facet_wrap(~ species)
datJ %>%
ggplot(aes(sample_area_tidal_ht, size1mm, color = era)) +
geom_jitter(alpha = 0.25) +
facet_wrap(~ species)
coda_quantile_beta %>%
ggplot(aes(tidalHeight, X50., shape = species)) +
geom_point(alpha = 0.5, size = 2) +
geom_errorbar(aes(ymax = X97.5.,
ymin = X2.5.), width = 0.1, alpha = 0.5) +
labs(x = "Tidal height (m)", y = "Size (mm)")
coda_quantile_beta %>%
ggplot(aes(tidalHeight, X50., shape = species)) +
geom_point(alpha = 0.5, size = 2) +
geom_errorbar(aes(ymax = X97.5.,
ymin = X2.5.), width = 0.1, alpha = 0.5) +
labs(x = "Tidal height (m)", y = "Size (mm)") +
theme(strip.background = element_blank()) +
theme(legend.justification=c(1, 1), legend.position=c(0.9, 1)) +
theme(legend.box = "horizontal") +
theme(legend.box.just = "top")
coda_quantile_beta %>%
ggplot(aes(tidalHeight, X50., shape = species)) +
geom_point(alpha = 0.5, size = 2) +
geom_errorbar(aes(ymax = X97.5.,
ymin = X2.5.), width = 0.1, alpha = 0.5) +
labs(x = "Tidal height (m)", y = "Size (mm)") +
theme(strip.background = element_blank()) +
theme(legend.justification=c(1, 1), legend.position=c(0.9, 1)) +
theme(legend.box = "horizontal") +
theme(legend.box.just = "top") +
guides(color = guide_legend(title.position = "top", title.hjust = 0.5)) +
guides(shape = guide_legend(title = "SPECIES",
title.position = "top",
title.hjust = 0,
title.theme = element_text(size = 8, face = "bold", angle = 0),
label.theme = element_text(face = "italic", angle = 0, size = 6),
direction = "vertical")) +
guides(color = guide_legend(title = "ERA",
title.position = "top",
title.hjust = 0,
title.theme = element_text(size = 8, face = "bold", angle = 0),
label.theme = element_text(angle = 0, size = 6),
direction = "vertical")) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray")
