p2 <- ggplot(lit, aes(max_tempC, fill = nest2)) +
geom_density(alpha = 0.5) +
xlab(expression(paste("Daily maximum temperature (", degree, "C)"))) +
ylab("Probability density") +
scale_fill_manual(breaks = c("Crack", "Face"),
values = c("blue", "red")) +
theme(legend.position = "none") +
facet_wrap(~ zone, nrow = 4) +
ULClabel + labs(title = "B")
p2
p3 <- ggplot(lit, aes(min_tempC, fill = nest2)) +
geom_density(alpha = 0.5) +
xlab(expression(paste("Daily minimum temperature (", degree, "C)"))) +
ylab("Probability density") +
scale_fill_manual(breaks = c("Crack", "Face"),
values = c("blue", "red")) +
theme(legend.position = "none") +
facet_wrap(~ zone, nrow = 4) +
ULClabel + labs(title = "C")
p3
# save as pdf
pdf("./figs/childs_temp.pdf", width = 7, height = 7)
multiplot(p1, p2, p3, cols = 3)
dev.off()
p1 <- ggplot(lit, aes(mean_tempC, fill = nest2)) +
geom_density(alpha = 0.5) +
xlab(expression(paste("Daily mean temperature (", degree, "C)"))) +
ylab("Probability density") +
scale_fill_manual(breaks = c("Crack", "Face"),
values = c("blue", "red")) +
theme(legend.position = "none") +
facet_wrap(~ zone, nrow = 4) +
ULClabel + labs(title = "A") +
scale_x_continuous(limits = c(10, 45))
p1
p2 <- ggplot(lit, aes(max_tempC, fill = nest2)) +
geom_density(alpha = 0.5) +
xlab(expression(paste("Daily maximum temperature (", degree, "C)"))) +
ylab("Probability density") +
scale_fill_manual(breaks = c("Crack", "Face"),
values = c("blue", "red")) +
theme(legend.position = "none") +
facet_wrap(~ zone, nrow = 4) +
ULClabel + labs(title = "B") +
scale_x_continuous(limits = c(10, 45))
p2
p3 <- ggplot(lit, aes(min_tempC, fill = nest2)) +
geom_density(alpha = 0.5) +
xlab(expression(paste("Daily minimum temperature (", degree, "C)"))) +
ylab("Probability density") +
scale_fill_manual(breaks = c("Crack", "Face"),
values = c("blue", "red")) +
theme(legend.position = "none") +
facet_wrap(~ zone, nrow = 4) +
ULClabel + labs(title = "C") +
scale_x_continuous(limits = c(10, 45))
p3
# save as pdf
pdf("./figs/childs_temp.pdf", width = 7, height = 7)
multiplot(p1, p2, p3, cols = 3)
dev.off()
hms_raw <- read.table("http://mlo.stanford.edu/HMS-SST.txt")
names(hms_raw)
head(hms_raw)
hms_corr <- read.table("./data/HMStemp.corrected.txt",
skip = 13, header = TRUE, na.strings = "NaN")
head(hms_corr)
head(hms_raw)
hms_corr <- read.table("./data/HMS-SST.txt",
skip = 0, header = TRUE, na.strings = "NaN")
head(hms_raw)
hms_raw <- read.table("./data/HMS-SST.txt",
skip = 0, header = TRUE, na.strings = "NaN")
# Get corrected temperature data (up to 2004)
hms_corr <- read.table("./data/HMStemp.corrected.txt",
skip = 13, header = TRUE, na.strings = "NaN")
head(hms_raw)
head(hms_corr)
str(hms_raw)
hms_raw$dateR <- as.Date(hms_raw$DATE)
?as.Date
hms_raw$dateR <- as.Date(hms_raw$DATE, "%d/%m/%Y")
str(hms_raw)
hms_raw$dateR <- as.Date(strptime(hms_raw$DATE, "%d/%m/%Y"))
str(hms_raw)
hms_raw$dateR <- as.Date(as.string(hms_raw$DATE), "%d/%m/%Y")
hms_raw <- read.table("./data/HMS-SST.txt",
skip = 0, header = TRUE, na.strings = "NaN",
stringsAsFactors = FALSE)
str(hms_raw)
hms_raw$dateR <- as.Date(hms_raw$DATE, "%d/%m/%Y")
str(hms_raw)
unique(hms_raw$dateR)
?ISOdate
head(hms_corr)
hms_corr$dateR <- with(hms_corr, ISOdate(year, month, day)
hms_corr$dateR <- with(hms_corr, ISOdate(year, month, day))
###########################
hms_corr$dateR <- with(hms_corr, ISOdate(year, month, day))
str(hms_corr
str(hms_corr)
str(hms_corr)
hms_corr$dateR <- as.Date(with(hms_corr, ISOdate(year, month, day)))
str(hms_corr)
str(hms_corr)
str(hms_raw)
dat1 <- hms_raw %>% select(dateR, SST)
library(dplyr)
dat1 <- hms_raw %>% select(dateR, SST)
head(hms_corr)
dat2 <- hms_corr %>% select(dateR, new)
head(dat1, dat2)
head(dat2)
dat2 <- hms_corr %>% select(dateR, new) %>% rename(SST = new)
head(dat2)
max(dat2$dateR)
max(dat1$dateR)
str(dat1$dateR)
dat3 <- dat2 %>% filter(dateR > "2004-12-31")
dat3 <- dat1 %>% filter(dateR > "2004-12-31")
head(dat3)
head(hms_raw)
head(hms_corr)
head(hms_raw)
hms_raw$dateR <- as.Date(hms_raw$DATE, "%m/%d/%Y")
str(hms_raw)
hms_corr$dateR <- as.Date(with(hms_corr, ISOdate(year, month, day)))
str(hms_corr)
dat1 <- hms_raw %>% select(dateR, SST)
dat2 <- hms_corr %>% select(dateR, new) %>% rename(SST = new)
# Get uncorrected data for 2005 on
str(dat1$dateR)
dat3 <- dat1 %>% filter(dateR > "2004-12-31")
head(dat3)
master <- rbind(dat2, dat3)
head(master)
master$month <- month(dateR)
master$month <- strftime(master$dateR, "%m")
head(master)
master$year <- strftime(master$dateR, "%Y")
head(master)
str(master)
hms_monthly <- master %>%
group_by(month, year) %>%
summarise(mean_tempC = mean(SST, na.rm=T),
max_tempC = max(SST, na.rm=T),
min_tempC = min(SST, na.rm=T)) %>%
ungroup()
master$mo_yr <- with(master, paste(month, "_", year))
str(master)
master$mo_yr <- with(master, paste(month, year, sep = "_"))
str(master)
hms_monthly <- master %>%
group_by(mo_yr, month, year) %>%
summarise(mean_tempC = mean(SST, na.rm=T),
max_tempC = max(SST, na.rm=T),
min_tempC = min(SST, na.rm=T)) %>%
ungroup()
warnings(50)
str(master)
master$SST <- as.numeric(master$SST)
str(master)
hms_monthly <- master %>%
group_by(mo_yr, month, year) %>%
summarise(mean_tempC = mean(SST, na.rm=T),
max_tempC = max(SST, na.rm=T),
min_tempC = min(SST, na.rm=T)) %>%
ungroup()
31393/12
35349/30
head(hms_monthly)
?as.Date
hms_monthly$dateR <- with(hms_monthly,
as.Date(paste(year, month, 15, sep = "-"))
hms_monthly$dateR <- with(hms_monthly,
as.Date(paste(year, month, 15, sep = "-")))
write.csv(iButton_daily, "./output/temp_daily_iButton.csv")
hms_monthly$dateR <- with(hms_monthly,
as.Date(paste(year, month, 15, sep = "-")))
head(hms_monthly)
str(hms_monthly)
write.csv(hms_monthly, "./output/hms_temp_monthly.csv")
ggplot(data = hms_monthly, aes(dateR, mean_tempC)) +
geom_line()
library(ggplot2)
theme_set(theme_classic(base_size = 8))
ggplot(data = hms_monthly, aes(dateR, mean_tempC)) +
geom_line()
library(tidyr)
head(hms_monthly)
hms_long <- gather(hms_monthly, key = type, value = tempC,
mean_tempC:min_tempC)
head(hms_long)
hms_monthly <- master %>%
group_by(mo_yr, month, year) %>%
summarise(mean = mean(SST, na.rm=T),
maximum = max(SST, na.rm=T),
minimum = min(SST, na.rm=T)) %>%
ungroup()
str(hms_monthly)
hms_monthly$dateR <- with(hms_monthly,
as.Date(paste(year, month, 15, sep = "-")))
write.csv(hms_monthly, "./output/hms_temp_monthly.csv")
# convert wide to long
head(hms_monthly)
hms_long <- gather(hms_monthly, key = type, value = tempC,
hms_long <- gather(hms_monthly, key = type, value = tempC,
mean:minimum)
head(hms_long)
head(hms_monthly)
hms_long <- gather(hms_monthly, key = type, value = tempC,
mean:minimum)
head(hms_long)
unique(hms_long$type)
ggplot(data = hms_long, aes(dateR, mean_tempC)) +
geom_line(color = type)
unique(hms_long$type)
ggplot(data = hms_long, aes(dateR, tempC)) +
geom_line(color = type)
ggplot(data = hms_long, aes(dateR, tempC, color = type)) +
geom_line()
ggplot(data = hms_long, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type)
hms_yearly <- master %>%
group_by(year) %>%
summarise(mean = mean(SST, na.rm=T),
maximum = max(SST, na.rm=T),
minimum = min(SST, na.rm=T)) %>%
ungroup()
head(hms_yearly)
write.csv(hms_yearly, "./output/hms_temp_yearly.csv")
head(hms_yearly)
yearly_long <- gather(hms_yearly, key = type, value = tempC,
mean:minimum)
ggplot(data = yearly_long, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type)
ggplot(data = yearly_long, aes(year, tempC, color = type)) +
geom_line() + facet_wrap(~ type)
ggplot(data = yearly_long, aes(as.numeric(year),
tempC, color = type)) +
geom_line() + facet_wrap(~ type)
# Quick plots
ggplot(data = yearly_long, aes(as.numeric(year),
tempC, color = type)) +
geom_line()
yearly_long %>% filter(year > 1943 & year < 2015)
# Quick plots (1944 - 2014)
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(data = yearly_long,
aes(as.numeric(year), tempC, color = type)) +
geom_line()
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_line()
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_line() + geom_smooth(method = "lm")
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_point() + geom_smooth(method = "lm")
# Quick plots (1944 - 2014)
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm", color = "black")
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm")
# Quick plots (1944 - 2014)
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm") +
ggtitle("Hopkins Marine Station SST, 1944 - 2014")
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm") +
ggtitle("Hopkins Marine Station SST\n1944 - 2014")
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm") +
ggtitle("Hopkins Marine Station SST\n1944 - 2014") +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Year")
# Quick plots (1944 - 2014)
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm") +
ggtitle("Sea surface temperature\n1944 - 2014") +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Year")
# Quick plots (1944 - 2014)
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm") +
ggtitle("Sea Surface Temperature\n1944 - 2014") +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Year")
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm") +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Year")
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm") +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Year") +
theme(legend.position = "none")
# Quick plots (1944 - 2014)
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm", aes(color = NULL)) +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Year") +
theme(legend.position = "none")
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm", color = NULL) +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Year") +
theme(legend.position = "none")
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm") +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Year") +
theme(legend.position = "none")
ggsave("hms_sst_yearly.pdf", width = 3.5, height = 3.5)
ggsave("./figs/hms_sst_yearly.pdf", width = 3.5, height = 3.5)
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type,
shape = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm") +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Year") +
theme(legend.position = "none")
ggsave("./figs/hms_sst_yearly.pdf", width = 3.5, height = 3.5)
yearly_long %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(as.numeric(year), tempC, color = type,
shape = type)) +
geom_point() + geom_line() +
geom_smooth(method = "lm") +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.position = "none")
ggsave("./figs/hms_sst_yearly.pdf", width = 3.5, height = 3.5)
library(ggplot2)
theme_set(theme_classic(base_size = 8))
library(dplyr)
library(tidyr)
library(nlme)
# Set working directory to main project folder
setwd("~/github/sbs_analysis")
# Get uncorrected temperature data from MLO
# hms_raw <- read.table("http://mlo.stanford.edu/HMS-SST.txt",
#                       header = TRUE, na.strings = "NaN")
hms_raw <- read.table("./data/HMS-SST.txt",
skip = 0, header = TRUE, na.strings = "NaN",
stringsAsFactors = FALSE)
# Get corrected temperature data (up to 2004)
hms_corr <- read.table("./data/HMStemp.corrected.txt",
skip = 13, header = TRUE, na.strings = "NaN")
head(hms_raw)
head(hms_corr)
str(hms_raw)
hms_raw$dateR <- as.Date(hms_raw$DATE, "%m/%d/%Y")
hms_corr$dateR <- as.Date(with(hms_corr, ISOdate(year, month, day)))
str(hms_corr)
dat1 <- hms_raw %>% select(dateR, SST)
dat2 <- hms_corr %>% select(dateR, new) %>% rename(SST = new)
# Get uncorrected data for 2005 on
str(dat1$dateR)
dat3 <- dat1 %>% filter(dateR > "2004-12-31")
head(dat3)
# now combine corrected and uncorrected data
master <- rbind(dat2, dat3)
head(master)
# get month and year to calculate averages
master$month <- strftime(master$dateR, "%m")
master$year <- strftime(master$dateR, "%Y")
master$mo_yr <- with(master, paste(month, year, sep = "_"))
master$SST <- as.numeric(master$SST)
str(master)
# this value is suspicious
min(master$SST, na.rm = TRUE)
master %>% filter(SST < 8)
master2 <- master %>% filter(SST < 7.3)
master2
# Quick plot
head(master)
ggplot(data = master, aes(dateR, SST)) +
geom_line()
# Quick plot (1944 - 2014)
master %>% filter(year > 1943 & year < 2015) %>%
ggplot(aes(dateR, SST)) +
geom_point() + geom_line() +
geom_smooth(method = "lm") +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.position = "none")
hms_monthly <- master %>%
group_by(mo_yr, month, year) %>%
summarise(mean = mean(SST, na.rm=T),
maximum = max(SST, na.rm=T),
minimum = min(SST, na.rm=T)) %>%
ungroup()
str(hms_monthly)
hms_monthly$dateR <- with(hms_monthly,
as.Date(paste(year, month, 15, sep = "-")))
str(hms_monthly)
mod1 <- gls(mean ~ dateR,
data = hms_monthly,
correlation = corAR1())
summary(mod1)
mod2 <- gls(maximum ~ dateR,
data = hms_monthly,
correlation = corAR1())
summary(mod2)
mod3 <- gls(minimum ~ dateR,
data = hms_monthly,
correlation = corAR1())
summary(mod3)
# convert wide to long
head(hms_monthly)
hms_long <- gather(hms_monthly, key = type, value = tempC,
mean:minimum)
head(hms_long)
unique(hms_long$type)
# Quick plots
ggplot(data = hms_long, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type)
ggplot(data = hms_long, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type, nrow = 3)
ggplot(data = hms_long, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type, nrow = 3) +
theme(legend.position = "none")
ggplot(data = hms_long, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type, nrow = 3) +
theme(legend.position = "none") +
geom_smooth(method = "lm")
ggplot(data = hms_long, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type, nrow = 3) +
theme(legend.position = "none") +
geom_smooth(method = "lm", color = "black")
###########################
# Quick plots
ggplot(data = hms_long, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type, nrow = 3) +
theme(legend.position = "none") +
geom_smooth(method = "lm", color = "black") +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.title = element_blank())
subDat <- hms_monthly %>% filter(year > 1943 & year < 2015)
subDat <- hms_long %>% filter(year > 1943 & year < 2015)
ggplot(data = hms_long, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type, nrow = 3) +
theme(legend.position = "none") +
geom_smooth(method = "lm", color = "black") +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.title = element_blank())
# Quick plots
ggplot(data = subDat, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type, nrow = 3) +
theme(legend.position = "none") +
geom_smooth(method = "lm", color = "black") +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.title = element_blank())
# Quick plots
ggplot(data = subDat, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type, nrow = 1) +
theme(legend.position = "none") +
geom_smooth(method = "lm", color = "black") +
ggtitle("Annual Sea Surface Temperature\n1944 - 2014") +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.title = element_blank())
# Quick plots
ggplot(data = subDat, aes(dateR, tempC, color = type)) +
geom_line() + facet_wrap(~ type, nrow = 1) +
theme(legend.position = "none") +
geom_smooth(method = "lm", color = "black") +
ggtitle("Monthly Sea Surface Temperature\n1944 - 2014") +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Year") +
theme(legend.title = element_blank())
ggsave("./figs/hms_sst_monthly.pdf", width = 7, height = 3.5)
