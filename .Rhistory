mutate(upper = estimate + 1.96 * std.error,
lower = estimate - 1.96 * std.error,
spp = my_species,
model = my_model,
sampleArea = ifelse(my_model == "pooled",
unique(as.character(statDat$sampleArea)), NA))
## Select data
statDat <- waraDF %>% filter(sampleArea == "Wara.B")
## My species
my_species <- "CHFU"
## My model
my_model <- "pooled"
## My sample area
ifelse(my_model == "pooled",
my_sampleArea = unique(statDat$sampleArea),
my_sampleArea = NA)
## Run analysis
statDat <- truncate_data(statDat, era = "past", quant = my_quantile)
lm1 <- lm(size_log ~ era, data = statDat)
lm1_tidyfit <- tidy(lm1) %>%
mutate(upper = estimate + 1.96 * std.error,
lower = estimate - 1.96 * std.error,
spp = my_species,
model = my_model,
sampleArea = ifelse(my_model == "pooled",
unique(as.character(statDat$sampleArea)), NA))
lm1_tidyfit
lm1_tidyfit
tidyfits <- lm1_tidyfit
lm1_tidyfit
tidyfits
lm1_tidyfit
## Select data
statDat <- waraDF %>% filter(sampleArea == "Wara.D")
## My species
my_species <- "CHFU"
## My model
my_model <- "pooled"
## My sample area
ifelse(my_model == "pooled",
my_sampleArea = unique(statDat$sampleArea),
my_sampleArea = NA)
## Run analysis
statDat <- truncate_data(statDat, era = "past", quant = my_quantile)
lm1 <- lm(size_log ~ era, data = statDat)
lm1_tidyfit <- tidy(lm1) %>%
mutate(upper = estimate + 1.96 * std.error,
lower = estimate - 1.96 * std.error,
spp = my_species,
model = my_model,
sampleArea = ifelse(my_model == "pooled",
unique(as.character(statDat$sampleArea)), NA))
lm1_tidyfit
tidyfits <- rbind(tidyfits, lm1_tidyfit)
tidyfits
## Select data
statDat <- hexDF
## My species
my_species <- "LODI"
## My model
my_model <- "hierarchical"
## Select data
statDat <- hexDF
## My species
my_species <- "LODI"
## My model
my_model <- "hierarchical"
## Run analysis
statDat <- truncate_data(statDat, era = "past", quant = my_quantile)
##' Hierarchical model
lmer1 <- lmer(size_log ~ era + (era | sampleArea), data = statDat)
tidy(lmer1)
lmer1_tidyfit <- tidy(lmer1)
lmer1_tidyfit <- tidy(lmer1) %>%
mutate(upper = estimate + 1.96 * std.error,
lower = estimate - 1.96 * std.error,
spp = my_species,
model = my_model,
sampleArea = ifelse(my_model == "pooled",
unique(as.character(statDat$sampleArea)), NA))
lmer1_tidyfit
names(tidyfits)
names(lmer1_tidyfit)
lmer1_tidyfit <- tidy(lmer1) %>%
mutate(upper = estimate + 1.96 * std.error,
lower = estimate - 1.96 * std.error,
spp = my_species,
model = my_model,
sampleArea = ifelse(my_model == "pooled",
unique(as.character(statDat$sampleArea)), NA),
p.value = NA) %>%
select(-group)
tidyfits <- rbind(tidyfits, lmer1_tidyfit)
tidyfits
## Select data
statDat <- childsDF
## My species
my_species <- "LIKE"
## My model
my_model <- "hierarchical"
## Run analysis
statDat <- truncate_data(statDat, era = "past", quant = my_quantile)
##' Hierarchical model
lmer1 <- lmer(size_log ~ era + (era | sampleArea), data = statDat)
lmer1_tidyfit <- tidy(lmer1) %>%
mutate(upper = estimate + 1.96 * std.error,
lower = estimate - 1.96 * std.error,
spp = my_species,
model = my_model,
sampleArea = ifelse(my_model == "pooled",
unique(as.character(statDat$sampleArea)), NA),
p.value = NA) %>%
select(-group)
lmer1_tidyfit
tidyfits <- rbind(tidyfits, lmer1_tidyfit)
##### PLOT #####
tidyfits
tidyfits
names(tidyfits)
##### PLOT #####
names(tidyfits)
tidyfits %>%
filter(term == "erapresent") %>%
filter(spp == "CHFU") %>%
ggplot(aes(sampleArea, estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper))
tidyfits %>%
filter(term == "erapresent") %>%
filter(spp == "CHFU") %>%
ggplot(aes(sampleArea, estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper)) +
geom_hline(yintercept = 0, linetype "dashed", color = 'gray')
tidyfits %>%
filter(term == "erapresent") %>%
filter(spp == "CHFU") %>%
ggplot(aes(sampleArea, estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper)) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray')
p1 <- tidyfits %>%
filter(term == "erapresent") %>%
filter(spp == "CHFU") %>%
ggplot(aes(sampleArea, estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper)) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(xlab = "",
ylab = "Proportional change in size",
title = "Chlorostoma funebralis")
p1 <- tidyfits %>%
filter(term == "erapresent") %>%
filter(spp == "CHFU") %>%
ggplot(aes(sampleArea, estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper)) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(xlab = "",
ylab = "Proportional change in size",
title = "Chlorostoma funebralis")
p1
tidyfits
plot_dat <- tidyfits %>%
filter(term == "erapresent")
plot_dat
plot_dat <- tidyfits %>%
filter(term == "erapresent") %>%
mutate(sample_order = c(1,2,3,4))
p1 <- plot_dat %>%
ggplot(aes(sample_order, estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper)) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(xlab = "",
ylab = "Proportional change in size")
p1
p1 <- plot_dat %>%
ggplot(aes(sample_order, estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(xlab = "",
ylab = "Proportional change in size")
p1
plot_dat <- tidyfits %>%
filter(term == "erapresent") %>%
mutate(sample_order = c(1.75, 2.25, 3, 4))
p1 <- plot_dat %>%
ggplot(aes(sample_order, estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(xlab = "",
ylab = "Proportional change in size")
p1
p1 <- plot_dat %>%
ggplot(aes(sample_order, estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(xlab = "",
ylab = "Proportional change in size")
p1
p1 <- plot_dat %>%
ggplot(aes(sample_order, estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(xlab = "X",
ylab = "Proportional change in size")
p1
p1 <- plot_dat %>%
ggplot(aes(sample_order, estimate, shape = spp)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(xlab = "",
ylab = "Proportional change in size")
p1 <- plot_dat %>%
ggplot(aes(sample_order, estimate, shape = spp)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(xlab = "",
ylab = "Proportional change in size")
p1
plot_dat <- tidyfits %>%
filter(term == "erapresent") %>%
mutate(sample_order = c(1.9, 2.1, 3, 4))
p1 <- plot_dat %>%
ggplot(aes(sample_order, estimate, shape = spp)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(xlab = "",
ylab = "Proportional change in size")
p1
p1 <- plot_dat %>%
ggplot(aes(sample_order, estimate, shape = spp)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(xlab = "",
ylab = "Proportional change in size") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
p1
plot_dat %>%
ggplot(aes(sample_order, estimate, shape = spp)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(xlab = "",
ylab = "Proportional change in size") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
?labs
plot_dat %>%
ggplot(aes(sample_order, estimate, shape = spp)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(x = "",
y = "Proportional change in size") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
p1
plot_dat %>%
ggplot(aes(sample_order, estimate, shape = spp)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(x = "",
y = "Proportional change in size") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
ggsave("figs_ms/plot_size_change_lmer.pdf", height = 3.5, width = 3.5)
plot_dat %>%
ggplot(aes(sample_order, estimate, shape = spp, color = model)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(x = "",
y = "Proportional change in size") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
plot_dat <- tidyfits %>%
filter(term == "erapresent") %>%
mutate(sample_order = c(1.9, 2.1, 3, 4),
sample_size = c(1, 1, 8, 4))
plot_dat %>%
ggplot(aes(sample_order, estimate, shape = spp, color = model,
size = sample_size)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(x = "",
y = "Proportional change in size") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
plot_dat %>%
ggplot(aes(sample_order, estimate, shape = spp, color = model,
size = sample_size)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1,
guides = F) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(x = "",
y = "Proportional change in size") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
plot_dat %>%
ggplot(aes(sample_order, estimate, shape = spp, color = model,
size = sample_size)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1,
guides(size = F)) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(x = "",
y = "Proportional change in size") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
plot_dat %>%
ggplot(aes(sample_order, estimate, shape = spp, color = model,
size = sample_size)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1, show.legend = F) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(x = "",
y = "Proportional change in size") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
plot_dat %>%
ggplot(aes(sample_order, estimate, shape = spp, color = model,
size = sample_size)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(x = "",
y = "Proportional change in size") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
plot_dat %>%
ggplot(aes(sample_order, estimate, shape = spp, color = model,
size = sample_size)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper, size = NULL), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(x = "",
y = "Proportional change in size") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
plot_dat %>%
ggplot(aes(sample_order, estimate, color = model,
size = sample_size)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper, size = NULL), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(x = "",
y = "Proportional change in size") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
ggsave("figs_ms/plot_size_change_lmer.pdf", height = 3.5, width = 3.5)
theme_set(theme_bw() +
theme(panel.grid = element_blank()))
plot_dat %>%
ggplot(aes(sample_order, estimate, color = model,
size = sample_size)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper, size = NULL), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(x = "",
y = "Proportional change in size") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
ggsave("figs_ms/plot_size_change_lmer.pdf", height = 3.5, width = 3.5)
plot_dat %>%
ggplot(aes(sample_order, estimate, color = model,
size = sample_size)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper, size = NULL), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(x = "",
y = "Proportional change in size") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
coord_flip()
plot_dat %>%
ggplot(aes(sample_order, estimate, color = model,
size = sample_size)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper, size = NULL), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(x = "",
y = "Proportional change in size") +
theme(legend.position = "none") +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
plot_dat %>%
ggplot(aes(sample_order, estimate, color = model,
size = sample_size)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper, size = NULL), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(x = "",
y = "Proportional change in size") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
plot_dat %>%
ggplot(aes(sample_order, estimate, color = model,
size = sample_size)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper, size = NULL), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(x = "",
y = "Proportional change in size") +
theme(legend.position = "none") +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
ggsave("figs_ms/plot_size_change_lmer.pdf", height = 3.5, width = 3.5)
plot_dat %>%
ggplot(aes(sample_order, estimate, color = model,
size = sample_size)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper, size = NULL), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(x = "",
y = "Proportional change in size") +
theme(legend.position = "none") +
coord_flip() +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggsave("figs_ms/plot_size_change_lmer.pdf", height = 3.5, width = 3.5)
plot_dat %>%
ggplot(aes(sample_order, estimate, color = model,
size = sample_size)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper, size = NULL), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(x = "",
y = "Proportional change in size",
title = "Population-scale") +
theme(legend.position = "none") +
coord_flip() +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggsave("figs_ms/plot_size_change_lmer.pdf", height = 3.5, width = 3.5)
plot_dat %>%
ggplot(aes(sample_order, estimate, color = model,
size = sample_size)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper, size = NULL), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(x = "",
y = "Proportional change in size") +
theme(legend.position = "none") +
coord_flip() +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggsave("figs_ms/plot_size_change_lmer.pdf", height = 3.5, width = 3.5)
plot_dat %>%
ggplot(aes(sample_order, estimate, color = model,
size = sample_size)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper, size = NULL), width = 0.1) +
geom_hline(yintercept = 0, linetype = "dashed", color = 'gray') +
labs(x = "",
y = "Proportional change in size") +
theme(legend.position = "none") +
coord_flip() +
theme(#axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggsave("figs_ms/plot_size_change_lmer.pdf", height = 3.5, width = 3.5)
