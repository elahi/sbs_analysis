element_text(angle = 0, size = 5, face =  "italic"))) +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95)) +
theme(legend.title = element_blank())
panelA
panelA <- tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 8, y = 38.5, label = "A") +
guides(shape =
guide_legend(title = NULL, keywidth=0.1,
keyheight=0.1,
default.unit="inch",
label.theme =
element_text(angle = 0, size = 8, face =  "italic"))) +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95)) +
theme(legend.title = element_blank())
panelA
panelA <- tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 8, y = 38.5, label = "A") +
guides(shape =
guide_legend(title = NULL, keywidth = 0.2,
keyheight = 0.2,
default.unit="inch",
label.theme =
element_text(angle = 0, size = 8, face =  "italic"))) +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95)) +
theme(legend.title = element_blank())
panelA
png("figs/elahi_temp_body_rock_3panel.png", width = 3.5, height = 7, units = "in", res = 300)
multiplot(panelA, panelB, panelC, layout = layout1)
dev.off()
k temps
panelA <- tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 8, y = 38.5, label = "A") +
guides(shape =
guide_legend(title = NULL, keywidth = 0.1,
keyheight = 0.1,
default.unit="inch",
label.theme =
element_text(angle = 0, size = 8, face =  "italic"))) +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95)) +
theme(legend.title = element_blank())
panelA
png("figs/elahi_temp_body_rock_3panel.png", width = 3.5, height = 7, units = "in", res = 300)
multiplot(panelA, panelB, panelC, layout = layout1)
dev.off()
panelA <- tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
guides(shape =
guide_legend(title = NULL, keywidth = 0.1,
keyheight = 0.1,
default.unit="inch",
label.theme =
element_text(angle = 0, size = 8, face =  "italic"))) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 8, y = 38.5, label = "A") +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95)) +
theme(legend.title = element_blank())
panelA
png("figs/elahi_temp_body_rock_3panel.png", width = 3.5, height = 7, units = "in", res = 300)
multiplot(panelA, panelB, panelC, layout = layout1)
dev.off()
panelA <- tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
guides(shape =
guide_legend(title = NULL, keywidth = 0.1,
keyheight = 0.1,
default.unit="inch",
label.theme =
element_text(angle = 0, size = 8, face =  "italic"))) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 8, y = 38.5, label = "A") +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95)) +
theme(legend.title = element_blank()) +
theme(legend.background = element_blank())
panelA
png("figs/elahi_temp_body_rock_3panel.png", width = 3.5, height = 7, units = "in", res = 300)
multiplot(panelA, panelB, panelC, layout = layout1)
dev.off()
panelA <- tempDF %>%
filter(dataset == "Empirical") %>%
ggplot(aes(tidalHT, mean, shape = species, color = metric)) +
guides(shape =
guide_legend(title = "SAMPLING AREA", title.position = "top",
title.hjust = 0.5,
title.theme =
element_text(size = 8, face = "bold", angle = 0),
keywidth = 0.1,
keyheight = 0.1,
default.unit="inch",
label.theme =
element_text(angle = 0, size = 8, face =  "italic"))) +
geom_point(alpha = 0.8, size = 2) +
geom_line(aes(group = interaction(species, metric), color = NULL),
alpha = 1, size = 0.3) +
geom_errorbar(aes(ymax = mean + CI,
ymin = mean - CI), width = 0.2, alpha = 0.8) +
geom_point(data = subset(tempDF, microhabitat == "crevice" & metric == "maximum"),
aes(tidalHT, mean, shape = species, color = NULL),
alpha = 0.6, size = 2) +
ylab(expression(paste("Temperature (", degree, "C)"))) +
xlab("Tidal height (m)") +
theme(strip.background = element_blank()) +
guides(color = FALSE) +
facet_wrap(~ dataset, ncol = 1, scales = "free_y",
labeller = labeller(dataset = dataset_description)) +
annotate(geom = "text", x = 8, y = 38.5, label = "A") +
theme(legend.position = c(0.05, 0.95), legend.justification = c(0.05, 0.95)) +
theme(legend.title = element_blank()) +
theme(legend.background = element_blank())
panelA
layout1 <- matrix(c(1, 1, 2, 2, 3), nrow = 5, byrow = TRUE)
png("figs/elahi_temp_body_rock_3panel.png", width = 3.5, height = 7, units = "in", res = 300)
multiplot(panelA, panelB, panelC, layout = layout1)
dev.off()
source("05_summarise_size_density.R")
glimpse(datMeans4)
library(nlme)
total_snails
whl
total_snails
View(total_snails)
whl %>%
ggplot(aes(length_mm, snail_count, color = site)) +
geom_line()
wara_histo
whl <- wara_histo %>%
select(length_mm, Wara.B, Wara.D) %>%
gather(key = site, value = snail_count, Wara.B:Wara.D)
whl
total_snails <- whl %>% group_by(site) %>%
summarise(total_snails_m2 = sum(snail_count)) %>%
mutate(transect_length_m = c(14, 62.5),
transect_area = transect_length_m * 2,
transect_snail_count_total = total_snails_m2 * transect_area)
total_snails
total_snails
wara <- read_csv("data/Wara_1963_fig2_fig6.csv")
wara <- wara %>%
mutate(transect_interval = ifelse(area == "areaB", 1, 2.5),
snail_count = density_m2 * transect_interval * 2)
wara %>%
ggplot(aes(m_along_transect, density_m2, color = area)) +
#facet_wrap(~ area, scales = "free", nrow = 2) +
geom_line()
wara
View(wara)
total_snails
wara_area <- wara %>% group_by(area) %>%
summarise(start_m = min(m_along_transect),
end_m = max(m_along_transect)) %>%
mutate(transect_dist = end_m - start_m,
area_m2 = transect_dist * 2)
wara_area2 <- inner_join(wara_area, wara_mean, by = "area")
wara_area2 <- wara_area2 %>%
mutate(snail_number = area_m2 * dens_mean)
wara_area2
wara %>% group_by(area) %>% summarise(total_snails = sum(snail_count))
waraPast <- wara %>%
mutate(sp = "CHFU",
species = "Chlorostoma funebralis",
tideHTm = tide_ht_ft/3.28084,
site = ifelse(area == "areaB", "Wara.B", "Wara.D"),
era = "past") %>%
select(density_m2, size_mm, species, sp, tideHTm, site, era)
waraPast
wara %>% group_by(area) %>% summarise(total_snails = sum(snail_count))
wara
total_snails_transect <- wara %>% group_by(area) %>% summarise(total_snails = sum(snail_count))
total_snails
total_snails_transect
total_snails2 <- total_snails %>%
inner_join(., total_snails_transect, by = "site")
total_snails$transect_estimate <- total_snails_transect$total_snails
total_snails
total_snails <- total_snails %>%
mutate(per_diff = 100 *(transect_estimate - transect_snail_count_total)/transect_snail_count_total)
total_snails
6000/4
92000/1500
93000/2000
transect_length <- c(1, 3, 2, 3, 5)
density_vector <- c(160, 180, 450, 390, 290)
total_snails_vector <- transect_length_vector * 2 * density_vector
transect_length_vector <- c(1, 3, 2, 3, 5)
density_vector <- c(160, 180, 450, 390, 290)
total_snails_vector <- transect_length_vector * 2 * density_vector
total_snails_vector
sum(total_snails_vector)
source("05_summarise_size_data.R")
glimpse(dm2)
theme_set(theme_bw(base_size = 12))
dm2
size_change_text <- data.frame(x = rep(7.5, 3),
y = rep(20, 3),
text1 = c("A", "B", "C"),
species = c("Chlorostoma funebralis",
"Lottia digitalis",
"Littorina keenae"))
ggDat <- dm2 %>% filter(studySub == "subset")
ggDat_gray <- ggDat %>% select(- species)
dodge <- position_dodge(0.1)
ggDat %>%
ggplot(aes(tidalHeight, size_mean, color = era, shape = species)) +
geom_point(alpha = 0.6, size = 2) +
geom_errorbar(aes(ymax = size_mean + size_CI,
ymin = size_mean - size_CI), width = 0.1, alpha = 0.6) +
labs(x = "Tidal height (m)", y = "Size (mm)") +
theme(strip.background = element_blank(),
strip.text = element_text(face = "italic")) +
facet_wrap(~ species) +
guides(shape = FALSE) +
theme(legend.position = c(0, 0.0), legend.justification = c(0, 0)) +
theme(legend.title = element_blank()) +
scale_color_manual(values = c("darkgray", "black")) +
geom_text(aes(x, y, label = text1, color = NULL, shape = NULL),
data = size_change_text, size = 5, hjust = 1, show.legend = FALSE)
dm2
rm(list=ls(all=TRUE))
source("03_identify_size_cutoff.R")
head(dat4)
dat4
facet_panels <- dat4 %>% select(species, era) %>% distinct() %>%
arrange(species, era)
facet_panels
facet_panels <- facet_panels %>%
mutate(facet_labels = paste(LETTERS)[1:6]) %>%
arrange(facet_labels)
dat6 <- dat4 %>%
inner_join(., facet_panels, by = c("species", "era"))
dat6 %>%
ggplot(aes(size1mm)) +
geom_histogram(aes(y = ..density.. * 100), binwidth = 1,
color = "black", fill = "gray") +
facet_grid(era ~ species, switch = "y") +
geom_vline(aes(xintercept = size0.05), linetype = "dashed", color = "red") +
labs(x = "Size (mm)", y = "Frequency (%)") +
theme(strip.background = element_blank()) +
geom_text(data = facet_panels, aes(0.1, 18, label = facet_labels),
inherit.aes = FALSE)
# Littorina keenae
childsDF <- droplevels(filter(dat6, sp == "LIKE"))
childsPast <- childsDF %>% filter(era == "past")
childsPres <- childsDF %>% filter(era == "present")
# Chlorostoma funebralis
waraDF <- droplevels(filter(dat6, sp == "CHFU"))
waraPast <- waraDF %>% filter(era == "past")
waraPres <- waraDF %>% filter(era == "present")
# Lottia digitalis
hexDF <- droplevels(filter(dat6, sp == "LODI"))
hexPast <- hexDF %>% filter(era == "past")
hexPres <- hexDF %>% filter(era == "present")
waraDF
waraDF %>%
ggplot(aes(era, size1mm)) +
geom_point()
waraDF %>%
ggplot(aes(era, size1mm)) +
geom_jitter()
waraDF %>%
ggplot(aes(era, size1mm)) +
geom_dotplot(binwidth = 2, method = "histodot")
x <- data.frame(y = sample(1:20, 100, replace = TRUE))
ggplot(x, aes(y)) + geom_dotplot()
x
waraDF %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, method = "histodot") +
facet_wrap(~ era)
waraDF %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 1, method = "histodot") +
facet_wrap(~ era)
ggplot(x, aes(y)) + geom_dotplot(binwidth=1, method='histodot')
waraDF %>%
ggplot(aes(size1mm)) + geom_dotplot()
waraDF %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, method = "histodot") +
facet_wrap(~ era)
waraDF %>%
ggplot(aes(size1mm)) +
geom_histogram(binwidth = 2) +
facet_wrap(~ era)
waraPast %>%
ggplot(aes(size1mm)) +
geom_histogram(binwidth = 2)
waraPast %>%
ggplot(aes(size1mm))
waraPast %>%
ggplot(aes(size1mm)) +
geom_histogram(binwidth = 2)
waraPast %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2)
waraPast %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, alpha = 0.1)
waraPast
waraPast
waraPast %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 1, alpha = 0.1)
waraPast
waraPast %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 5, alpha = 0.1)
waraPast
waraPast %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, dotsize = 0.5)
waraPast %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, dotsize = 0.5, stackratio = 1.2)
waraPast %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, dotsize = 0.5, stackratio = 1.2) +
scale_y_continuous(limits = c(0, 100))
waraPast %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, dotsize = 0.5, stackratio = 1.2) +
scale_y_continuous(limits = c(0, 500))
waraPast %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, dotsize = 0.5, stackratio = 1.2) +
scale_y_continuous(NULL, breaks = NULL)
waraPast
View(waraPast)
waraPast %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, dotsize = 0.5, stackratio = 1.2) +
scale_y_continuous(NULL, breaks = NULL) +
facet_wrap(~ site)
waraDF %>%
ggplot(aes(era, size1mm)) +
geom_dotplot(binaxis = 'y', stackdir = 'center')
waraDF %>%
ggplot(aes(era, size1mm)) +
geom_dotplot(binaxis = 'y', stackdir = 'center', dotsize = 0.1, stackratio = 0.1)
waraPast %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, dotsize = 0.2, stackratio = .2) +
scale_y_continuous(NULL, breaks = NULL) +
facet_wrap(~ site)
waraPast %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, dotsize = 0.2, stackratio = .2) +
scale_y_continuous(NULL, breaks = NULL)
waraPast %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, dotsize = 0.2, stackratio = 1.2) +
scale_y_continuous(NULL, breaks = NULL)
waraPast %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, dotsize = 0.1, stackratio = 0.8, alpha = 0.5) +
scale_y_continuous(NULL, breaks = NULL)
wara_sample <- sample(waraPast$size1mm, size = 200)
wara_sample
wara_sample <- data.frame(size1mm = sample(waraPast$size1mm, size = 200))
wara_sample
wara_sample %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, dotsize = 0.1, stackratio = 0.8, alpha = 0.5) +
scale_y_continuous(NULL, breaks = NULL)
wara_sample %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, dotsize = 0.1, stackratio = 0.8, alpha = 0.5) +
scale_y_continuous(NULL, breaks = NULL)
wara_sample %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, method = "histodot")
wara_sample %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, method = "histodot") +
ylim(0, 200)
wara_sample %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, method = "histodot", dotsize = 0.5) +
ylim(0, 200)
wara_sample %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, method = "histodot", dotsize = 0.5) +
ylim(0, 10)
wara_sample <- data.frame(size1mm = sample(waraPast$size1mm, size = 100))
wara_sample %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, method = "histodot", dotsize = 0.5) +
ylim(0, 10)
wara_sample %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, method = "histodot", dotsize = 0.5) +
ylim(0, 14)
wara_sample %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, method = "histodot", dotsize = 0.25) +
ylim(0, 14)
wara_sample %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, method = "histodot", dotsize = 0.25, stackratio = 1.1) +
ylim(0, 14)
wara_sample <- data.frame(size1mm = sample(waraPast$size1mm, size = 200))
wara_sample %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, method = "histodot", dotsize = 0.25, stackratio = 1.1) +
ylim(0, 14)
wara_sample %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, method = "histodot", dotsize = 0.1, stackratio = 1.1) +
ylim(0, 14)
wara_sample %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, method = "histodot", dotsize = 0.1, stackratio = 1.1)
wara_sample %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, method = "histodot", dotsize = 0.2, stackratio = 1.1)
wara_sample %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, method = "histodot", dotsize = 0.18, stackratio = 1.1) +
ylim(0, 14)
wara_sample %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, method = "histodot", dotsize = 0.18, stackratio = 1.1)
wara_sample %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, method = "histodot", dotsize = 0.18, stackratio = 1.1) +
ylim(0, 32)
wara_sample %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, method = "histodot", dotsize = 0.18, stackratio = 1.1,
fill = "red") +
ylim(0, 32)
wara_sample <- data.frame(size1mm = sample(waraPast$size1mm, size = 200))
wara_sample %>%
ggplot(aes(size1mm)) +
geom_dotplot(binwidth = 2, method = "histodot", dotsize = 0.18, stackratio = 1.1,
fill = "red") +
ylim(0, 32)
ggsave("hms_open_house/chlorostom_dotplot.png")
